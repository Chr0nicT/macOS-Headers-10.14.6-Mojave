//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "Album.h"

#import "ILAlbumContentsDelegate-Protocol.h"
#import "ILAlbumUpdateDelegate-Protocol.h"

@class IP_ILPhotoAlbum, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableSet, NSOperation, NSOperationQueue, NSSet, NSString, NSTimer, RKImportGroup;

@interface PublishedAlbum : Album <ILAlbumContentsDelegate, ILAlbumUpdateDelegate>
{
    NSString *mServiceKey;
    NSDictionary *mPersistentAlbumData;
    NSDictionary *mPersistentPhotoData;
    NSString *mPublishedURL;
    NSString *mPublishedName;
    BOOL mSyncNeeded;
    NSSet *mPendingPublish;
    NSSet *mPendingUnpublish;
    unsigned long long mRollKey;
    unsigned long long mImportRollKey;
    BOOL mIsLive;
    BOOL mWasEverLive;
    NSDate *mLastSyncDate;
    NSString *mServiceUsername;
    long long mExpectedSyncCount;
    NSDictionary *mPublishSettings;
    IP_ILPhotoAlbum *mPublishedAlbum;
    int mPublishedAlbumType;
    BOOL mPublishRequested;
    BOOL mUnpublishRequested;
    BOOL mPublishIsUpdating;
    NSTimer *mPubSyncTimer;
    NSMutableArray *mPubSubOperationQueue;
    BOOL mHaltPubSubQueue;
    BOOL mIsImporting;
    NSError *mPublishError;
    NSString *mCurrentUpdatingUID;
    _Bool mTrashPhotosOnRemove;
    NSMutableSet *mReservedPaths;
    NSString *mDisplayName;
    struct IPPhotoList *mSyncedPhotos;
    BOOL mSuspendedFaceDetection;
    RKImportGroup *mSyncSessionImportGroup;
    NSOperationQueue *mSyncDeleteQueue;
    NSDictionary *mNewPersistentDictionary;
    unsigned long long mAlbumDeleteScope;
    BOOL mAutoPublishDisabled;
    NSMutableArray *mUpdatePropertiesList;
    NSOperation *mLastBatchPropertyUpdateOperation;
}

+ (void)_removeSelectorFromTerminateQueue:(id)arg1;
+ (void)_registerSelectorInTerminateQueue:(id)arg1;
+ (unsigned long long)applicationShouldTerminate;
+ (BOOL)__canAutoCancelTerminateSheet;
+ (void)_terminateSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
+ (void)_sendCancelToAllPublishAlbums;
+ (void)_sendCancelToAlbumList:(struct IPAlbumList *)arg1;
+ (id)parentRKFolderInDatabase:(id)arg1 forUuid:(id)arg2;
+ (int)rkAlbumType;
+ (void)initialize;
- (id)aeAlbumURL;
- (unsigned int)aeAlbumType;
- (void)migrateServerPhotoIdentifiersInFaceTagsUsingIdentifierMap:(id)arg1;
- (void)notifyMigratedServerPhotoIdentifiers:(id)arg1;
- (void)_publishIsLive;
- (void)_publishStarted:(id)arg1;
- (void)_updateComplete:(id)arg1;
- (void)_updateAlbumsOrder;
- (void)_notifyUIDChanged:(id)arg1;
- (void)_doUnpublish:(id)arg1;
- (void)_unpublishErrorSheetEnded:(id)arg1 returnCode:(int)arg2 contextInfo:(id)arg3;
- (void)_proceedWithUnpublish:(BOOL)arg1;
- (void)_threadedUnpublish:(id)arg1;
- (void)_doPublish:(id)arg1;
- (void)_endChangeSessionMainThread;
- (void)_beginChangeSessionMainThread;
- (unsigned long long)updateAndDeleteQueueCount;
- (void)queueUpdateAndDeleteOperation:(id)arg1;
- (void)syncComplete;
- (void)endChangeSession;
- (void)beginChangeSession;
- (void)statusUpdated:(int)arg1 forAlbum:(id)arg2 withProperties:(id)arg3;
- (void)_delayUpdateStatusWithSelector:(SEL)arg1 properties:(id)arg2;
- (void)_updateStatusEndedWithProperties:(id)arg1;
- (void)_updateStatusCancellingWithProperties:(id)arg1;
- (void)_endPublishOperation;
- (void)_beginPublishOperation;
- (void)_setPersistentDictionary:(id)arg1;
- (void)_createNewPhotoOnMainThread:(id)arg1;
- (void)_deleteSubscribedPhoto:(id)arg1;
- (void)_deletePublishedPhoto:(id)arg1;
- (id)_ensureOriginalMainThread:(struct IPPhotoInfo *)arg1;
- (void)_setPhotoPropertiesMainThread:(id)arg1 forPhoto:(struct IPPhotoInfo *)arg2;
- (void)_updatePhotoPropertiesMainThread:(id)arg1 forPhoto:(struct IPPhotoInfo *)arg2;
- (void)_notifyImageChanged:(struct IPPhotoInfo *)arg1 previewOnly:(BOOL)arg2;
- (void)_threadedRebuildThumbnail:(struct IPPhotoInfo *)arg1;
- (void)_markChangedMainThread:(struct IPPhotoInfo *)arg1;
- (id)_photoPropertiesMainThread:(struct IPPhotoInfo *)arg1;
- (id)_orderedPhotoUIDsMainThread:(BOOL)arg1 userHidden:(int)arg2;
- (void)_updatePropertiesMainThread:(id)arg1;
- (struct CGSize)sizeOfPhotoWithUID:(id)arg1;
- (struct NSObject *)imageFilePathRefForPhotoWithUID:(id)arg1;
- (struct NSObject *)refForMovieWithUID:(id)arg1 transcodingOptions:(id)arg2;
- (struct NSObject *)refForPhotoWithUID:(id)arg1 format:(unsigned int)arg2 quality:(int)arg3 maxDimensions:(unsigned long long)arg4;
- (id)ensureOriginalForPhotoWithUID:(id)arg1;
- (id)persistentDictionaryForAlbum:(id)arg1;
- (void)setPersistentDictionary:(id)arg1 forAlbum:(id)arg2;
- (void)_setPersistentDictionaryOperationBody;
- (void)_setPersistentDictionaryDelay;
- (id)createNewPhotoWithInitialProperties:(id)arg1;
- (void)deleteOldPhotoWithUID:(id)arg1;
- (void)deletePhotoWithUID:(id)arg1;
- (void)newPhotoWithUID:(id)arg1;
- (void)deletePhotosWithUID:(id)arg1;
- (void)_deletePhotosWithUIDMainThread:(id)arg1;
- (void)newPhotosWithUID:(id)arg1;
- (void)_newPhotosWithUIDMainThread:(id)arg1;
- (void)setProperties:(id)arg1 forPhotoWithUID:(id)arg2;
- (void)setProperties:(id)arg1 forPhoto:(struct IPPhotoInfo *)arg2;
- (void)updateProperties:(id)arg1 forPhotoWithUID:(id)arg2;
- (void)updateProperties:(id)arg1 forPhoto:(struct IPPhotoInfo *)arg2;
- (void)_batchUpdateOperationBody;
- (void)_updatePropertiesDelay;
- (id)allPropertiesForPhotoWithUID:(id)arg1;
- (id)allPropertiesForPhoto:(struct IPPhotoInfo *)arg1;
- (id)orderedPhotoUIDs:(BOOL)arg1 userHidden:(int)arg2;
- (id)orderedVisiblePhotoUIDs;
- (id)orderedPhotoUIDs;
- (void)updateProperties:(id)arg1;
- (void)prepareToSyncWithProperties:(id)arg1;
- (id)passwordForAlbum:(id)arg1;
- (id)loginForAlbum:(id)arg1;
- (BOOL)hasPublishError;
- (void)setPublishError:(id)arg1;
- (id)publishError;
- (void)_reloadDataDelay;
- (void)_showSubscriptionError:(id)arg1;
- (BOOL)_showPublishError;
- (void)registerPublishError:(id)arg1 withTitle:(id)arg2;
- (void)_albumErrorSheetEnded:(id)arg1 returnCode:(int)arg2 contextInfo:(id)arg3;
- (void)queueDownloadAndAction:(id)arg1;
- (void)forceQueuePubSubOperation:(id)arg1;
- (void)queuePubSubOperation:(id)arg1;
- (void)_queuePubSubOnMainThread:(id)arg1;
- (void)_queuePendingPubsOnMainThread;
- (void)_clearPubSubQueue;
- (void)_processPubSubQueue:(double)arg1;
- (void)_processPubSubQueue;
- (void)setAlbumDeleteScope:(unsigned long long)arg1;
- (unsigned long long)albumDeleteScope;
- (BOOL)isUpdating;
- (void)_processPubSubOperation:(id)arg1;
- (void)_validateCredentialsMainThread:(id)arg1;
- (void)_setPluginError:(id)arg1;
- (void)_removePhotoWithUIDFromPublish:(id)arg1;
- (void)_addPhotoWithUIDToPublish:(id)arg1;
- (void)publishNow;
- (BOOL)allImageFilesExist;
- (void)updateNow;
- (void)goThereNow;
- (void)divorceFromPublishedAlbum;
- (void)unpublish;
- (void)_markAsUnpublished;
- (void)createPublishedAlbumAtLocation:(id)arg1;
- (void)publish;
- (void)_republishSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)republishAtLocation:(id)arg1 withName:(id)arg2;
- (id)publishSelection:(struct IPPhotoList *)arg1 toService:(id)arg2 withSettings:(id)arg3 embedded:(id)arg4 forceLogin:(BOOL)arg5;
- (void)showPublishSettings;
- (BOOL)canPublish;
- (struct NSObject *)publishPluginForServiceKey:(id)arg1;
- (void)_importEnded:(id)arg1;
- (void)_importStarted:(id)arg1;
- (void)updatePhotoWithUID:(id)arg1 previewOnly:(BOOL)arg2;
- (void)_noteModifiedUID:(id)arg1 propertiesOnly:(BOOL)arg2 additionalNotificationsPending:(BOOL)arg3;
- (void)_mainThreadNoteModifiedUID:(id)arg1 propertiesOnly:(BOOL)arg2 additionalNotificationsPending:(BOOL)arg3;
- (void)_handleDBMessage:(unsigned int)arg1 data1:(void *)arg2 data2:(void *)arg3 data3:(void *)arg4;
- (void)_noteChangedFields:(unsigned long long)arg1;
- (void)_noteChangedPublishProtection;
- (void)_noteChangedPublishSize;
- (void)startAutoPublish;
- (void)stopAutoPublish;
- (void)_resetAutoPublish;
- (unsigned long long)_publishAlbumMask;
- (unsigned long long)_publishPhotoProtectionMask;
- (unsigned long long)_publishAlbumProtectionMask;
- (unsigned long long)_publishRollMask;
- (unsigned long long)_publishMetadataMask;
- (unsigned long long)_publishImageMask;
- (id)altEjectHighlightedIcon:(BOOL)arg1;
- (id)altEjectClickedIcon:(BOOL)arg1;
- (id)altEjectIcon:(BOOL)arg1;
- (id)ejectHighlightedIcon:(BOOL)arg1;
- (id)ejectClickedIcon:(BOOL)arg1;
- (id)ejectIcon:(BOOL)arg1;
- (void)albumProgressCanceled:(id)arg1;
- (void)_cancelProgressSheetDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_doCancelProgress;
- (BOOL)canChangeName;
- (void)resort;
- (int)sortOrder;
- (void)setSubgroup:(id)arg1;
- (id)subgroup;
- (id)iconUsingLargeAppearance:(BOOL)arg1 selected:(BOOL)arg2;
- (unsigned long long)previousVisibleCount;
- (void)willUndoRemove;
- (void)willBeRemoved;
- (BOOL)setProgressValue:(double)arg1;
- (void)_removeChangedPhoto:(struct IPPhotoInfo *)arg1;
- (void)_addChangedPhoto:(struct IPPhotoInfo *)arg1;
- (void)removeWithArray:(struct IPPhotoList *)arg1;
- (struct IPPhotoList *)addUniqueWithArray:(struct IPPhotoList *)arg1 returnResults:(BOOL)arg2;
- (void)addWithArray:(struct IPPhotoList *)arg1;
- (void)alertMaxPhotos;
- (unsigned long long)maxPhotos;
- (void)altEject;
- (BOOL)isAltEjectable;
- (void)eject;
- (BOOL)isEjectable;
- (void)albumWillBeSelected;
- (BOOL)allowsModification;
- (void)setCreationDate:(id)arg1;
- (void)setComments:(id)arg1;
- (BOOL)validateName:(id)arg1;
- (void)setName:(id)arg1;
- (void)setDB:(id)arg1;
- (void)_reloadPhotosFromDB:(id)arg1;
- (BOOL)allowsContributions;
- (id)contributionEmailAddress;
- (int)showCaptionsSetting;
- (void)setPublishUsername:(id)arg1;
- (id)publishUsername;
- (void)setServiceUsername:(id)arg1;
- (id)serviceUsername;
- (id)serviceAccountUuid;
- (id)serviceName;
- (void)setDisplayName:(id)arg1;
- (id)displayName;
- (void)setExpectedSyncCount:(long long)arg1;
- (long long)expectedSyncCount;
- (unsigned long long)effectiveItemCount;
- (id)publishedAlbum;
- (void)resetLastSyncDate;
- (id)photoPublicationUIDForPhotoWithUID:(id)arg1;
- (BOOL)photoWithUIDIsPending:(id)arg1;
- (BOOL)photoIsPending:(struct IPPhotoInfo *)arg1;
- (id)publishedURL;
- (BOOL)isPublished;
- (int)publishType;
- (void)setSlideShowAutoPanAndZoom:(BOOL)arg1;
- (void)setSlideShowTransitionSpeed:(float)arg1;
- (void)setSlideShowTransitionDirection:(long long)arg1;
- (void)setSlideshowTransitionIdentifier:(id)arg1;
- (void)setSlideShowTransitionName:(id)arg1;
- (void)setSlideShowFillScreen:(BOOL)arg1;
- (void)setSlideShowShowControls:(BOOL)arg1;
- (void)setSlideShowUseRankings:(BOOL)arg1;
- (void)setSlideShowUseTitles:(BOOL)arg1;
- (void)setRandomSlideShow:(BOOL)arg1;
- (void)setRepeatSlideShow:(BOOL)arg1;
- (void)setSecondsPerSlide:(int)arg1;
- (void)setSlideShowSongPath:(id)arg1;
- (void)setSlideShowPlaylistName:(id)arg1;
- (void)setEnableBackgroundMusic:(BOOL)arg1;
- (void)setTrashPhotosOnRemove:(_Bool)arg1;
- (_Bool)trashPhotosOnRemove;
- (void)setPublishSettings:(id)arg1 notify:(BOOL)arg2;
- (void)setPublishSettings:(id)arg1;
- (id)publishSettingsMutable;
- (id)publishSettings;
- (void)setLastSyncDate:(id)arg1;
- (id)lastSyncDate;
- (BOOL)wasEverLive;
- (void)setIsLive:(BOOL)arg1;
- (BOOL)isLive;
- (void)setImportRollKey:(unsigned long long)arg1;
- (unsigned long long)importRollKey;
- (void)setRollKey:(unsigned long long)arg1;
- (unsigned long long)rollKey;
- (void)setPendingUnpublish:(id)arg1;
- (id)pendingUnpublishMutable;
- (id)pendingUnpublish;
- (void)setPendingPublish:(id)arg1;
- (id)pendingPublishMutable;
- (id)pendingPublish;
- (void)setPublishedURL:(id)arg1;
- (id)publishedURLString;
- (void)setPersistentPhotoData:(id)arg1;
- (id)persistentPhotoData;
- (void)setPersistentAlbumData:(id)arg1;
- (id)persistentAlbumDataMutable;
- (id)persistentAlbumData;
- (void)setKeyPhotoUID:(id)arg1 notify:(BOOL)arg2;
- (void)setSyncNeeded:(BOOL)arg1;
- (BOOL)syncNeeded;
- (void)setPublishServiceKey:(id)arg1;
- (id)publishServiceXMLName;
- (id)publishServiceKey;
- (void)setPublishedName:(id)arg1;
- (id)publishedName;
- (void)loadSqAlbum:(id)arg1 fromDB:(id)arg2;
- (void)addToDB:(id)arg1;
- (void)checkForUIDDuplicates;
- (void)prepareForRelease;
- (void)dealloc;
- (void)setRKAlbum:(id)arg1;
- (id)initWithDB:(id)arg1 key:(unsigned long long)arg2 persistent:(BOOL)arg3;
- (id)init;

@end

