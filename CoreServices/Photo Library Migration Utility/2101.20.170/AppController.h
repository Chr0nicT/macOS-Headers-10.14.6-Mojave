//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <Cocoa/NSObject.h>

#import "KHPhotoAppDelegateProtocol-Protocol.h"
#import "LibraryMigrationServiceDelegate-Protocol.h"
#import "MapServicesProtocol-Protocol.h"
#import "RKTerminationDelegateProtocol-Protocol.h"

@class ImageDB, LegacyLibraryUpgradeController, LibraryMigrationClient, NSDate, NSFileManager, NSMenuItem, NSMutableArray, NSString, NSURL, NSWindow, PLPLibraryMigrationOptions, PreferenceController, PreferenceKeys, SPODDetector;

@interface AppController : NSObject <KHPhotoAppDelegateProtocol, MapServicesProtocol, LibraryMigrationServiceDelegate, RKTerminationDelegateProtocol>
{
    PreferenceController *mPreferenceController;
    BOOL mHaveOpenedDocument;
    BOOL mHaveFinishedLaunching;
    BOOL mIsFinishingLaunching;
    BOOL mDelayWindowVisibility;
    NSMenuItem *mCWRotateItem;
    NSMenuItem *mCCWRotateItem;
    NSMenuItem *mEmptyTrashItem;
    NSMenuItem *mMoveToTrashItem;
    NSMenuItem *mSubscribeToAlbumItem;
    NSMenuItem *mBrowseBackupsItem;
    NSMenuItem *mBrowseBackupsSeparatorItem;
    NSMenuItem *mPublishToPhotoStreamItem;
    NSMenuItem *mGenerateHiResThumbsItem;
    NSMenuItem *mWelcomeItem;
    NSWindow *mNotDefault;
    NSWindow *mDefaultPanel;
    PreferenceKeys *mPK;
    ImageDB *mDB;
    ImageDB *mTempDB;
    int mStartupLockFile;
    BOOL mLastStartupWasSuccessful;
    NSMutableArray *mDelayedLaunchFiles;
    NSString *mDelayedLaunchURL;
    struct CGSize mScreenSize;
    NSString *mCCWKeyEquivalent;
    unsigned long long mCCWKeyEquivalentModifierMask;
    NSString *mCWKeyEquivalent;
    unsigned long long mCWKeyEquivalentModifierMask;
    BOOL mShouldRunFirewallAlert;
    BOOL mDidBecomeActive;
    BOOL mIsPeabodyBrowsing;
    BOOL mIsMacAppStoreInstalled;
    int _ignoreOneLastWindowClosed;
    SPODDetector *mSpodDetector;
    struct FFPMRSimpleTimer mChameleonPerformanceTimer;
    BOOL _useAlternateFontSizes;
    LegacyLibraryUpgradeController *mLegacyLibraryUpgraderController;
    BOOL mIsUpgrading;
    BOOL mLaunchedByPhotos;
    BOOL mUseHardLinks;
    BOOL mFileSystemSupportsHardLinks;
    NSFileManager *mFileManager;
    NSURL *mSourceURL;
    NSURL *mWorkingURL;
    NSURL *mDestinationURL;
    NSString *mSuggestedDestinationName;
    unsigned long long mStatDirectoryCount;
    unsigned long long mStatFileCopyCount;
    unsigned long long mStatFileHardLinkCount;
    unsigned long long mStatFileSymLinkCount;
    unsigned long long mStatTotalBytes;
    unsigned long long mCloneProgressValue;
    unsigned long long mCloneProgressMaxValue;
    double mCloneProgressLastValue;
    BOOL mWorkingCopyAvailable;
    BOOL mCloning;
    NSDate *mStartDate;
    double mLastTimingReport;
    unsigned long long _availableSpace;
    unsigned long long _availableSpaceAfterClone;
    unsigned long long _availableSpaceAfterUpgrade;
    unsigned long long _spaceRequiredToClone;
    unsigned long long _spaceRequiredToUpgrade;
    unsigned long long _totalSpaceRequired;
    NSString *_printProjectPath;
    int _clientPID;
    BOOL _migrationClientLostConnection;
    BOOL _migrationIsQuitting;
    NSString *mPLMUCFBundleShortVersionString;
    NSString *mPLMUCFBundleVersion;
    double _startTimeInterval;
    double _preHandoffInterval;
    LibraryMigrationClient *_migrationClient;
    PLPLibraryMigrationOptions *_migrationOptions;
    CDUnknownBlockType _migrationOpenReply;
}

+ (id)vmiCache;
+ (id)sharedOperationQueue;
+ (id)controller;
+ (void)initialize;
@property BOOL migrationIsQuitting; // @synthesize migrationIsQuitting=_migrationIsQuitting;
@property BOOL migrationClientLostConnection; // @synthesize migrationClientLostConnection=_migrationClientLostConnection;
@property(copy) CDUnknownBlockType migrationOpenReply; // @synthesize migrationOpenReply=_migrationOpenReply;
@property(retain) PLPLibraryMigrationOptions *migrationOptions; // @synthesize migrationOptions=_migrationOptions;
@property(retain) LibraryMigrationClient *migrationClient; // @synthesize migrationClient=_migrationClient;
@property double preHandoffInterval; // @synthesize preHandoffInterval=_preHandoffInterval;
@property double startTimeInterval; // @synthesize startTimeInterval=_startTimeInterval;
@property(retain, nonatomic) NSString *PLMUCFBundleVersion; // @synthesize PLMUCFBundleVersion=mPLMUCFBundleVersion;
@property(retain, nonatomic) NSString *PLMUCFBundleShortVersionString; // @synthesize PLMUCFBundleShortVersionString=mPLMUCFBundleShortVersionString;
@property(retain, nonatomic) NSString *suggestedDestinationName; // @synthesize suggestedDestinationName=mSuggestedDestinationName;
@property(retain, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=mDestinationURL;
@property(retain, nonatomic) NSURL *workingURL; // @synthesize workingURL=mWorkingURL;
@property(retain, nonatomic) NSURL *sourceURL; // @synthesize sourceURL=mSourceURL;
@property(nonatomic) BOOL useAlternateFontSizes; // @synthesize useAlternateFontSizes=_useAlternateFontSizes;
- (void)triggerDelayedLaunchURL:(id)arg1;
- (void)_registerForSleepNotifications;
- (void)setLoadingString:(id)arg1;
- (void)albumViewHasRowCount;
- (void)runAlertSheetOnWindow:(id)arg1 title:(id)arg2 message:(id)arg3 defaultButton:(id)arg4;
- (void)runAlertSheetWithTitle:(id)arg1 message:(id)arg2 defaultButton:(id)arg3;
- (void)goToURLWithAppName:(id)arg1;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (void)confirmSwitchToRoot:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (void)_launchIPhoto;
- (void)terminateApplication;
- (void)prepareToTerminateApplication;
- (void)_saveBeforeTerminate:(id)arg1;
- (id)_currentSelectionAsRidList;
- (BOOL)finishedLaunching;
- (BOOL)isFinishingLaunching;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(id)arg1;
- (void)applicationDidResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidHide:(id)arg1;
- (BOOL)alreadyRunning;
- (id)archiveDocument;
- (void)_loadPreferences:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)newLibraryChosen:(id)arg1;
- (void)_showWhatsNewIfNeeded;
- (void)_spodMaker:(id)arg1;
- (void)_enableSPODDetector;
- (long long)logNSRunInformationalAlertPanelWithTitle:(id)arg1 message:(id)arg2 defaultButton:(id)arg3 alternateBtn:(id)arg4 otherButton:(id)arg5 desiredReturnValue:(long long)arg6;
- (long long)logNSRunCriticalAlertPanelWithTitle:(id)arg1 message:(id)arg2 defaultButton:(id)arg3 alternateBtn:(id)arg4 otherButton:(id)arg5 desiredReturnValue:(long long)arg6;
- (long long)logNSRunAlertPanelWithTitle:(id)arg1 message:(id)arg2 defaultButton:(id)arg3 alternateBtn:(id)arg4 otherButton:(id)arg5 desiredReturnValue:(long long)arg6;
- (void)sendMigrationComplete:(id)arg1 error:(id)arg2 message:(id)arg3;
- (void)sendProgress:(double)arg1 status:(id)arg2 message:(id)arg3;
- (void)sendXPCProgress:(double)arg1;
- (void)sendXPCMigrationComplete:(id)arg1 error:(id)arg2 toClient:(id)arg3;
- (void)sendXPCOpenReply:(id)arg1 error:(id)arg2;
- (void)clientError:(id)arg1 from:(id)arg2;
- (void)openURLInPhotoLibraryMigrationUtility:(id)arg1 options:(id)arg2 client:(id)arg3 withReply:(CDUnknownBlockType)arg4;
- (void)checkForImmediateExit;
- (void)upgradeLibraryFailedForPath:(id)arg1 error:(id)arg2;
- (void)_deleteWorkingCopy;
- (void)beginUpgradeFromPhotos;
- (id)window;
- (BOOL)_upgradeLibrary;
- (BOOL)upgradeLibrary;
- (BOOL)launchedByPhotos;
- (BOOL)_cloneLibraryFromPath:(id)arg1 toPath:(id)arg2;
- (void)_preflightLibraryAtPath:(id)arg1;
- (void)_preflightPath:(id)arg1;
- (void)_cloneWithSource:(id)arg1 relativeSource:(id)arg2 destination:(id)arg3;
- (void)_cloneLinkWithSource:(id)arg1 destination:(id)arg2;
- (BOOL)_cloneSymLinkAtPath:(id)arg1 toNewPath:(id)arg2;
- (unsigned long long)_spaceRequiredToCloneLibrary:(id)arg1;
- (unsigned long long)_spaceRequiredForDatabaseFolder:(id)arg1;
- (id)_getInstructionForRelativeSource:(id)arg1;
- (BOOL)_createDirectoryAtPath:(id)arg1;
- (void)_setTimeMachineExclusionFor:(id)arg1 shouldExclude:(BOOL)arg2;
- (void)_renameWorkingCopy;
- (id)_createClonePathWithPath:(id)arg1;
- (unsigned long long)_availableDiskSpace:(id)arg1;
- (BOOL)_volumeSupportsHardLinks:(id)arg1;
- (void)_logElapsedTimeWithLabel:(id)arg1;
- (void)_handleProgress;
- (void)startTasks15sAfterLaunch;
- (void)startTasks8sAfterLaunch;
- (void)startTasks3sAfterLaunch;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)_getBundleVersionInfo;
- (BOOL)launchAsServer;
- (id)launcherInfo;
- (BOOL)didLaunchRecently;
- (double)timeIntervalSinceLaunch;
- (BOOL)lastLaunchWasSuccessful;
- (BOOL)_checkAlreadyRunning:(id)arg1;
- (BOOL)hasMacAppStoreReceipt;
- (id)tempDB;
- (id)db;
- (unsigned long long)setTempDB:(id)arg1;
- (unsigned long long)setDB:(id)arg1;
- (unsigned long long)_setDB:(id)arg1 dbPtr:(id *)arg2;
- (id)dbWithKey:(unsigned long long)arg1;
- (id)preferenceController;
- (unsigned long long)freeSpaceAtPath:(id)arg1;
- (id)_deepestExtantPath:(id)arg1;
- (void)dealloc;
- (id)init;
- (BOOL)isPeabodyBrowsing;
- (void)setIsPeabodyBrowsing:(BOOL)arg1;
- (void)logMessageTracerWithDomain:(id)arg1 values:(id)arg2;
- (id)pdfCreatorString;
- (id)temporaryDirectory;
- (id)conversionRoot;
- (id)userProjectDatabasePath;
- (id)themesUpgradeDatabasePath;
- (id)themesDatabasePath;
- (void)setAlternateMapRenditionArchivePath:(id)arg1;
- (id)userDefaultLocation;
- (id)flightPlanInfoFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2;
- (id)mapPOIQuery;
- (BOOL)renditionImageExistsForMapRenditionInfo:(id)arg1;
- (BOOL)renditionImageExistsForMapRenditionWithUID:(id)arg1;
- (BOOL)renditionInfoExistsForMapRenditionWithUID:(id)arg1;
- (id)rebuildMapRenditionWithInfo:(id)arg1;
- (BOOL)destroyMapRenditionWithUID:(id)arg1;
- (id)retrieveMapRenditionInfoWithUID:(id)arg1;
- (id)retrieveMapRenditionWithUID:(id)arg1;
- (void)saveMapRenditionInfo:(id)arg1;
- (void)saveMapRendition:(id)arg1;
- (id)mapRendererWithSourceType:(int)arg1;
- (void)mapClearAllMapRenditionImages;
- (void)mapClearTileCache;
- (void)_ensureMapVectorDbPathSet;
- (void)_ensureArchivePathSet;
- (void)_ensureMapTileCachePathSet;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

