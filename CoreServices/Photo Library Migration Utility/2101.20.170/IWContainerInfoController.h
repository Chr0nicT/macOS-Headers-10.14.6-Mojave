//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <Cocoa/NSObject.h>

#import "IPCompletionMenuDelegate-Protocol.h"
#import "NSTextViewDelegate-Protocol.h"

@class Album, EtchedText, FSContainerInspectorSidebarView, FlipRolloverView, FlippedViewTextField, FlippedViewTextView, IPCompletionMenu, IPKButton, IPKTile, IPKTileView, IPMessageReceiver, IPThumbFactoryAlbum, IPThumbFactoryEvent, IPThumbFactoryPeople, IWSkimmableContainerView, ImageDB, NSArray, NSMutableArray, NSScrollView, NSString, NSTextField, NSTimer, NSView, PersonCompletionMenuCell;

@interface IWContainerInfoController : NSObject <NSTextViewDelegate, IPCompletionMenuDelegate>
{
    NSObject *mContentViewController;
    struct IPPhotoList *mPhotoList;
    id delegate;
    BOOL mEmptySelection;
    Album *mSelectedAlbum;
    struct IPAlbumList *mAlbumList;
    Album *mSelectedEventAlbum;
    struct IPRoll *mSelectedEvent;
    vector_5dbb424c *mRollVector;
    struct IPSelectionList *mSelectedFacesList;
    struct IPPersonSelectable *mSelectedFace;
    ImageDB *mImageDB;
    unsigned long long mKey;
    IPMessageReceiver *mDBMessageReceiver;
    int mCurrentContainerType;
    int mCurrentContainerViewType;
    NSString *mContainerTitleString;
    NSView *mContainerInfoView;
    IWSkimmableContainerView *mContainerThumbnail;
    FlipRolloverView *mTitleRolloverView;
    FlippedViewTextField *mContainerTitle;
    FlipRolloverView *mDescriptionRolloverView;
    FlippedViewTextView *mContainerDescription;
    NSScrollView *mContainerDescriptionScrollView;
    EtchedText *mContainerDateRangeAndCount;
    NSView *mFaceInfoView;
    IWSkimmableContainerView *mFaceThumbnail;
    FlippedViewTextField *mFaceName;
    FlippedViewTextField *mFaceEmail;
    FlippedViewTextField *mFacePhotosDateRange;
    FlippedViewTextField *mFaceNumberOfPhotos;
    FlippedViewTextField *mFaceNumberOfUnconfirmedFaces;
    IPKButton *mFacesGoToUnconfirmedFacesButton;
    NSTextField *mFaceDisplayName;
    BOOL mSearchingForFaces;
    long long mAdditionalFaceCount;
    unsigned long long mCurrentFaceKey;
    NSArray *mFacesLikeCurrentFace;
    NSView *mNoSelectionInfoView;
    FlippedViewTextField *mNoSelectionContainerCount;
    FlippedViewTextField *mNoSelectionDateRange;
    FlippedViewTextField *mNoSelectionNumberOfPhotos;
    IPKTile *mEnclosingContainerInfoTile;
    IPKTile *mEnclosingFaceInfoTile;
    IPKTile *mEnclosingNoSelectionInfoTile;
    IPKTileView *mEnclosingTileView;
    FSContainerInspectorSidebarView *mEnclosingInspectorView;
    IPCompletionMenu *_menu;
    PersonCompletionMenuCell *_personCell;
    NSMutableArray *mContainerInfoObjects;
    BOOL didSubscribeForChange;
    BOOL didSubscribeNotifications;
    BOOL isEditingName;
    BOOL shouldShowKeywords;
    NSTimer *delayTimer;
    NSView *mCurrentInfoView;
    IPThumbFactoryEvent *mThumbFactoryEvent;
    IPThumbFactoryAlbum *mThumbFactoryAlbum;
    IPThumbFactoryPeople *mThumbFactoryPeople;
    double mOriginalContainerInfoViewHeight;
}

@property(readonly) NSView *currentInfoView; // @synthesize currentInfoView=mCurrentInfoView;
@property(readonly) int currentContainerViewType; // @synthesize currentContainerViewType=mCurrentContainerViewType;
@property FSContainerInspectorSidebarView *enclosingInspectorView; // @synthesize enclosingInspectorView=mEnclosingInspectorView;
@property(nonatomic) BOOL hasEmptySelection; // @synthesize hasEmptySelection=mEmptySelection;
@property(readonly) BOOL shouldShowKeywords; // @synthesize shouldShowKeywords;
@property IPKTileView *enclosingTileView; // @synthesize enclosingTileView=mEnclosingTileView;
@property IPKTile *enclosingNoSelectionInfoTile; // @synthesize enclosingNoSelectionInfoTile=mEnclosingNoSelectionInfoTile;
@property IPKTile *enclosingFaceInfoTile; // @synthesize enclosingFaceInfoTile=mEnclosingFaceInfoTile;
@property(nonatomic) IPKTile *enclosingContainerInfoTile; // @synthesize enclosingContainerInfoTile=mEnclosingContainerInfoTile;
@property id delegate; // @synthesize delegate;
- (float)completionMenu:(id)arg1 heightForItem:(id)arg2 atIndex:(long long)arg3;
- (id)completionMenu:(id)arg1 cellForItem:(id)arg2 atIndex:(long long)arg3;
- (void)completionMenu:(id)arg1 willDisplayCell:(id)arg2 forItem:(id)arg3 atIndex:(long long)arg4;
- (id)completionMenu:(id)arg1 completionsForString:(id)arg2;
- (void)undoRedoMergeFaceKeys:(id)arg1 intoFaceKey:(long long)arg2 beginState:(id)arg3 endState:(id)arg4 undoManager:(id)arg5;
- (void)completionMenuStoreValue:(id)arg1;
- (void)gotoUnconfirmedFaces:(id)arg1;
- (void)editFaceDisplayName:(id)arg1;
- (BOOL)textView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (id)containerDetailsView;
- (void)_updateUI;
- (void)_showDescription:(BOOL)arg1;
- (void)_enableTitle:(BOOL)arg1;
- (void)updateUI;
- (void)usePhotoList:(struct IPPhotoList *)arg1 inDB:(id)arg2 fromContentViewController:(id)arg3;
- (void)selectionChanged:(id)arg1;
- (BOOL)isWebAlbumDetailSelected;
- (BOOL)isLastImportAlbumSelected;
- (BOOL)isUserAlbumSelected;
- (void)_faceDataChanged:(id)arg1;
- (void)_albumChanged:(id)arg1;
- (void)stopListeningForSelectionChanges;
- (void)startListeningForSelectionChanges;
- (void)awakeFromNib;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_setupFonts;
- (void)dealloc;
- (id)init;
- (void)preferredScrollerStyleDidChange:(id)arg1;
- (id)_selectedAlbums;
- (id)_selectedWebAlbums;
- (struct IPPhotoList *)_createListOfUniquePhotosFromAlbums:(struct IPAlbumList *)arg1;
- (void)_switchToViewType:(int)arg1;
- (void)_callDelegateSelector:(SEL)arg1;
- (void)_similarFacesDataAvailable:(id)arg1;
- (void)_updateAdditionalFaceCount;
- (void)_updateAlbumListForDetailAlbum;
- (void)_updateUIForEmptyOrMultipleFaceSelection:(unsigned long long)arg1;
- (void)_updateUIForEmptyOrMultipleAlbumSelection:(unsigned long long)arg1;
- (void)_updateUIForEmptyOrMultipleEventSelection:(unsigned long long)arg1;
- (void)_updateUIForNoSelectionAllPhotosSelection;
- (void)_updateUIForMultiplePhotoSelection:(unsigned long long)arg1;
- (void)_updateFacesListBasedOnCurrentSelection;
- (void)_updateFacesListForDetailAlbum;
- (void)_updateRollVectorForDetailAlbum;
- (void)_updateAlbumListBasedOnCurrentSelection;
- (void)_updateRollVectorBasedOnCurrentSelection;
- (id)_dateRangeForPhotos:(struct IPPhotoList *)arg1;
- (id)_dateRangeForAlbums:(struct IPAlbumList *)arg1;
- (id)_dateRangeForEvents:(vector_5dbb424c *)arg1;
- (id)_dateRangeStringForPhotoList:(struct IPPhotoList *)arg1;
- (id)_dateRangeForPhotosInLibrary;
- (unsigned long long)_numberOfPhotosInList:(struct IPPhotoList *)arg1 totalFileSize:(unsigned long long *)arg2 videoCount:(unsigned long long *)arg3;
- (unsigned long long)_numberOfPhotosInAlbums:(struct IPAlbumList *)arg1 totalFileSize:(unsigned long long *)arg2 videoCount:(unsigned long long *)arg3;
- (unsigned long long)_numberOfPhotosInEvents:(vector_5dbb424c *)arg1 totalFileSize:(unsigned long long *)arg2 videoCount:(unsigned long long *)arg3;
- (unsigned long long)_numberOfPhotosInLibrary:(unsigned long long *)arg1;
- (struct IPPhotoList *)_photosForFaces:(id)arg1 visibleFaces:(unsigned long long *)arg2;
- (struct IPPhotoList *)_copyPhotosForFaceKey:(unsigned long long)arg1;
- (id)_thumbnailForFace:(unsigned long long)arg1;
- (id)_thumbnailForAlbum:(id)arg1;
- (id)_thumbnailForEvent:(struct IPRoll *)arg1;
- (void)_hiddenVisibilityChanged:(id)arg1;
- (void)_eventRemoved:(id)arg1;
- (void)_eventInfoChanged:(id)arg1;
- (void)_descriptionTextChanged:(id)arg1;
- (void)_adjustContainerInfoView;
- (void)_descriptionChanged:(id)arg1;
- (void)_updateSelection:(struct IPPhotoList *)arg1;
- (void)_personFullNameChanged:(id)arg1;
- (void)_emailChanged:(id)arg1;
- (void)_titleChanged:(id)arg1;
- (void)_setMultiPlaceHolderText;
- (void)_setSinglePlaceHolderText;
- (void)_setSelectedEvent:(struct IPRoll *)arg1;
- (BOOL)_setPhotoList:(struct IPPhotoList *)arg1;
- (void)_loadNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

