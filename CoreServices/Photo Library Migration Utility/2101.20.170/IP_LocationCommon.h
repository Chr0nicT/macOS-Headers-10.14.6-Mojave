//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <Cocoa/NSObject.h>

@interface IP_LocationCommon : NSObject
{
}

+ (id)userDefaultCity;
+ (id)queryStringByParsingString:(id)arg1;
+ (BOOL)gpsDataExistsForPhotos:(struct IPPhotoList *)arg1;
+ (unsigned long long)predominantPOIForPhotos:(struct IPPhotoList *)arg1;
+ (unsigned long long)predominantAOIForPhotos:(struct IPPhotoList *)arg1;
+ (unsigned long long)predominantNeighborhoodForPhotos:(struct IPPhotoList *)arg1;
+ (unsigned long long)predominantCityForPhotos:(struct IPPhotoList *)arg1;
+ (unsigned long long)predominantCountyForPhotos:(struct IPPhotoList *)arg1;
+ (unsigned long long)predominantProvinceForPhotos:(struct IPPhotoList *)arg1;
+ (unsigned long long)predominantCountryForPhotos:(struct IPPhotoList *)arg1;
+ (void)determineLocationForEvent:(struct IPRoll *)arg1 photos:(struct IPPhotoList *)arg2;
+ (void)determineLocationForEventIfNecessary:(struct IPRoll *)arg1;
+ (void)recomputeLocationBoundsForEvent:(struct IPRoll *)arg1;
+ (void)assignLocationForiegnKeyDict:(id)arg1 toPhoto:(struct IPPhotoInfo *)arg2;
+ (id)locationForiegnKeyDictFromPhoto:(struct IPPhotoInfo *)arg1;
+ (void)assignLocationDict:(id)arg1 toRoll:(struct IPRoll *)arg2;
+ (id)searchDictFromRoll:(struct IPRoll *)arg1;
+ (id)locationDictFromRoll:(struct IPRoll *)arg1;
+ (void)setLocationForRoll:(struct IPRoll *)arg1 fromUserPlaceKey:(unsigned int)arg2;
+ (void)setLocationForRoll:(struct IPRoll *)arg1 fromHierarchy:(id)arg2 name:(id)arg3 preserveExistingData:(BOOL)arg4;
+ (void)setLocationForRoll:(struct IPRoll *)arg1 fromDict:(id)arg2;
+ (id)searchDictFromPhoto:(struct IPPhotoInfo *)arg1;
+ (id)locationDictFromPhoto:(struct IPPhotoInfo *)arg1 places:(id)arg2;
+ (id)inheritedlocationDictFromPhoto:(struct IPPhotoInfo *)arg1 places:(id)arg2;
+ (id)locationDictFromPhoto:(struct IPPhotoInfo *)arg1;
+ (id)inheritedlocationDictFromPhoto:(struct IPPhotoInfo *)arg1;
+ (id)_locationDictFromPhoto:(struct IPPhotoInfo *)arg1 inherit:(BOOL)arg2 places:(id)arg3;
+ (double)convertIPhotoRadius:(double)arg1 atLatitude:(double)arg2;
+ (void)setLocationForPhoto:(struct IPPhotoInfo *)arg1 fromDict:(id)arg2;
+ (void)addGeoHierarchy:(id)arg1 inDB:(id)arg2;
+ (id)itemLabelForIndex:(int)arg1;
+ (void)addFormattedStringsForAddress:(id)arg1 includePersonOrPlace:(BOOL)arg2;
+ (double)distanceFrom:(double)arg1 lng1:(double)arg2 lat2:(double)arg3 lng2:(double)arg4;

@end

