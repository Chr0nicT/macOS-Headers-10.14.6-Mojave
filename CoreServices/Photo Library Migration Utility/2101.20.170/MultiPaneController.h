//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <Cocoa/NSObject.h>

#import "IPKSliderDelegate-Protocol.h"
#import "MWOneUpTransitionAware-Protocol.h"
#import "NSAnimationDelegate-Protocol.h"
#import "NSWindowDelegate-Protocol.h"

@class Album, IPDefinePeopleController, IPKPopUpButton, MWOneUpTransition, MultiPaneToolbarController, NSAnimation, NSMutableArray, NSMutableIndexSet, NSString, NSView, NSWindow;
@protocol MultiPaneContentControllerProtocol, MultiPanePaneProtocol;

@interface MultiPaneController : NSObject <IPKSliderDelegate, MWOneUpTransitionAware, NSWindowDelegate, NSAnimationDelegate>
{
    NSWindow *_window;
    NSView *_baseView;
    NSView<MultiPanePaneProtocol> *_headerView;
    NSView<MultiPanePaneProtocol> *_footerView;
    NSView<MultiPanePaneProtocol> *_leftSidebarView;
    NSView<MultiPanePaneProtocol> *_rightSidebarView;
    NSView<MultiPanePaneProtocol> *_headerPlacardView;
    NSView<MultiPanePaneProtocol> *_footerPlacardView;
    NSView<MultiPanePaneProtocol> *_contentView;
    NSView *_contentViewContainer;
    int _rightSidebarType;
    unsigned long long _visibleRegions;
    BOOL _leftSidebarOverHeader;
    BOOL _rightSidebarOverHeader;
    NSView<MultiPanePaneProtocol> *_previousPane;
    NSView<MultiPanePaneProtocol> *_currentPane;
    id <MultiPaneContentControllerProtocol> _previousController;
    id <MultiPaneContentControllerProtocol> _currentController;
    NSAnimation *_currentPaneAnimation;
    BOOL _rectsComputed;
    struct CGRect _headerVisibleRect;
    struct CGRect _footerVisibleRect;
    struct CGRect _leftSidebarVisibleRect;
    struct CGRect _rightSidebarVisibleRect;
    struct CGRect _headerPlacardVisibleRect;
    struct CGRect _footerPlacardVisibleRect;
    struct CGRect _contentVisibleRect;
    struct CGRect _headerHiddenRect;
    struct CGRect _footerHiddenRect;
    struct CGRect _leftSidebarHiddenRect;
    struct CGRect _rightSidebarHiddenRect;
    struct CGRect _headerPlacardHiddenRect;
    struct CGRect _footerPlacardHiddenRect;
    struct CGRect _contentHiddenRect;
    struct CGRect _footerThumbnailVisibleRect;
    struct CGRect _footerThumbnailHiddenRect;
    Album *_currentAlbum;
    MultiPaneToolbarController *_toolbarController;
    IPDefinePeopleController *_peopleNamingController;
    BOOL _restoringViewState;
    NSMutableArray *_animationCompletionInvocations;
    NSMutableArray *_rightSidebarKeepSets;
    NSMutableIndexSet *_viewsNotSupportingRightSidebar;
    BOOL _needToRestoreInspectorPanel;
    NSMutableArray *_viewStack;
    int _currentViewType;
    int _switchingViewType;
    NSView<MultiPanePaneProtocol> *_activeView;
    id <MultiPaneContentControllerProtocol> _activeViewController;
    NSView *_viewBeingUninstalled;
    NSView<MultiPanePaneProtocol> *_loadingView;
    id <MultiPaneContentControllerProtocol> _loadingViewController;
    NSView<MultiPanePaneProtocol> *_eventView;
    id <MultiPaneContentControllerProtocol> _eventViewController;
    NSMutableArray *_eventViewObjects;
    NSView<MultiPanePaneProtocol> *_peopleView;
    id <MultiPaneContentControllerProtocol> _peopleViewController;
    NSMutableArray *_peopleViewObjects;
    NSView<MultiPanePaneProtocol> *_findFacesView;
    id <MultiPaneContentControllerProtocol> _findFacesViewController;
    NSView<MultiPanePaneProtocol> *_upgradeFacesView;
    id <MultiPaneContentControllerProtocol> _upgradeFacesViewController;
    NSView<MultiPanePaneProtocol> *_oneUpView;
    id <MultiPaneContentControllerProtocol> _oneUpViewController;
    NSView<MultiPanePaneProtocol> *_editView;
    id <MultiPaneContentControllerProtocol> _editViewController;
    NSView<MultiPanePaneProtocol> *_albumView;
    id <MultiPaneContentControllerProtocol> _albumViewController;
    NSMutableArray *_albumViewObjects;
    NSView<MultiPanePaneProtocol> *_webAlbumView;
    id <MultiPaneContentControllerProtocol> _webAlbumViewController;
    NSMutableArray *_webAlbumViewObjects;
    NSView<MultiPanePaneProtocol> *_keepsakeView;
    id <MultiPaneContentControllerProtocol> _keepsakeViewController;
    NSView<MultiPanePaneProtocol> *_placeView;
    id <MultiPaneContentControllerProtocol> _placeViewController;
    NSMutableArray *_placeViewObjects;
    NSView<MultiPanePaneProtocol> *_inspectorSidebarView;
    NSView<MultiPanePaneProtocol> *_containerInspectorSidebarView;
    NSView<MultiPanePaneProtocol> *_webSharingSidebarView;
    NSView<MultiPanePaneProtocol> *_adjustSidebarView;
    NSView<MultiPanePaneProtocol> *_eventDetailView;
    id <MultiPaneContentControllerProtocol> _eventDetailViewController;
    NSMutableArray *_eventDetailViewObjects;
    NSView<MultiPanePaneProtocol> *_localPrintingView;
    id <MultiPaneContentControllerProtocol> _localPrintingViewController;
    NSMutableArray *_localPrintingViewObjects;
    NSView<MultiPanePaneProtocol> *_albumDetailView;
    id <MultiPaneContentControllerProtocol> _albumDetailViewController;
    NSMutableArray *_albumDetailViewObjects;
    NSView<MultiPanePaneProtocol> *_placesDetailView;
    id <MultiPaneContentControllerProtocol> _placesDetailViewController;
    NSMutableArray *_placesDetailViewObjects;
    NSView<MultiPanePaneProtocol> *_peopleDetailView;
    id <MultiPaneContentControllerProtocol> _peopleDetailViewController;
    NSMutableArray *_peopleDetailViewObjects;
    NSView<MultiPanePaneProtocol> *_peopleConfirmView;
    id <MultiPaneContentControllerProtocol> _peopleConfirmViewController;
    NSMutableArray *_peopleConfirmViewObjects;
    NSView<MultiPanePaneProtocol> *_projectBirdseyeView;
    NSView<MultiPanePaneProtocol> *_projectLayoutView;
    NSView<MultiPanePaneProtocol> *_bookPickerView;
    NSView<MultiPanePaneProtocol> *_cardPickerView;
    NSView<MultiPanePaneProtocol> *_calendarPickerView;
    id <MultiPaneContentControllerProtocol> _printProjectViewController;
    NSView<MultiPanePaneProtocol> *_projectSettingsSidebarView;
    NSView<MultiPanePaneProtocol> *_emailView;
    id <MultiPaneContentControllerProtocol> _emailViewController;
    NSView<MultiPanePaneProtocol> *_importView;
    id <MultiPaneContentControllerProtocol> _importViewController;
    NSMutableArray *_importViewObjects;
    NSView<MultiPanePaneProtocol> *_duplicatesView;
    id <MultiPaneContentControllerProtocol> _duplicatesViewController;
    NSMutableArray *_duplicatesViewObjects;
    NSView<MultiPanePaneProtocol> *_slideshowView;
    NSView *_slideshowContainerView;
    id <MultiPaneContentControllerProtocol> _slideshowViewController;
    NSMutableArray *_slideshowViewObjects;
    NSView<MultiPanePaneProtocol> *_selectiveImportView;
    NSView *_selectiveImportContainerView;
    id <MultiPaneContentControllerProtocol> _selectiveImportViewController;
    NSMutableArray *_selectiveImportViewObjects;
    id <MultiPaneContentControllerProtocol> _photoStreamFirstTimeHelpViewController;
    IPKPopUpButton *_tempThemesPopup;
    BOOL _isAnimating;
    NSView<MultiPanePaneProtocol> *_animatingPane;
    long long _numPendingAnimations;
    BOOL _placesWidgetOpen;
    BOOL _sidebarOpenBeforeEmail;
    BOOL _hidingAdjustSidebar;
    struct IPSelectionList *_currentSelectionOrAlbum;
    MWOneUpTransition *_oneUpTransition;
    BOOL _isTransitioningToOneUp;
    BOOL _isPoppingStack;
    unsigned long long _numPendingStackPops;
}

@property BOOL placesWidgetOpen; // @synthesize placesWidgetOpen=_placesWidgetOpen;
@property(readonly) id <MultiPaneContentControllerProtocol> currentController; // @synthesize currentController=_currentController;
@property(retain) NSView<MultiPanePaneProtocol> *currentPane; // @synthesize currentPane=_currentPane;
@property(readonly) id <MultiPaneContentControllerProtocol> previousController; // @synthesize previousController=_previousController;
@property(retain) NSView<MultiPanePaneProtocol> *previousPane; // @synthesize previousPane=_previousPane;
@property struct CGRect contentVisibleRect; // @synthesize contentVisibleRect=_contentVisibleRect;
@property BOOL hidingAdjustSidebar; // @synthesize hidingAdjustSidebar=_hidingAdjustSidebar;
@property BOOL restoringViewState; // @synthesize restoringViewState=_restoringViewState;
@property int rightSidebarType; // @synthesize rightSidebarType=_rightSidebarType;
@property(readonly) NSMutableArray *animationCompletionInvocations; // @synthesize animationCompletionInvocations=_animationCompletionInvocations;
@property(readonly) NSView<MultiPanePaneProtocol> *activeView; // @synthesize activeView=_activeView;
@property(readonly) id <MultiPaneContentControllerProtocol> activeViewController; // @synthesize activeViewController=_activeViewController;
@property(retain, nonatomic) Album *currentAlbum; // @synthesize currentAlbum=_currentAlbum;
@property(nonatomic) BOOL rightSidebarOverHeader; // @synthesize rightSidebarOverHeader=_rightSidebarOverHeader;
@property(nonatomic) BOOL leftSidebarOverHeader; // @synthesize leftSidebarOverHeader=_leftSidebarOverHeader;
@property(readonly) MultiPaneToolbarController *toolbarController; // @synthesize toolbarController=_toolbarController;
@property(readonly) int switchingViewType; // @synthesize switchingViewType=_switchingViewType;
@property(readonly) int currentViewType; // @synthesize currentViewType=_currentViewType;
@property(readonly) NSView *contentViewContainer; // @synthesize contentViewContainer=_contentViewContainer;
@property(readonly) NSView<MultiPanePaneProtocol> *contentView; // @synthesize contentView=_contentView;
@property(readonly) NSView<MultiPanePaneProtocol> *footerPlacardView; // @synthesize footerPlacardView=_footerPlacardView;
@property(readonly) NSView<MultiPanePaneProtocol> *headerPlacardView; // @synthesize headerPlacardView=_headerPlacardView;
@property(readonly) NSView<MultiPanePaneProtocol> *rightSidebarView; // @synthesize rightSidebarView=_rightSidebarView;
@property(readonly) NSView<MultiPanePaneProtocol> *leftSidebarView; // @synthesize leftSidebarView=_leftSidebarView;
@property(readonly) NSView<MultiPanePaneProtocol> *footerView; // @synthesize footerView=_footerView;
@property(readonly) NSView<MultiPanePaneProtocol> *headerView; // @synthesize headerView=_headerView;
@property NSView *baseView; // @synthesize baseView=_baseView;
@property(readonly) NSMutableArray *viewStack; // @synthesize viewStack=_viewStack;
@property(readonly) NSWindow *window; // @synthesize window=_window;
- (void)importPhotoStreamPhotosWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)emailDidEnd;
- (void)delaySidebarReappearance;
- (void)everythingInstalled;
- (id)_khAppSelectionContext;
- (void)showBackups:(id)arg1;
- (void)zoomSliderDidChange:(id)arg1;
- (void)sliderStoppedTracking:(id)arg1;
- (void)sliderStartedTracking:(id)arg1;
- (void)setZoomSliderPosition:(double)arg1;
- (void)setZoomSliderPosition:(double)arg1 notify:(BOOL)arg2;
- (void)setZoomSliderEnabled:(BOOL)arg1;
- (void)orderPrints;
- (void)_setupOrderViewWithReset:(BOOL)arg1;
- (void)publishToPhotoStream;
- (void)createNewEmail;
- (void)createNewCalendar;
- (void)createNewCard;
- (void)createNewBook;
- (void)_messageTracerForProductType:(id)arg1 withPhotoSelection:(struct IPPhotoList *)arg2;
- (BOOL)checkThemes;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_repopulateFooter;
- (void)pushToEmailViewWithUUID:(id)arg1;
- (void)pushToEmailView:(id)arg1;
- (void)delayEmail;
- (void)pushToCalendarThemeChooser;
- (void)pushToCalendarPickerView:(id)arg1;
- (void)pushToCardThemeChooser;
- (void)pushToCardPickerView:(id)arg1;
- (void)choseTheme:(id)arg1;
- (void)pushToBookThemeChooser;
- (void)pushToBookPickerView:(id)arg1;
- (void)switchToProjectLayoutView:(id)arg1;
- (void)switchToProjectLayoutView;
- (void)pushToProjectLayoutView;
- (void)switchToProjectBirdseyeView:(id)arg1;
- (void)switchToProjectBirdseyeView;
- (void)toggleProjectSettingsSidebarPhotos;
- (void)toggleProjectSettingsSidebarOptions;
- (void)toggleProjectSettingsSidebarLayout;
- (void)hideProjectSettingsSidebar:(id)arg1;
- (void)showProjectSettingsSidebar:(id)arg1;
- (void)addProjectPage;
- (void)hideAdjustSidebar;
- (void)showAdjustSidebar:(BOOL)arg1;
- (void)showAdjustSidebar;
- (void)editButton:(id)arg1;
- (void)toggleWebSharingSidebar;
- (void)showWebSharingSidebar:(id)arg1;
- (void)updateInspectorForSelection;
- (void)selectionChanged:(id)arg1;
- (void)toggleInspectorSidebarWithRestoreMode:(BOOL)arg1;
- (void)toggleInspectorSidebar;
- (void)showInspectorSidebar:(id)arg1;
- (void)_notifySidebarChangedTo:(int)arg1 visible:(BOOL)arg2;
- (void)pushToLoadingView;
- (void)pushToPeopleConfirmView:(id)arg1;
- (void)pushToPeopleDetailView:(id)arg1 orderedFaceKeys:(id)arg2 selectingPhoto:(struct IPPhotoInfo *)arg3;
- (void)pushToPlacesDetailView:(id)arg1;
- (void)pushToAlbumDetailView:(id)arg1 selectingPhoto:(struct IPPhotoInfo *)arg2;
- (void)pushToEventDetailView:(id)arg1 selectingPhoto:(struct IPPhotoInfo *)arg2;
- (void)pushToEditView:(id)arg1 firstIndex:(int)arg2;
- (void)pushToEditView;
- (void)pushToEditView:(BOOL)arg1;
- (void)didOneUpTransition:(id)arg1;
- (BOOL)isInOneUpTransition;
- (void)_hideOneUpTransition;
- (void)pushToOneUpViewForcingInspectorSidebar:(BOOL)arg1;
- (void)pushToOneUpView;
- (void)pushToDuplicatesView;
- (void)switchToPhotoStreamView:(id)arg1;
- (void)updatePhotoStreamView:(id)arg1;
- (void)switchToAlbumDetailView:(id)arg1;
- (void)switchToPeopleDetailView:(id)arg1;
- (void)switchToEventDetailView:(id)arg1;
- (void)switchToLocalPrintingView:(id)arg1;
- (void)switchToImportView:(id)arg1;
- (void)switchToSelectiveImportView:(id)arg1;
- (void)switchToSlideshowView:(id)arg1;
- (void)pushToSlideshowView:(id)arg1;
- (void)switchToKeepsakeView;
- (void)switchToWebAlbumView:(id)arg1;
- (void)switchToAlbumView;
- (void)switchToPlaceView:(id)arg1;
- (void)switchToPlaceView;
- (void)switchToUpgradeFacesView;
- (void)switchToFindFacesView;
- (void)switchToPeopleView:(id)arg1;
- (void)switchToPeopleView;
- (void)switchToEventView:(id)arg1;
- (void)switchToEventView;
- (void)switchToLoadingView;
- (void)_setToolbarsVisible:(BOOL)arg1 allowAnimation:(BOOL)arg2;
- (void)cancelRequestToShowToolbars;
- (void)requestToShowToolbars;
- (void)switchToView:(int)arg1 rightSidebarType:(int)arg2 state:(id)arg3;
- (BOOL)canUseCAAnimations;
- (void)switchToView:(int)arg1 state:(id)arg2;
- (void)updateProjectController:(id)arg1 toStateforViewType:(int)arg2;
- (void)updateRightSidebarForSwitchToView:(int)arg1;
- (BOOL)wantsFooterForController:(id)arg1;
- (BOOL)isFullScreen;
- (BOOL)shouldAutoHideToolbars;
- (id)firstResponderSafeView;
- (BOOL)keepRightSidebarAcrossSwitchFrom:(int)arg1 to:(int)arg2;
- (void)injectAlbumViewAsViewStackRoot;
- (void)injectAlbumViewAsViewStackRoot:(id)arg1;
- (void)injectEventViewAsViewStackRoot:(id)arg1;
- (void)injectWebAlbumView:(id)arg1 asViewStackRoot:(id)arg2;
- (BOOL)popViewOffViewStack;
- (void)pushViewOnViewStack;
- (void)pushViewOnViewStack:(id)arg1;
- (long long)viewStackDepth;
- (void)clearViewStack;
- (void)restoreViewStack:(id)arg1;
- (id)archiveViewStack;
- (void)validateArchivedViewStack:(id)arg1;
- (id)customContainerSelectionAlbum:(struct IPSelectionList *)arg1;
- (struct IPSelectionList *)currentSelectionOrFirstOfAlbumNoMovies;
- (BOOL)currentSelectionIsEqual:(struct IPPhotoList *)arg1;
- (BOOL)currentSelectionOrEntireAlbumAreEqual:(struct IPPhotoList *)arg1;
- (BOOL)currentAlbumIsSearch;
- (BOOL)currentOrSelectedAlbumIsPhotoStream;
- (struct IPSelectionList *)currentSelectionOrEntireAlbum;
- (struct IPSelectionList *)currentSelection;
@property(readonly) id <MultiPaneContentControllerProtocol> photoStreamFirstTimeHelpViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *photoStreamFirstTimeHelpView;
@property(readonly) id <MultiPaneContentControllerProtocol> selectiveImportViewController;
@property(readonly) NSView *selectiveImportContainerView;
@property(readonly) NSView<MultiPanePaneProtocol> *selectiveImportView;
@property(readonly) id <MultiPaneContentControllerProtocol> slideshowViewController;
@property(readonly) NSView *slideshowContainerView;
@property(readonly) NSView<MultiPanePaneProtocol> *slideshowView;
@property(readonly) id <MultiPaneContentControllerProtocol> duplicatesViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *duplicatesView;
@property(readonly) id <MultiPaneContentControllerProtocol> importViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *importView;
@property(readonly) id <MultiPaneContentControllerProtocol> emailViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *emailView;
@property(readonly) NSView<MultiPanePaneProtocol> *projectSettingsSidebarView;
@property(readonly) id <MultiPaneContentControllerProtocol> printProjectViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *calendarPickerView;
@property(readonly) NSView<MultiPanePaneProtocol> *cardPickerView;
@property(readonly) NSView<MultiPanePaneProtocol> *bookPickerView;
@property(readonly) NSView<MultiPanePaneProtocol> *projectLayoutView;
@property(readonly) NSView<MultiPanePaneProtocol> *projectBirdseyeView;
@property(readonly) NSView<MultiPanePaneProtocol> *adjustSidebarView;
- (void)warmNibs;
@property(readonly) NSView<MultiPanePaneProtocol> *webSharingSidebarView;
- (id)containerInspectorSidebarView;
@property(readonly) NSView<MultiPanePaneProtocol> *inspectorSidebarView;
@property(readonly) id <MultiPaneContentControllerProtocol> peopleConfirmViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *peopleConfirmView;
@property(readonly) id <MultiPaneContentControllerProtocol> peopleDetailViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *peopleDetailView;
@property(readonly) id <MultiPaneContentControllerProtocol> placesDetailViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *placesDetailView;
@property(readonly) id <MultiPaneContentControllerProtocol> albumDetailViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *albumDetailView;
@property(readonly) id <MultiPaneContentControllerProtocol> eventDetailViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *eventDetailView;
@property(readonly) id <MultiPaneContentControllerProtocol> editViewController;
- (BOOL)isEditViewControllerLoaded;
@property(readonly) NSView<MultiPanePaneProtocol> *editView;
@property(readonly) id <MultiPaneContentControllerProtocol> oneUpViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *oneUpView;
@property(readonly) id <MultiPaneContentControllerProtocol> keepsakeViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *keepsakeView;
@property(readonly) id <MultiPaneContentControllerProtocol> localPrintingViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *localPrintingView;
@property(readonly) id <MultiPaneContentControllerProtocol> webAlbumViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *webAlbumView;
@property(readonly) id <MultiPaneContentControllerProtocol> albumViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *albumView;
@property(readonly) id <MultiPaneContentControllerProtocol> placeViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *placeView;
@property(readonly) id <MultiPaneContentControllerProtocol> upgradeFacesViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *upgradeFacesView;
@property(readonly) id <MultiPaneContentControllerProtocol> findFacesViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *findFacesView;
@property(readonly) id <MultiPaneContentControllerProtocol> peopleViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *peopleView;
@property(readonly) id <MultiPaneContentControllerProtocol> eventViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *eventView;
@property(readonly) id <MultiPaneContentControllerProtocol> loadingViewController;
@property(readonly) NSView<MultiPanePaneProtocol> *loadingView;
@property(readonly) IPDefinePeopleController *peopleNamingController;
- (id)wrapInScrollView:(id)arg1;
- (id)thumbView;
- (id)thumbAnchorView;
- (void)leaveEditGoToOneUp:(BOOL)arg1 waitForRenderedImage:(BOOL)arg2;
- (void)show:(BOOL)arg1 region:(int)arg2 animate:(BOOL)arg3;
- (id)controllerForType:(int)arg1;
- (id)viewForType:(int)arg1;
- (id)viewForRegion:(int)arg1;
- (void)setView:(id)arg1 containerView:(id)arg2 forRegion:(int)arg3 state:(id)arg4;
- (struct CGRect)frameForRegion:(int)arg1;
- (void)computeRects;
- (BOOL)isAnimating;
- (void)stopAnimating;
- (void)animationDidStop:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)triggerAnimationCompetionMessagesAfterDelay;
- (void)adjustPanes:(BOOL)arg1;
- (void)becomeActive:(id)arg1;
- (void)resignActive:(id)arg1;
- (void)didActivateMultiPaneController:(id)arg1;
- (BOOL)toolbarsVisible;
- (BOOL)contentVisible;
- (BOOL)footerPlacardVisible;
- (BOOL)headerPlacardVisible;
- (BOOL)rightSidebarVisible;
- (BOOL)leftSidebarVisible;
- (BOOL)footerVisible;
- (BOOL)headerVisible;
- (BOOL)isVisible;
- (void)hide;
- (void)show;
- (void)create;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

