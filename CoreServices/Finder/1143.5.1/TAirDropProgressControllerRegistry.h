//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TCoalescingNodeObserverProtocol-Protocol.h"

@class NSString;

@interface TAirDropProgressControllerRegistry : NSObject <TCoalescingNodeObserverProtocol>
{
    struct TNSRef<NSMutableArray<TAirDropProgressController *>, void> _controllers;
    struct vector<NSObject<TAirDropProgressControllerDelegate>*, std::__1::allocator<NSObject<TAirDropProgressControllerDelegate>*>> _delegates;
    struct shared_ptr<TCoalescingNodeObserverCocoaBridge> _nodeObserver;
    _Bool _isUserInAirDrop;
    TNSWeakPtr_34793079 _updateControllersToken;
    struct TNotificationCenterObserver _userEnteredOrExitedAirDropObserver;
    struct TNotificationCenterObserver _airDropAvailableStateChangedObserver;
}

+ (void)removeAllControllers;
+ (void)removeController:(id)arg1;
+ (_Bool)isPopoverShown;
+ (id)findControllerForNode:(const struct TFENode *)arg1;
+ (id)controllerForNode:(const struct TFENode *)arg1;
+ (void)enumerateDelegates:(const function_599114e4 *)arg1;
+ (void)unregisterProgressControllerDelegate:(id)arg1;
+ (void)registerProgressControllerDelegate:(id)arg1;
+ (void)tearDownIfNeeded;
+ (id)getOrCreateRegistry;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)findControllerForNodeLocked:(const struct TFENode *)arg1;
- (void)coalescingNodeObserver:(struct TCoalescingNodeObserver *)arg1 nodesAdded:(const struct TFENodeVector *)arg2 toObservedNode:(const struct TFENode *)arg3;
- (void)airDropAvailabilityChanged:(id)arg1;
- (void)userEnteredOrExitedAirDrop:(id)arg1;
- (void)setIsUserInAirDrop:(_Bool)arg1;
- (void)updateControllers;
- (void)callUpdateControllersAfterDelay;
- (void)aboutToTearDown;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

