//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

@class BRContainer, CALayer, CNAvatarCache, CNAvatarViewController, CNContactStore, IPropertyValueApplicator, IPropertyValueExtractor, NSAccessibilityCustomAction, NSArray, NSArrayController, NSAttributedString, NSBackgroundActivityScheduler, NSBox, NSButton, NSColor, NSCustomTouchBarItem, NSData, NSDate, NSDateComponents, NSDateInterval, NSDictionary, NSEvent, NSFont, NSGroupTouchBarItem, NSImage, NSImmediateActionGestureRecognizer, NSIndexSet, NSLayoutConstraint, NSLayoutGuide, NSMenu, NSMetadataQuery, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSMutableOrderedSet, NSMutableSet, NSNumber, NSObject, NSOperationQueue, NSPasteboard, NSPopoverTouchBarItem, NSSavePanel, NSScrollView, NSSegmentedControl, NSSet, NSSharingServicePicker, NSSharingServicePickerTouchBarItem, NSSplitViewItem, NSStackView, NSString, NSTextContainer, NSTextField, NSTextStorage, NSTimer, NSToolbar, NSTouchBar, NSTrackingArea, NSURL, NSURLConnection, NSUbiquitousKeyValueStore, NSValue, NSView, NSViewController, NSVisualEffectView, NSWindow, QLInlinePreviewController, QLPreviewPanel, SFAirDropDiscoveryController, SFWirelessSettingsController, TAirDropCollectionViewLayout, TAirDropDiscoverableModePopoverViewController, TAirDropDiscoveryController, TAirDropInfoViewController, TAirDropLegacyModePopoverViewController, TAirDropNotAvailableViewController, TAirDropProgressLayer, TArrangeByMenuController, TBVDSBulkConfigChangedState, TBackupContainerDelegate, TBaseBrowserWindowController, TBasicImageView, TBrowserContainerController, TBrowserImmediateActionGestureRecognizerDelegate, TBrowserSplitViewController, TBrowserViewContainerController, TBrowserViewController, TBrowserViewDataSource, TBrowserViewSwitchAnimator, TBrowserWindowPlusTabDraggingDelegate, TBulkRenameController, TButton, TClipImageView, TColumnPreviewController, TConnectToFieldEditor, TContainerLayoutManager, TCoverWindow, TCustomWherePathTextView, TDFRAddTagsViewController, TDFRSearchScopeViewController, TDelayedPopulationViewController, TDesktopBandSelectionController, TDesktopGridLayout, TDesktopGridLayoutController, TDesktopGridLayoutControllerDelegate, TDesktopIconSpatialDataController, TDesktopIconView, TDesktopInlinePreviewController, TDesktopInlineProgressView, TDesktopMultiViewController, TDesktopSubtitleTextField, TDesktopTitleBubbleView, TDesktopTitleLayoutManager, TDesktopViewController, TDesktopViewDataSource, TDesktopViewDataSourceItem, TDesktopViewDataSourcePileItem, TFFKViewController, TFileSizeFormatter, TFloatingInputView, TGalleryIconView, TGalleryPreviewViewController, TGalleryViewSettings, TGoToAutoCompletionController, TGoToFieldEditor, TGroupInFolderAnimationController, TICloudAccountManager, TICloudBadgeButton, TICloudBadgePlaceholderView, TICloudDriveSpaceObserver, TICloudNoDocumentsViewController, TICloudProgressObserver, TIconSelectionView, TIconSpatialDataController, TIconView, TIconViewSettings, TImageView, TInlineCancelButtonLayer, TInlinePreviewData, TInlineProgressBarLayer, TInlineProgressHostLayer, TInlineProgressView, TInternalCloudProgressObserver, TKeyValueObserverGlue, TLayer, TListHeaderCellView, TListHeaderRowView, TListNameCellView, TListNameSubtitleTextField, TListTextField, TListViewSettings, TMDUserSearch, TMidnightTimer, TNSSharedFileListItem, TNodeViewSettings, TNodesAndValues, TNotificationCenterObserverGlue, TOpenWithMenuFactory, TOpenWithPopupMenuController, TOverlappingController, TPathBarController, TPieChartProgressLayer, TPopoverController, TPreviewOptions, TPreviewOptionsController, TPreviewOptionsDynamicGroupSettings, TPreviewOptionsGroup, TPreviewOptionsGroupSettings, TProgressStatusViewController, TProgressWindowController, TPropertyLogicalSizeExtractor, TPropertyQLPreviewViewExtractor, TQLMultiPreviewItem, TQLMultiPreviewView, TQLMultiPreviewViewCommonDelegate, TQLPreviewViewZoomController, TQueuedPopoverController, TQuickActionButton, TQuickActionsViewController, TRenameOperation, TRunAfterHelper, TScrollView, TSearchCriteriaSheetController, TSearchCriteriaViewController, TSearchForSliceController, TSearchScopeSliceController, TSearchSliceController, TShrinkToFitController, TShrinkToFitWindow, TSidebarSplitViewController, TSidebarViewController, TStatusBarController, TTableViewController, TTableViewShrinkToFitController, TTagColumnTableViewController, TTagEditorController, TTagInfo, TTagOperationDelegate, TTagSuggestionsWindowController, TTaggingPopoverContentViewController, TTaggingSuggestionsViewController, TTagsImageView, TTargetActionFunctor, TTextField, TTitlePopoverController, TToolbarController, TTrackingImageView, TUpdateLayerView, TValidatingDateFormatter, TViewGridLayoutController, TViewGridLayoutControllerDelegate, TViewOptionsSettingsController, TWindowHistory, _NSQuickAction, _NSQuickActionProvider, _NSQuickActionValidator;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AEDesc {
    unsigned int _field1;
    struct OpaqueAEDataStorageType **_field2;
};

struct CGImage;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSRegionObject;

struct CGSize {
    double width;
    double height;
};

struct ColumnDesc;

struct DSSemaphore;

struct DesktopIconSpatialData {
    unsigned int _field1;
    unsigned short _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    short _field8;
};

struct DragTarget {
    unsigned long long _field1;
    int _field2;
    unsigned int _field3;
};

struct FSPermissionInfo {
    unsigned int userID;
    unsigned int groupID;
    unsigned char reserved1;
    unsigned char userAccess;
    unsigned short mode;
    struct __FSFileSecurity *fileSec;
};

struct FolderContentChangeDescriptor {
    struct TFENode *_field1;
    struct TFENodeVector *_field2;
    struct TFENodeVector *_field3;
    struct TGroupedNodes *_field4;
    id _field5;
    _Bool _field6;
};

struct HFSUniStr255 {
    unsigned short length;
    unsigned short unicode[255];
};

struct IAirDropBaseOperationController;

struct IAsyncChooseAppBinder {
    CDUnknownFunctionPointerType *_field1;
};

struct IBaseQueueStyle<TFENode>;

struct INWOperationController {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct TRef<__SFOperation *, TRetainReleasePolicy<SFOperationRef>> _field3;
    struct TString _field4;
    long long _field5;
    long long _field6;
    id _field7;
    unsigned long long _field8;
};

struct IPrefsObserver {
    CDUnknownFunctionPointerType *_field1;
    struct TNSRef<TPrefsObserverBridge, void> _field2;
};

struct ISpawnOrigin;

struct IconImageSpec {
    double _field1;
    double _field2;
    _Bool _field3;
    _Bool _field4;
};

struct IconSpatialData {
    int _field1;
    int _field2;
    int _field3;
    short _field4;
};

struct Location {
    long long x;
    long long y;
};

struct NSEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct NSObject {
    Class _field1;
};

struct NodeEventReply {
    struct DSSemaphore *_field1;
    unsigned int _field2;
    int _field3;
};

struct NodeNameSyntaxHint {
    unsigned int _field1;
    unsigned int _field2;
    unsigned char _field3;
};

struct OpaqueAEDataStorageType;

struct OpaqueCSBackupDestinationRef;

struct OpaqueCoreDrag {
    unsigned int _field1;
    unsigned int _field2;
    struct DragTarget _field3;
    struct DragTarget _field4;
    struct CGPoint _field5;
    struct CGPoint _field6;
    struct CGPoint _field7;
    struct CGPoint _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    struct AEDesc _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    int _field17;
    unsigned int _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    struct CGPoint _field22;
    unsigned char _field23;
    struct CGSRegionObject *_field24;
    struct CGPoint _field25;
    void *_field26;
    void *_field27;
    void *_field28;
    struct CGRect _field29;
    struct CGRect _field30;
    short _field31;
    short _field32;
    short _field33;
    short _field34;
    struct __CFRunLoopTimer *_field35;
    struct __CFRunLoopTimer *_field36;
    struct __CFRunLoopTimer *_field37;
    double _field38;
    float _field39;
    double _field40;
    int _field41;
    unsigned int _field42;
    struct CGPoint _field43;
    struct __CFString *_field44;
    struct __CFDictionary *_field45;
    struct __CFDictionary *_field46;
    void *_field47;
    CDUnknownFunctionPointerType _field48;
    CDUnknownFunctionPointerType _field49;
    void *_field50;
    unsigned int _field51;
    struct OpaquePasteboardRef *_field52;
    struct OpaqueCoreDrag *_field53;
    struct __CFString *_field54;
    unsigned int _field55;
    CDUnknownFunctionPointerType _field56;
    void *_field57;
    long long _field58;
    struct __CFDictionary *_field59;
    struct __CFDictionary *_field60;
    unsigned int _field61;
    struct CGPoint _field62;
    struct __CFRunLoopTimer *_field63;
    struct __CFRunLoopTimer *_field64;
    double _field65;
    double _field66;
    long long _field67;
};

struct OpaqueEventHandlerCallRef;

struct OpaqueEventQueue;

struct OpaqueIconRef;

struct OpaqueLSSharedFileListItemRef;

struct OpaqueLSSharedFileListRef;

struct OpaqueMonitorData;

struct OpaqueNodeRef;

struct OpaqueOperationData;

struct OpaqueOperationRef;

struct OpaquePasteboardRef;

struct OpaquePropertyListRef;

struct OpenFlags {
    int _field1;
};

struct OperationErrorRecord {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    char _field4[1024];
    _Bool _field5;
};

struct OperationIterator {
    struct OpaqueOperationData *fData;
    CDUnknownFunctionPointerType fFirstProc;
    CDUnknownFunctionPointerType fNextProc;
};

struct OperationRecord {
    struct OpaqueNodeRef *_field1;
    struct OpaqueNodeRef *_field2;
    struct PropertyList *_field3;
    unsigned int _field4;
    unsigned int _field5;
    struct HFSUniStr255 _field6;
    struct OpaqueNodeRef *_field7;
    struct OpaqueNodeRef *_field8;
    struct OpaqueNodeRef *_field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    long long _field14;
    long long _field15;
    long long _field16;
    long long _field17;
    unsigned char _field18;
    unsigned char _field19;
};

struct OperationStatus {
    unsigned int fStage;
    struct HFSUniStr255 fCurrentName;
    long long fTimeEstimate;
    long long fItemsTotal;
    long long fItemsCompleted;
    long long fBytesTotal;
    long long fBytesCompleted;
    long long fFSItemsTotal;
    long long fFSItemsCompleted;
};

struct PropertyList;

struct RGBColor {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
};

struct SearchScopeDefinition;

struct StColumnOptimizer {
    struct TColumnOptimizerContainers _field1;
    struct TNSRef<TColumnViewController, void> _field2;
    struct StColumnOptimizer *_field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct TAccessControlInfo {
    unsigned int fCustomAccessControlInfo;
    _Bool fReadWrite;
    _Bool fReadOnly;
    _Bool fWriteOnly;
    _Bool fNoAccess;
    _Bool fCustom;
    _Bool fNoInfo;
    _Bool fIsMixed;
    _Bool fIsAllow;
};

struct TAdjustContainerOptions;

struct TAirDropReceiverOperationController;

struct TAirDropSenderOperationController;

struct TAliasesTargets {
    struct map<TFENode, std::__1::pair<unsigned long, TFENode>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::pair<unsigned long, TFENode>>>> fMap;
};

struct TAppManagedFilesInfo {
    int _field1;
    struct TString _field2;
    struct TFENode _field3;
    _Bool _field4;
};

struct TApplicationEventHandler {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> _field2;
    struct OpaqueEventHandlerCallRef *_field3;
    struct TCarbonEventHandler *_field4;
    _Bool _field5;
    CDUnknownFunctionPointerType *_field6;
    struct TNSRef<TPrefsObserverBridge, void> _field7;
    _Bool _field8;
    struct TScriptApplication _field9;
    struct vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>> _field10;
};

struct TAsyncNodeOperationAssistant;

struct TBVDSChangedPayload {
    struct TFENodeVector _field1;
    struct TFENodeVector _field2;
    struct TFENodeVector _field3;
    unordered_map_80f1bec4 _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
};

struct TBaseInstanceCounter {
    CDUnknownFunctionPointerType *_field1;
};

struct TBestFitFormatterSelector;

struct TBestFitStringSelector {
    struct TNSRef<NSSet<NSAttributedString *>, void> _field1;
    struct NSEdgeInsets _field2;
    struct map<CGSize, NSAttributedString *, CompareSizeByWidth, std::__1::allocator<std::__1::pair<const CGSize, NSAttributedString *>>> _field3;
    id _field4;
};

struct TBlockingQueue;

struct TBrowseDestination {
    struct TRef<OpaqueCSBackupDestinationRef *, TRetainReleasePolicy<CSBackupDestinationRef>> _field1;
    _Bool _field2;
    struct TString _field3;
    struct TFENode _field4;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field5;
    vector_757c8b87 _field6;
    struct TString _field7;
    int _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    struct TFENode _field12;
};

struct TBrowserImmediateActionGestureRecognizerHandlerBase;

struct TBurningDevice;

struct TCarbonEventHandler;

struct TCoalescingNodeObserver {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<TNodeEventHandler> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field4;
    struct unique_ptr<TNodeChangeNotifier, std::__1::default_delete<TNodeChangeNotifier>> _field5;
    _Bool _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned int _field9;
    unsigned long long _field10;
    struct unordered_map<TFENode, std::__1::shared_ptr<TCoalescedEvents>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::shared_ptr<TCoalescedEvents>>>> _field11;
    struct set<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> _field12;
    struct TSpinLock _field13;
    _Bool _field14;
    _Bool _field15;
};

struct TCoalescingNodeObserverCocoaBridge;

struct TColumnOptimizerContainers {
    struct __tree<std::__1::__value_type<std::__1::pair<long, TFENode>, short>, std::__1::__map_value_compare<std::__1::pair<long, TFENode>, std::__1::__value_type<std::__1::pair<long, TFENode>, short>, std::__1::greater<std::__1::pair<long, TFENode>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<long, TFENode>, short>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<long, TFENode>, short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<long, TFENode>, std::__1::__value_type<std::__1::pair<long, TFENode>, short>, std::__1::greater<std::__1::pair<long, TFENode>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct TColumnPreviewQTEjectHelper;

struct TCompletionNodeAndNames;

struct TConditionVariable {
    struct condition_variable_any fCondition;
    int fWaitCount;
};

struct TCustomNode;

struct TCustomNodeFactory {
    CDUnknownFunctionPointerType *_vptr$TCustomNodeFactory;
    struct TFENodeVector fCustomNodesClientNodes;
};

struct TDesktopNodesComparator;

struct TDesktopTitleMetrics {
    struct TNSRef<NSTextStorage, void> fTextStorage;
    struct TNSRef<TDesktopTitleLayoutManager, void> fLayoutManager;
    struct TNSRef<NSTextContainer, void> fTextContainer;
    struct TNSRef<TDesktopTitleLayoutManager, void> fTruncatedLayoutManager;
    struct TNSRef<NSTextStorage, void> fTruncatedTextStorage;
    struct TNSRef<NSTextContainer, void> fTruncatedTextContainer;
    unsigned long long fMaxLines;
    double fMaxTextWidth;
    struct CGRect fUsedTextFrame;
    struct CGRect fAvailableTextFrame;
    struct CGRect fIdealTextFrame;
    vector_a9587b3d fLineFrames;
    struct vector<_NSRange, std::__1::allocator<_NSRange>> fLineGlyphRanges;
    struct vector<_NSRange, std::__1::allocator<_NSRange>> fLineCharRanges;
    double fCenteredHorizontalInset;
    double fAlignedHorizontalInset;
    _Bool fIsTruncatingLastLine;
    _Bool fNeedsCalculation;
};

struct TDesktopViewDataSourceItemSortValues {
    struct TNSRef<NSObject<NSCopying>, void> _field1;
    struct TString _field2;
    struct TString _field3;
    unsigned int _field4;
    _Bool _field5;
    _Bool _field6;
};

struct TDisableScreenUpdatesInWindow;

struct TDisplayConfiguration {
    struct unordered_map<unsigned int, CGRect, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, CGRect>>> fDisplayFrames;
};

struct TDropOperation {
    CDUnknownFunctionPointerType *_field1;
    struct OpaqueCoreDrag *_field2;
    id _field3;
    id _field4;
    struct TFENode _field5;
    struct TFENodeVector _field6;
    struct TAppManagedFilesInfo _field7;
};

struct TEnableObserverAdaptor<TNodeObserver, TCustomNode>;

struct TEnableObserverAdaptor<TNodeObserver, TNewFolderAction>;

struct TEnableObserverAdaptor<TNodeObserver, TRenameAction>;

struct TFENode {
    struct OpaqueNodeRef *fNodeRef;
};

struct TFENodeComparator;

struct TFENodeData {
    struct UTCDateTime _field1;
    struct TString _field2;
    struct TString _field3;
    struct TString _field4;
    struct TRef<__CFFileSecurity *, TRetainReleasePolicy<CFFileSecurityRef>> _field5;
    _Bool _field6;
    _Bool _field7;
};

struct TFENodeOrderedSet {
    struct unordered_map<TFENode, unsigned long, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, unsigned long>>> fNodeToIndexMap;
    struct TFENodeVector fNodes;
};

struct TFENodePropertyList {
    struct OpaquePropertyListRef *_field1;
};

struct TFENodeVector {
    struct TFENode *__begin_;
    struct TFENode *__end_;
    struct __compressed_pair<TFENode *, std::__1::allocator<TFENode>> __end_cap_;
};

struct TFavoriteServersListObserverCocoaBridge;

struct TFormattedDateEntry;

struct TFullScreenAnimationInfo {
    _Bool _field1;
    struct CGRect _field2;
    double _field3;
    struct CGPoint _field4;
    struct TNSRef<CALayer, void> _field5;
    struct TNSRef<TView, void> _field6;
    struct TNSRef<CALayer, void> _field7;
    struct TNSRef<CALayer, void> _field8;
    struct CGRect _field9;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field10;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field11;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field12;
    struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> _field13;
    struct CGRect _field14;
    struct CGRect _field15;
    struct CGRect _field16;
    struct CGRect _field17;
    struct CGRect _field18;
    struct CGRect _field19;
    struct CGRect _field20;
    struct CGRect _field21;
    struct CGRect _field22;
    struct CGRect _field23;
    struct CGRect _field24;
    struct CGRect _field25;
    _Bool _field26;
    _Bool _field27;
    struct TNSRef<TView, void> _field28;
    struct TNSRef<CALayer, void> _field29;
    struct TNSRef<TView, void> _field30;
    struct TNSRef<NSVisualEffectView, void> _field31;
    struct CGRect _field32;
    struct TNSRef<NSVisualEffectView, void> _field33;
    double _field34;
    double _field35;
    struct CGRect _field36;
    struct CGRect _field37;
};

struct TGoToPathToAutoCompleteHelper {
    struct TString fUIPathPrefix;
    struct TString fAutoCompletePathPrefix;
};

struct TGroup {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<TGroup> _field2;
    struct TGroupManager *_field3;
    int _field4;
};

struct TGroupManager {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
};

struct TGroupModeData {
    struct TGroupManager *_field1;
    struct TGroupToClientNodeMap _field2;
    shared_ptr_0ec8498d _field3;
};

struct TGroupToClientNodeMap {
    struct unordered_map<TFENode, std::__1::shared_ptr<TGroup>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::shared_ptr<TGroup>>>> _field1;
    struct unordered_map<std::__1::shared_ptr<TGroup>, TFENode, finder_memory_extras::shared_hash<TGroup>, finder_memory_extras::shared_equal_to<TGroup>, std::__1::allocator<std::__1::pair<const std::__1::shared_ptr<TGroup>, TFENode>>> _field2;
};

struct TGroupedNodes {
    struct map<std::__1::shared_ptr<TGroup>, TFENodeVector, finder_memory_extras::shared_less<TGroup>, std::__1::allocator<std::__1::pair<const std::__1::shared_ptr<TGroup>, TFENodeVector>>> _field1;
};

struct TICloudStateCoordinator {
    int fBRBadgePrevious;
    int fBRBadgeCurrent;
    struct TNodeProgressStatus fProgressStatus;
    double incrementalProgress;
};

struct TIconBrowserSettings {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    unsigned int _field6;
    _Bool _field7;
    _Bool _field8;
    struct CGPoint _field9;
    short _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    struct RGBColor _field14;
    struct TFENode _field15;
    unsigned char _field16;
};

struct TIconFetcher;

struct TIconLayoutBitmap {
    long long fRowStride;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> fBitmap;
    long long fWidth;
    long long fHeight;
    struct Location fLastOpenLocation;
    int fStyle;
    _Bool fExpands;
};

struct TIconRef {
    struct TRef<OpaqueIconRef *, TRetainReleasePolicy<IconRef>> fIconRef;
};

struct TIdentity {
    struct TRef<const __CFUUID *, TRetainReleasePolicy<CFUUIDRef>> fUUIDRef;
    struct TString fShortName;
    int fPosixID;
    struct TriStateBool fIsUser;
};

struct TInfoExtractorController;

struct TInvokeQuickAction_Action;

struct TItemMetadata;

struct TKeyValueBinder {
    NSObject *fReceiverObj;
    struct TString fReceiversBinding;
};

struct TKeyValueObserver {
    struct TNSRef<TKeyValueObserverGlue, void> fObserver;
    NSObject *fObjectToObserve;
    NSArray *fArrayOfObjectsToObserve;
    struct TNSRef<NSIndexSet, void> fIndexesOfObjectsToObserve;
    struct TString fKeyPathToObserve;
};

struct TLayoutBinding {
    struct TSideLayoutBinding top;
    struct TSideLayoutBinding left;
    struct TSideLayoutBinding bottom;
    struct TSideLayoutBinding right;
};

struct TListBrowserSettings {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    vector_abc0d4d8 _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct TMDQueryAliasNode {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<TCustomNode> _field2;
    struct TNSRef<NSMutableDictionary, void> _field3;
    struct TMutex _field4;
    struct map<const TNodeObserver *, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>, std::__1::less<const TNodeObserver *>, std::__1::allocator<std::__1::pair<const TNodeObserver *const, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>>>> _field5;
    struct TFENode _field6;
    struct shared_ptr<TEnableObserverAdaptor<TNodeObserver, TCustomNode>> _field7;
    _Bool _field8;
    struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> _field9;
    struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> _field10;
    struct TString _field11;
    unsigned int _field12;
    struct TFENode _field13;
    struct TFENode _field14;
    struct TFENode _field15;
    struct TFENode _field16;
    struct TString _field17;
    struct TString _field18;
    struct TString _field19;
    struct TRef<const __CFDictionary *, TRetainReleasePolicy<CFDictionaryRef>> _field20;
    int _field21;
    int _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    struct TFENode _field39;
    int _field40;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field41;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field42;
    struct TFENode _field43;
    struct TMDQueryDefinition _field44;
    TNSWeakPtr_34793079 _field45;
    struct TBrowseDestination _field46;
};

struct TMDQueryDefinition {
    struct TString _field1;
    struct TString _field2;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field3;
    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> _field4;
    long long _field5;
    unsigned int _field6;
};

struct TMetadataAttribute;

struct TMetadataAvailability;

struct TMetadataGroup {
    int _field1;
    vector_6a476d2d _field2;
};

struct TModelObject;

struct TMutex {
    struct _opaque_pthread_mutex_t fMutex;
};

struct TNSRef<BRContainer, void> {
    BRContainer *fRef;
};

struct TNSRef<CALayer, void> {
    CALayer *fRef;
};

struct TNSRef<CNAvatarCache, void> {
    CNAvatarCache *fRef;
};

struct TNSRef<CNAvatarViewController, void> {
    CNAvatarViewController *fRef;
};

struct TNSRef<CNContactStore, void> {
    CNContactStore *fRef;
};

struct TNSRef<IPropertyValueApplicator, void> {
    IPropertyValueApplicator *fRef;
};

struct TNSRef<IPropertyValueExtractor, void> {
    IPropertyValueExtractor *fRef;
};

struct TNSRef<NSAccessibilityCustomAction, void> {
    NSAccessibilityCustomAction *fRef;
};

struct TNSRef<NSArray, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<CAFilter *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<IPropertyValueControllers *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<NSButton *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<NSLayoutConstraint *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<NSNumber *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<NSString *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<NSView *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<TBaseInfoWindowViewController *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<TInfoWindowViewController *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<TNodePermissionsInfo *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<TPreviewOptionsGroup *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<TPreviewOptionsGroupSettings *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<TQuickAction *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<TTagInfo *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArray<_NSQuickAction *>, void> {
    NSArray *fRef;
};

struct TNSRef<NSArrayController, void> {
    NSArrayController *fRef;
};

struct TNSRef<NSAttributedString, void> {
    NSAttributedString *fRef;
};

struct TNSRef<NSBackgroundActivityScheduler, void> {
    NSBackgroundActivityScheduler *fRef;
};

struct TNSRef<NSBox, void> {
    NSBox *fRef;
};

struct TNSRef<NSButton, void> {
    NSButton *fRef;
};

struct TNSRef<NSColor, void> {
    NSColor *fRef;
};

struct TNSRef<NSCustomTouchBarItem, void> {
    NSCustomTouchBarItem *fRef;
};

struct TNSRef<NSData, void> {
    NSData *fRef;
};

struct TNSRef<NSDate, void> {
    NSDate *fRef;
};

struct TNSRef<NSDateComponents, void> {
    NSDateComponents *fRef;
};

struct TNSRef<NSDateInterval, void> {
    NSDateInterval *fRef;
};

struct TNSRef<NSDictionary, void> {
    NSDictionary *fRef;
};

struct TNSRef<NSDictionary<NSString *, TNodesAndValues *>, void> {
    NSDictionary *fRef;
};

struct TNSRef<NSEvent, void> {
    NSEvent *fRef;
};

struct TNSRef<NSFont, void> {
    NSFont *fRef;
};

struct TNSRef<NSGroupTouchBarItem, void> {
    NSGroupTouchBarItem *fRef;
};

struct TNSRef<NSImage, void> {
    NSImage *fRef;
};

struct TNSRef<NSImmediateActionGestureRecognizer, void> {
    NSImmediateActionGestureRecognizer *fRef;
};

struct TNSRef<NSIndexSet, void> {
    NSIndexSet *fRef;
};

struct TNSRef<NSLayoutConstraint, void> {
    NSLayoutConstraint *fRef;
};

struct TNSRef<NSLayoutGuide, void> {
    NSLayoutGuide *fRef;
};

struct TNSRef<NSMenu, void> {
    NSMenu *fRef;
};

struct TNSRef<NSMetadataQuery, void> {
    NSMetadataQuery *fRef;
};

struct TNSRef<NSMutableArray, void> {
    NSMutableArray *fRef;
};

struct TNSRef<NSMutableArray<NSLayoutConstraint *>, void> {
    NSMutableArray *fRef;
};

struct TNSRef<NSMutableArray<NSMutableDictionary *>, void> {
    NSMutableArray *fRef;
};

struct TNSRef<NSMutableArray<NSView *>, void> {
    NSMutableArray *fRef;
};

struct TNSRef<NSMutableArray<TAirDropProgressController *>, void> {
    NSMutableArray *fRef;
};

struct TNSRef<NSMutableArray<TPreviewOptionsGroupViewController *>, void> {
    NSMutableArray *fRef;
};

struct TNSRef<NSMutableDictionary, void> {
    NSMutableDictionary *fRef;
};

struct TNSRef<NSMutableDictionary<NSMenuItem *, NSButton *>, void> {
    NSMutableDictionary *fRef;
};

struct TNSRef<NSMutableIndexSet, void> {
    NSMutableIndexSet *fRef;
};

struct TNSRef<NSMutableOrderedSet<NSProgress *>, void> {
    NSMutableOrderedSet *fRef;
};

struct TNSRef<NSMutableOrderedSet<TDesktopViewDataSourceItem *>, void> {
    NSMutableOrderedSet *fRef;
};

struct TNSRef<NSMutableSet<NSString *>, void> {
    NSMutableSet *fRef;
};

struct TNSRef<NSNumber, void> {
    NSNumber *fRef;
};

struct TNSRef<NSObject, void> {
    NSObject *fRef;
};

struct TNSRef<NSObject<FIFinderSyncExtensionProtocol>, void> {
    NSObject *fRef;
};

struct TNSRef<NSObject<NSCopying>, void> {
    NSObject *fRef;
};

struct TNSRef<NSObject<TAirDropNotAvailableDelegateProtocol>, void> {
    NSObject *fRef;
};

struct TNSRef<NSObject<TStdAlertSheetClientProtocol>, void> {
    NSObject *fRef;
};

struct TNSRef<NSOperationQueue, void> {
    NSOperationQueue *fRef;
};

struct TNSRef<NSPasteboard, void> {
    NSPasteboard *fRef;
};

struct TNSRef<NSPopoverTouchBarItem, void> {
    NSPopoverTouchBarItem *fRef;
};

struct TNSRef<NSSavePanel, void> {
    NSSavePanel *fRef;
};

struct TNSRef<NSScrollView, void> {
    NSScrollView *fRef;
};

struct TNSRef<NSSegmentedControl, void> {
    NSSegmentedControl *fRef;
};

struct TNSRef<NSSet, void> {
    NSSet *fRef;
};

struct TNSRef<NSSet<NSAttributedString *>, void> {
    id _field1;
};

struct TNSRef<NSSet<NSString *>, void> {
    NSSet *fRef;
};

struct TNSRef<NSSet<_NSQuickAction *>, void> {
    NSSet *fRef;
};

struct TNSRef<NSSharingServicePicker, void> {
    NSSharingServicePicker *fRef;
};

struct TNSRef<NSSharingServicePickerTouchBarItem, void> {
    NSSharingServicePickerTouchBarItem *fRef;
};

struct TNSRef<NSSplitViewItem, void> {
    NSSplitViewItem *fRef;
};

struct TNSRef<NSStackView, void> {
    NSStackView *fRef;
};

struct TNSRef<NSString, void> {
    NSString *fRef;
};

struct TNSRef<NSTextContainer, void> {
    NSTextContainer *fRef;
};

struct TNSRef<NSTextField, void> {
    NSTextField *fRef;
};

struct TNSRef<NSTextStorage, void> {
    NSTextStorage *fRef;
};

struct TNSRef<NSTimer, void> {
    NSTimer *fRef;
};

struct TNSRef<NSToolbar, void> {
    NSToolbar *fRef;
};

struct TNSRef<NSTouchBar, void> {
    NSTouchBar *fRef;
};

struct TNSRef<NSTrackingArea, void> {
    NSTrackingArea *fRef;
};

struct TNSRef<NSURL, void> {
    NSURL *fRef;
};

struct TNSRef<NSURLConnection, void> {
    NSURLConnection *fRef;
};

struct TNSRef<NSUbiquitousKeyValueStore, void> {
    NSUbiquitousKeyValueStore *fRef;
};

struct TNSRef<NSValue, void> {
    NSValue *fRef;
};

struct TNSRef<NSView, void> {
    NSView *fRef;
};

struct TNSRef<NSViewController, void> {
    NSViewController *fRef;
};

struct TNSRef<NSVisualEffectView, void> {
    NSVisualEffectView *fRef;
};

struct TNSRef<NSWindow, void> {
    NSWindow *fRef;
};

struct TNSRef<QLInlinePreviewController, void> {
    QLInlinePreviewController *fRef;
};

struct TNSRef<QLPreviewPanel, void> {
    QLPreviewPanel *fRef;
};

struct TNSRef<SFAirDropDiscoveryController, void> {
    SFAirDropDiscoveryController *fRef;
};

struct TNSRef<SFWirelessSettingsController, void> {
    SFWirelessSettingsController *fRef;
};

struct TNSRef<TAirDropCollectionViewLayout, void> {
    TAirDropCollectionViewLayout *fRef;
};

struct TNSRef<TAirDropDiscoverableModePopoverViewController, void> {
    TAirDropDiscoverableModePopoverViewController *fRef;
};

struct TNSRef<TAirDropDiscoveryController, void> {
    TAirDropDiscoveryController *fRef;
};

struct TNSRef<TAirDropInfoViewController, void> {
    TAirDropInfoViewController *fRef;
};

struct TNSRef<TAirDropLegacyModePopoverViewController, void> {
    TAirDropLegacyModePopoverViewController *fRef;
};

struct TNSRef<TAirDropNotAvailableViewController, void> {
    TAirDropNotAvailableViewController *fRef;
};

struct TNSRef<TAirDropProgressLayer, void> {
    TAirDropProgressLayer *fRef;
};

struct TNSRef<TArrangeByMenuController, void> {
    TArrangeByMenuController *fRef;
};

struct TNSRef<TBVDSBulkConfigChangedState, void> {
    TBVDSBulkConfigChangedState *fRef;
};

struct TNSRef<TBackupContainerDelegate, void> {
    TBackupContainerDelegate *fRef;
};

struct TNSRef<TBaseBrowserWindowController, void> {
    TBaseBrowserWindowController *fRef;
};

struct TNSRef<TBasicImageView, void> {
    TBasicImageView *fRef;
};

struct TNSRef<TBrowserContainerController, void> {
    TBrowserContainerController *fRef;
};

struct TNSRef<TBrowserImmediateActionGestureRecognizerDelegate, void> {
    TBrowserImmediateActionGestureRecognizerDelegate *fRef;
};

struct TNSRef<TBrowserSplitViewController, void> {
    TBrowserSplitViewController *fRef;
};

struct TNSRef<TBrowserViewContainerController, void> {
    TBrowserViewContainerController *fRef;
};

struct TNSRef<TBrowserViewController, void> {
    TBrowserViewController *fRef;
};

struct TNSRef<TBrowserViewDataSource, void> {
    TBrowserViewDataSource *fRef;
};

struct TNSRef<TBrowserViewSwitchAnimator, void> {
    TBrowserViewSwitchAnimator *fRef;
};

struct TNSRef<TBrowserWindowPlusTabDraggingDelegate, void> {
    TBrowserWindowPlusTabDraggingDelegate *fRef;
};

struct TNSRef<TBulkRenameController, void> {
    TBulkRenameController *fRef;
};

struct TNSRef<TButton, void> {
    TButton *fRef;
};

struct TNSRef<TClipImageView, void> {
    TClipImageView *fRef;
};

struct TNSRef<TColumnPreviewController, void> {
    TColumnPreviewController *fRef;
};

struct TNSRef<TColumnViewController, void> {
    id _field1;
};

struct TNSRef<TConnectToFieldEditor, void> {
    TConnectToFieldEditor *fRef;
};

struct TNSRef<TContainerLayoutManager, void> {
    TContainerLayoutManager *fRef;
};

struct TNSRef<TCoverWindow, void> {
    TCoverWindow *fRef;
};

struct TNSRef<TCustomWherePathTextView, void> {
    TCustomWherePathTextView *fRef;
};

struct TNSRef<TDFRAddTagsViewController, void> {
    TDFRAddTagsViewController *fRef;
};

struct TNSRef<TDFRSearchScopeViewController, void> {
    TDFRSearchScopeViewController *fRef;
};

struct TNSRef<TDelayedPopulationViewController, void> {
    TDelayedPopulationViewController *fRef;
};

struct TNSRef<TDesktopBandSelectionController, void> {
    TDesktopBandSelectionController *fRef;
};

struct TNSRef<TDesktopGridLayout, void> {
    TDesktopGridLayout *fRef;
};

struct TNSRef<TDesktopGridLayoutController, void> {
    TDesktopGridLayoutController *fRef;
};

struct TNSRef<TDesktopGridLayoutControllerDelegate, void> {
    TDesktopGridLayoutControllerDelegate *fRef;
};

struct TNSRef<TDesktopIconSpatialDataController, void> {
    TDesktopIconSpatialDataController *fRef;
};

struct TNSRef<TDesktopIconView, void> {
    TDesktopIconView *fRef;
};

struct TNSRef<TDesktopInlinePreviewController, void> {
    TDesktopInlinePreviewController *fRef;
};

struct TNSRef<TDesktopInlineProgressView, void> {
    TDesktopInlineProgressView *fRef;
};

struct TNSRef<TDesktopMultiViewController, void> {
    TDesktopMultiViewController *fRef;
};

struct TNSRef<TDesktopSubtitleTextField, void> {
    TDesktopSubtitleTextField *fRef;
};

struct TNSRef<TDesktopTitleBubbleView, void> {
    TDesktopTitleBubbleView *fRef;
};

struct TNSRef<TDesktopTitleLayoutManager, void> {
    TDesktopTitleLayoutManager *fRef;
};

struct TNSRef<TDesktopViewController, void> {
    TDesktopViewController *fRef;
};

struct TNSRef<TDesktopViewDataSource, void> {
    TDesktopViewDataSource *fRef;
};

struct TNSRef<TDesktopViewDataSourceItem, void> {
    TDesktopViewDataSourceItem *fRef;
};

struct TNSRef<TDesktopViewDataSourcePileItem, void> {
    TDesktopViewDataSourcePileItem *fRef;
};

struct TNSRef<TDesktopWindowController, void>;

struct TNSRef<TFFKViewController, void> {
    TFFKViewController *fRef;
};

struct TNSRef<TFileSizeFormatter, void> {
    TFileSizeFormatter *fRef;
};

struct TNSRef<TFloatingInputView, void> {
    TFloatingInputView *fRef;
};

struct TNSRef<TGalleryIconView, void> {
    TGalleryIconView *fRef;
};

struct TNSRef<TGalleryPreviewViewController, void> {
    TGalleryPreviewViewController *fRef;
};

struct TNSRef<TGalleryViewSettings, void> {
    TGalleryViewSettings *fRef;
};

struct TNSRef<TGoToAutoCompletionController, void> {
    TGoToAutoCompletionController *fRef;
};

struct TNSRef<TGoToFieldEditor, void> {
    TGoToFieldEditor *fRef;
};

struct TNSRef<TGroupInFolderAnimationController, void> {
    TGroupInFolderAnimationController *fRef;
};

struct TNSRef<TICloudAccountManager, void> {
    TICloudAccountManager *fRef;
};

struct TNSRef<TICloudBadgeButton, void> {
    TICloudBadgeButton *fRef;
};

struct TNSRef<TICloudBadgePlaceholderView, void> {
    TICloudBadgePlaceholderView *fRef;
};

struct TNSRef<TICloudDriveSpaceObserver, void> {
    TICloudDriveSpaceObserver *fRef;
};

struct TNSRef<TICloudNoDocumentsViewController, void> {
    TICloudNoDocumentsViewController *fRef;
};

struct TNSRef<TICloudProgressObserver, void> {
    TICloudProgressObserver *fRef;
};

struct TNSRef<TIconSelectionView, void> {
    TIconSelectionView *fRef;
};

struct TNSRef<TIconSpatialDataController, void> {
    TIconSpatialDataController *fRef;
};

struct TNSRef<TIconView, void> {
    TIconView *fRef;
};

struct TNSRef<TIconViewSettings, void> {
    TIconViewSettings *fRef;
};

struct TNSRef<TImageView, void> {
    TImageView *fRef;
};

struct TNSRef<TInlineCancelButtonLayer, void> {
    TInlineCancelButtonLayer *fRef;
};

struct TNSRef<TInlinePreviewData, void> {
    TInlinePreviewData *fRef;
};

struct TNSRef<TInlineProgressBarLayer, void> {
    TInlineProgressBarLayer *fRef;
};

struct TNSRef<TInlineProgressHostLayer, void> {
    TInlineProgressHostLayer *fRef;
};

struct TNSRef<TInlineProgressView, void> {
    TInlineProgressView *fRef;
};

struct TNSRef<TInternalCloudProgressObserver, void> {
    TInternalCloudProgressObserver *fRef;
};

struct TNSRef<TKeyValueObserverGlue, void> {
    TKeyValueObserverGlue *fRef;
};

struct TNSRef<TLayer, void> {
    TLayer *fRef;
};

struct TNSRef<TListHeaderCellView, void> {
    TListHeaderCellView *fRef;
};

struct TNSRef<TListHeaderRowView, void> {
    TListHeaderRowView *fRef;
};

struct TNSRef<TListNameCellView, void> {
    TListNameCellView *fRef;
};

struct TNSRef<TListNameSubtitleTextField, void> {
    TListNameSubtitleTextField *fRef;
};

struct TNSRef<TListTextField, void> {
    TListTextField *fRef;
};

struct TNSRef<TListViewSettings, void> {
    TListViewSettings *fRef;
};

struct TNSRef<TMDUserSearch, void> {
    TMDUserSearch *fRef;
};

struct TNSRef<TMidnightTimer, void> {
    TMidnightTimer *fRef;
};

struct TNSRef<TNSSharedFileListItem, void> {
    TNSSharedFileListItem *fRef;
};

struct TNSRef<TNodeViewSettings, void> {
    TNodeViewSettings *fRef;
};

struct TNSRef<TNodesAndValues, void> {
    TNodesAndValues *fRef;
};

struct TNSRef<TNotificationCenterObserverGlue, void> {
    TNotificationCenterObserverGlue *fRef;
};

struct TNSRef<TOpenWithMenuFactory, void> {
    TOpenWithMenuFactory *fRef;
};

struct TNSRef<TOpenWithPopupMenuController, void> {
    TOpenWithPopupMenuController *fRef;
};

struct TNSRef<TOverlappingController, void> {
    TOverlappingController *fRef;
};

struct TNSRef<TPathBarController, void> {
    TPathBarController *fRef;
};

struct TNSRef<TPieChartProgressLayer, void> {
    TPieChartProgressLayer *fRef;
};

struct TNSRef<TPopoverController, void> {
    TPopoverController *fRef;
};

struct TNSRef<TPrefsObserverBridge, void> {
    id _field1;
};

struct TNSRef<TPreviewOptions, void> {
    TPreviewOptions *fRef;
};

struct TNSRef<TPreviewOptionsController, void> {
    TPreviewOptionsController *fRef;
};

struct TNSRef<TPreviewOptionsDynamicGroupSettings, void> {
    TPreviewOptionsDynamicGroupSettings *fRef;
};

struct TNSRef<TPreviewOptionsGroup, void> {
    TPreviewOptionsGroup *fRef;
};

struct TNSRef<TPreviewOptionsGroupSettings, void> {
    TPreviewOptionsGroupSettings *fRef;
};

struct TNSRef<TProgressStatusViewController, void> {
    TProgressStatusViewController *fRef;
};

struct TNSRef<TProgressViewController, void> {
    id _field1;
};

struct TNSRef<TProgressWindowController, void> {
    TProgressWindowController *fRef;
};

struct TNSRef<TPropertyLogicalSizeExtractor, void> {
    TPropertyLogicalSizeExtractor *fRef;
};

struct TNSRef<TPropertyQLPreviewViewExtractor, void> {
    TPropertyQLPreviewViewExtractor *fRef;
};

struct TNSRef<TQLMultiPreviewItem, void> {
    TQLMultiPreviewItem *fRef;
};

struct TNSRef<TQLMultiPreviewView, void> {
    TQLMultiPreviewView *fRef;
};

struct TNSRef<TQLMultiPreviewViewCommonDelegate, void> {
    TQLMultiPreviewViewCommonDelegate *fRef;
};

struct TNSRef<TQLPreviewViewZoomController, void> {
    TQLPreviewViewZoomController *fRef;
};

struct TNSRef<TQueuedPopoverController, void> {
    TQueuedPopoverController *fRef;
};

struct TNSRef<TQuickActionButton, void> {
    TQuickActionButton *fRef;
};

struct TNSRef<TQuickActionsViewController, void> {
    TQuickActionsViewController *fRef;
};

struct TNSRef<TRenameOperation, void> {
    TRenameOperation *fRef;
};

struct TNSRef<TRunAfterHelper, void> {
    TRunAfterHelper *fRef;
};

struct TNSRef<TScrollView, void> {
    TScrollView *fRef;
};

struct TNSRef<TSearchCriteriaSheetController, void> {
    TSearchCriteriaSheetController *fRef;
};

struct TNSRef<TSearchCriteriaViewController, void> {
    TSearchCriteriaViewController *fRef;
};

struct TNSRef<TSearchForSliceController, void> {
    TSearchForSliceController *fRef;
};

struct TNSRef<TSearchScopeSliceController, void> {
    TSearchScopeSliceController *fRef;
};

struct TNSRef<TSearchSliceController, void> {
    TSearchSliceController *fRef;
};

struct TNSRef<TShrinkToFitController, void> {
    TShrinkToFitController *fRef;
};

struct TNSRef<TShrinkToFitWindow, void> {
    TShrinkToFitWindow *fRef;
};

struct TNSRef<TSidebarSplitViewController, void> {
    TSidebarSplitViewController *fRef;
};

struct TNSRef<TSidebarViewController, void> {
    TSidebarViewController *fRef;
};

struct TNSRef<TStatusBarController, void> {
    TStatusBarController *fRef;
};

struct TNSRef<TTableViewController, void> {
    TTableViewController *fRef;
};

struct TNSRef<TTableViewShrinkToFitController, void> {
    TTableViewShrinkToFitController *fRef;
};

struct TNSRef<TTagColumnTableViewController, void> {
    TTagColumnTableViewController *fRef;
};

struct TNSRef<TTagEditorController, void> {
    TTagEditorController *fRef;
};

struct TNSRef<TTagInfo, void> {
    TTagInfo *fRef;
};

struct TNSRef<TTagOperationDelegate, void> {
    TTagOperationDelegate *fRef;
};

struct TNSRef<TTagSuggestionsWindowController, void> {
    TTagSuggestionsWindowController *fRef;
};

struct TNSRef<TTaggingPopoverContentViewController, void> {
    TTaggingPopoverContentViewController *fRef;
};

struct TNSRef<TTaggingSuggestionsViewController, void> {
    TTaggingSuggestionsViewController *fRef;
};

struct TNSRef<TTagsImageView, void> {
    TTagsImageView *fRef;
};

struct TNSRef<TTargetActionFunctor, void> {
    TTargetActionFunctor *fRef;
};

struct TNSRef<TTaskErrorViewController, void> {
    id _field1;
};

struct TNSRef<TTextField, void> {
    TTextField *fRef;
};

struct TNSRef<TTitlePopoverController, void> {
    TTitlePopoverController *fRef;
};

struct TNSRef<TToolbarController, void> {
    TToolbarController *fRef;
};

struct TNSRef<TTrackingImageView, void> {
    TTrackingImageView *fRef;
};

struct TNSRef<TUpdateLayerView, void> {
    TUpdateLayerView *fRef;
};

struct TNSRef<TValidatingDateFormatter, void> {
    TValidatingDateFormatter *fRef;
};

struct TNSRef<TView, void> {
    id _field1;
};

struct TNSRef<TViewGridLayoutController, void> {
    TViewGridLayoutController *fRef;
};

struct TNSRef<TViewGridLayoutControllerDelegate, void> {
    TViewGridLayoutControllerDelegate *fRef;
};

struct TNSRef<TViewOptionsSettingsController, void> {
    TViewOptionsSettingsController *fRef;
};

struct TNSRef<TWindowHistory, void> {
    TWindowHistory *fRef;
};

struct TNSRef<_NSQuickAction, void> {
    _NSQuickAction *fRef;
};

struct TNSRef<_NSQuickActionProvider, void> {
    _NSQuickActionProvider *fRef;
};

struct TNSRef<_NSQuickActionValidator, void> {
    _NSQuickActionValidator *fRef;
};

struct TNSWeakPtr<NSLayoutConstraint, void> {
    struct TNSRef<NSValue, void> fWeakObject;
};

struct TNSWeakPtr<NSObject<TDFRTagsViewTagProviding>, void> {
    struct TNSRef<NSValue, void> fWeakObject;
};

struct TNSWeakPtr<NSObject<TNodeTaskDelegateProtocol>, void> {
    struct TNSRef<NSValue, void> _field1;
};

struct TNSWeakPtr<NSObject<TThumbnailExtractorDelegate>, void> {
    struct TNSRef<NSValue, void> _field1;
};

struct TNSWeakPtr<NSProgress, void> {
    struct TNSRef<NSValue, void> fWeakObject;
};

struct TNSWeakPtr<NSView, void> {
    struct TNSRef<NSValue, void> fWeakObject;
};

struct TNSWeakPtr<TBaseBrowserViewController, void> {
    struct TNSRef<NSValue, void> fWeakObject;
};

struct TNSWeakPtr<TBrowserViewDataSource, void> {
    struct TNSRef<NSValue, void> fWeakObject;
};

struct TNSWeakPtr<TRunAfterHelper, void> {
    struct TNSRef<NSValue, void> fWeakObject;
};

struct TNewFolderAction {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<TUndoableAction> _field2;
    _Bool _field3;
    struct TString _field4;
    struct TString _field5;
    struct TString _field6;
    unsigned int _field7;
    id _field8;
    struct TFENode _field9;
    struct TFENodePropertyList _field10;
    struct TFENode _field11;
    _Bool _field12;
    _Bool _field13;
    struct shared_ptr<TEnableObserverAdaptor<TNodeObserver, TNewFolderAction>> _field14;
};

struct TNewFolderCallbackHandler;

struct TNodeChangeNotifier;

struct TNodeEngineCocoaBridge;

struct TNodeEventHandler;

struct TNodeObserver {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<TNodeEventHandler> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> _field4;
    struct unique_ptr<TNodeChangeNotifier, std::__1::default_delete<TNodeChangeNotifier>> _field5;
    _Bool _field6;
};

struct TNodeObserverCocoaBridge;

struct TNodeProgressStatus {
    struct TIconRef fIcon;
    unsigned int fOperationState;
    float fPercentageDone;
    struct TString fOperationType;
    _Bool fCancellable;
    _Bool fCancelled;
    _Bool fPausable;
    _Bool fUserDownload;
    struct TNSRef<NSImage, void> fImage;
    float fDownloadPercentageDone;
    long long fDownloadTotalSize;
    long long fDownloadCompletedSize;
    float fUploadPercentageDone;
    long long fUploadTotalSize;
    long long fUploadCompletedSize;
};

struct TNodeSortingData {
    unsigned long long _field1;
    struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> _field2;
    struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> _field3;
    struct TSortingDataUnion _field4;
    int _field5;
};

struct TNodeTask {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<TNodeEventHandler> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct TMutex _field4;
    struct unordered_map<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>>> _field5;
    struct TNSRef<TTaskErrorViewController, void> _field6;
    struct TNSRef<TProgressWindowController, void> _field7;
    struct TNSRef<TProgressViewController, void> _field8;
    double _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    struct shared_ptr<TTask> _field13;
    unsigned int _field14;
    struct OpaqueOperationRef *_field15;
    struct TOperationMonitor _field16;
    struct OperationIterator _field17;
    unsigned int _field18;
    unsigned int _field19;
    struct OperationStatus _field20;
    struct TString _field21;
    struct TFENodeVector _field22;
    struct TFENode _field23;
    vector_d50fdf79 _field24;
    struct vector<TOperationRecord, std::__1::allocator<TOperationRecord>> *_field25;
    int _field26;
    _Bool _field27;
    _Bool _field28;
    int _field29;
    struct OperationIterator *_field30;
    struct OperationRecord *_field31;
    struct TFENode _field32;
    struct TNSRef<NSTimer, void> _field33;
    struct TNSWeakPtr<NSObject<TNodeTaskDelegateProtocol>, void> _field34;
    struct vector<std::__1::pair<OperationConflict, OperationResolution>, std::__1::allocator<std::__1::pair<OperationConflict, OperationResolution>>> _field35;
};

struct TNotificationCenterObserver {
    NSObject *fObservedObject;
    struct TString fNotificationName;
    struct TNSRef<TNotificationCenterObserverGlue, void> fFunctorGlue;
    _Bool fIsDistributedObserving;
};

struct TOpenContainerOptions;

struct TOperationMonitor {
    struct OpaqueMonitorData *fMonitorData;
    unsigned char fCancelRequested;
    struct OperationStatus *fStatus;
    unsigned int fAccumulatedStatusMask;
    unsigned int fStatusChangeInterval;
    struct DSSemaphore *fRequestSemaphoreID;
    struct OpaqueEventQueue *fQueue;
    CDUnknownFunctionPointerType fTickleProc;
    CDUnknownFunctionPointerType fUniqueNameProc;
    int fVersion;
    CDUnknownBlockType fEventHandler;
};

struct TOperationRecord {
    struct OperationRecord _field1;
    struct TFENode _field2;
    struct TFENode _field3;
    struct TFENode _field4;
};

struct TPBFSizingThread {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct _opaque_pthread_t *_field3;
    struct function<void (unsigned long long)> _field4;
    struct TThreadSafeQueue<TFENode> _field5;
};

struct TPointQuadTree<unsigned long> {
    struct vector<TPointQuadTreeNode<unsigned long>, std::__1::allocator<TPointQuadTreeNode<unsigned long>>> fNodes;
    struct CGRect fFrame;
    struct CGSize fMinSize;
    struct unique_ptr<TPointQuadTree<unsigned long>, std::__1::default_delete<TPointQuadTree<unsigned long>>> fGridA;
    struct unique_ptr<TPointQuadTree<unsigned long>, std::__1::default_delete<TPointQuadTree<unsigned long>>> fGridB;
    struct unique_ptr<TPointQuadTree<unsigned long>, std::__1::default_delete<TPointQuadTree<unsigned long>>> fGridC;
    struct unique_ptr<TPointQuadTree<unsigned long>, std::__1::default_delete<TPointQuadTree<unsigned long>>> fGridD;
};

struct TPointQuadTreeNode<unsigned long>;

struct TPromiseDragReceiverThread;

struct TQLPreviewViewQTEjectHelper;

struct TQLPreviewWindowQTEjectHelper;

struct TReadWriteLock {
    struct _opaque_pthread_rwlock_t {
        long long __sig;
        char __opaque[192];
    } fRWLock;
};

struct TRecentServer;

struct TRecentServers;

struct TRecursiveMutex {
    struct _opaque_pthread_mutex_t fMutex;
};

struct TRef<CGImage *, TRetainReleasePolicy<CGImageRef>> {
    struct CGImage *fRef;
};

struct TRef<NSObject<OS_dispatch_queue>*, TRetainReleasePolicy<dispatch_queue_t>> {
    NSObject *fRef;
};

struct TRef<NSObject<OS_dispatch_semaphore>*, TRetainReleasePolicy<dispatch_semaphore_t>> {
    NSObject *fRef;
};

struct TRef<NSObject<OS_dispatch_source>*, TRetainReleasePolicy<dispatch_source_t>> {
    NSObject *fRef;
};

struct TRef<OpaqueCSBackupDestinationRef *, TRetainReleasePolicy<CSBackupDestinationRef>> {
    struct OpaqueCSBackupDestinationRef *_field1;
};

struct TRef<OpaqueIconRef *, TRetainReleasePolicy<IconRef>> {
    struct OpaqueIconRef *fRef;
};

struct TRef<OpaqueLSSharedFileListItemRef *, TRetainReleasePolicy<LSSharedFileListItemRef>> {
    struct OpaqueLSSharedFileListItemRef *_field1;
};

struct TRef<OpaqueLSSharedFileListRef *, TRetainReleasePolicy<LSSharedFileListRef>> {
    struct OpaqueLSSharedFileListRef *_field1;
};

struct TRef<__CFFileSecurity *, TRetainReleasePolicy<CFFileSecurityRef>> {
    struct __CFFileSecurity *_field1;
};

struct TRef<__CFMachPort *, TRetainReleasePolicy<CFMachPortRef>> {
    struct __CFMachPort *fRef;
};

struct TRef<__CFRunLoop *, TRetainReleasePolicy<CFRunLoopRef>> {
    struct __CFRunLoop *fRef;
};

struct TRef<__CFRunLoopSource *, TRetainReleasePolicy<CFRunLoopSourceRef>> {
    struct __CFRunLoopSource *fRef;
};

struct TRef<__DADisk *, TRetainReleasePolicy<DADiskRef>> {
    struct __DADisk *fRef;
};

struct TRef<__FSFileSecurity *, TRetainReleasePolicy<FSFileSecurityRef>> {
    struct __FSFileSecurity *fRef;
};

struct TRef<__SFOperation *, TRetainReleasePolicy<SFOperationRef>> {
    struct __SFOperation *_field1;
};

struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> {
    struct __CFArray *fRef;
};

struct TRef<const __CFDictionary *, TRetainReleasePolicy<CFDictionaryRef>> {
    struct __CFDictionary *_field1;
};

struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> {
    struct __CFString *fRef;
};

struct TRef<const __CFUUID *, TRetainReleasePolicy<CFUUIDRef>> {
    struct __CFUUID *fRef;
};

struct TRef<const void *, TRetainReleasePolicy<CFTypeRef>> {
    void *_field1;
};

struct TRegularSortingData {
    struct TRef<const void *, TRetainReleasePolicy<CFTypeRef>> _field1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct TRenameAction {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<TUndoableAction> _field2;
    _Bool _field3;
    struct TString _field4;
    struct TString _field5;
    struct TString _field6;
    unsigned int _field7;
    struct TFENodeVector _field8;
    vector_757c8b87 _field9;
    vector_757c8b87 _field10;
    vector_757c8b87 _field11;
    struct vector<bool, std::__1::allocator<bool>> _field12;
    TNSRef_a11c280b _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct shared_ptr<TEnableObserverAdaptor<TNodeObserver, TRenameAction>> _field18;
};

struct TRenameUndoRedoOperationHelper;

struct TScreenToGridLayoutPair;

struct TScriptApplication {
    CDUnknownFunctionPointerType *_field1;
    struct TModelObject *_field2;
    struct TModelObject *_field3;
    struct TModelObject *_field4;
    unsigned int _field5;
    int _field6;
};

struct TSeamlessOpenerSpawnOrigin;

struct TSharedFileList {
    struct TRef<OpaqueLSSharedFileListRef *, TRetainReleasePolicy<LSSharedFileListRef>> _field1;
};

struct TSharedFileListItem {
    struct TRef<OpaqueLSSharedFileListItemRef *, TRetainReleasePolicy<LSSharedFileListItemRef>> _field1;
};

struct TSideLayoutBinding {
    struct TNSRef<NSView, void> masterView;
    int kind;
    struct CGRect frame;
};

struct TSortingDataUnion {
    union {
        struct TRegularSortingData _field1;
        struct TSpotlightSortingData _field2;
    } _field1;
    _Bool _field2;
};

struct TSpatialDataCacheElement;

struct TSpinLock {
    int fSpinLock;
};

struct TSpotlightSortingData {
    struct TRef<const void *, TRetainReleasePolicy<CFTypeRef>> _field1;
    struct TRef<const void *, TRetainReleasePolicy<CFTypeRef>> _field2;
};

struct TString {
    struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> fString;
};

struct TTagGroupNode {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<TCustomNode> _field2;
    struct TNSRef<NSMutableDictionary, void> _field3;
    struct TMutex _field4;
    struct map<const TNodeObserver *, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>, std::__1::less<const TNodeObserver *>, std::__1::allocator<std::__1::pair<const TNodeObserver *const, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>>>> _field5;
    struct TFENode _field6;
    struct shared_ptr<TEnableObserverAdaptor<TNodeObserver, TCustomNode>> _field7;
    _Bool _field8;
    struct shared_ptr<TGroup> _field9;
    struct TFENode _field10;
    struct TIconRef _field11;
    unsigned int _field12;
    struct TFENode _field13;
    _Bool _field14;
};

struct TTagsTask;

struct TTask {
    CDUnknownFunctionPointerType *_field1;
    struct TMutex _field2;
    struct unordered_map<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>>> _field3;
    struct TNSRef<TTaskErrorViewController, void> _field4;
    struct TNSRef<TProgressWindowController, void> _field5;
    struct TNSRef<TProgressViewController, void> _field6;
    double _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    struct shared_ptr<TTask> _field11;
};

struct TThreadSafeQueue<TFENode> {
    CDUnknownFunctionPointerType *_field1;
    struct mutex _field2;
    struct TConditionVariable _field3;
    struct unique_ptr<IBaseQueueStyle<TFENode>, std::__1::default_delete<IBaseQueueStyle<TFENode>>> _field4;
    struct vector<TFENode, std::__1::allocator<TFENode>> _field5;
};

struct TThreadSafeQueue<TNSRef<TQueuedPopoverController, void>>;

struct TThumbnailExtractor {
    struct TMutex _field1;
    struct shared_ptr<TThumbnailExtractorThread> _field2;
    int _field3;
    unsigned int _field4;
    _Bool _field5;
    _Bool _field6;
    struct function<bool (const TFENode &, unsigned int)> _field7;
    struct function<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> _field8;
    function_b1fce659 _field9;
};

struct TThumbnailExtractorController {
    struct TThumbnailExtractor _field1;
    struct TNSWeakPtr<NSObject<TThumbnailExtractorDelegate>, void> _field2;
};

struct TThumbnailExtractorData {
    struct TFENode _field1;
    struct map<unsigned int, TThumbnailExtractorData::TThumbnailData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TThumbnailExtractorData::TThumbnailData>>> _field2;
    struct TFENodeData _field3;
};

struct TThumbnailExtractorThread;

struct TTimeMachineTarget;

struct TTypeSelectController {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    struct TString _field3;
    struct TFENodeVector _field4;
    id _field5;
};

struct TTypedData;

struct TUndoableAction;

struct TUndoableActionManager;

struct TVolumeEraseTask;

struct ToolbarItemInfo {
    unsigned int _field1;
    Class _field2;
    SEL _field3;
    struct __CFString *_field4;
    id _field5;
    id _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct TriStateBool {
    int fState;
};

struct UTCDateTime {
    unsigned short _field1;
    unsigned int _field2;
    unsigned short _field3;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __CFDictionary;

struct __CFRunLoopTimer;

struct __CFString;

struct __FSFileSecurity;

struct __compressed_pair<TFENode *, std::__1::allocator<TFENode>> {
    struct TFENode *__value_;
};

struct __hash_node_base<std::__1::__hash_node<NSObject *, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<NSObject *, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<TFENode, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TFENode, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<TString, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<TString, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*> *_field1;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct callable_holder_base<void>;

struct condition_variable {
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } __cv_;
};

struct condition_variable_any {
    struct condition_variable __cv_;
    struct shared_ptr<std::__1::mutex> __mut_;
};

struct function<NSComparisonResult (__kindof NSView *, __kindof NSView *)> {
    struct type __buf_;
    struct __base<NSComparisonResult (__kindof NSView *, __kindof NSView *)> *__f_;
};

struct function<NSImage *(NSView *, MouseState)> {
    struct type __buf_;
    struct __base<NSImage *(NSView *, MouseState)> *__f_;
};

struct function<NSImage *(NSView *, MouseState, TSidebarActionKind)> {
    struct type _field1;
    struct __base<NSImage *(NSView *, MouseState, TSidebarActionKind)> *_field2;
};

struct function<NSImage *(bool, bool, bool, NSTableViewRowSizeStyle, double)> {
    struct type __buf_;
    struct __base<NSImage *(bool, bool, bool, NSTableViewRowSizeStyle, double)> *__f_;
};

struct function<TFENodeVector (SEL *)> {
    struct type _field1;
    struct __base<TFENodeVector (SEL *)> *_field2;
};

struct function<TString (const TString &)> {
    struct type __buf_;
    struct __base<TString (const TString &)> *__f_;
};

struct function<bool (NSObject<TAirDropProgressControllerDelegate>*)> {
    struct type _field1;
    struct __base<bool (NSObject<TAirDropProgressControllerDelegate>*)> *_field2;
};

struct function<bool (TFENode, TFENode)> {
    struct type _field1;
    struct __base<bool (TFENode, TFENode)> *_field2;
};

struct function<bool (TMenuItem *)> {
    struct type __buf_;
    struct __base<bool (TMenuItem *)> *__f_;
};

struct function<bool (TSTFTextField *)> {
    struct type __buf_;
    struct __base<bool (TSTFTextField *)> *__f_;
};

struct function<bool (const TFENode &, unsigned int)> {
    struct type _field1;
    struct __base<bool (const TFENode &, unsigned int)> *_field2;
};

struct function<std::__1::pair<NSImage *, TString>(CGSize)> {
    struct type __buf_;
    struct __base<std::__1::pair<NSImage *, TString>(CGSize)> *__f_;
};

struct function<std::__1::shared_ptr<TUndoableAction>()> {
    struct type __buf_;
    struct __base<std::__1::shared_ptr<TUndoableAction>()> *__f_;
};

struct function<void ()> {
    struct type __buf_;
    struct __base<void ()> *__f_;
};

struct function<void (NSArray<TQuickAction *>*)> {
    struct type __buf_;
    struct __base<void (NSArray<TQuickAction *>*)> *__f_;
};

struct function<void (NSDictionary<NSString *, NSObject *>*)> {
    struct type __buf_;
    struct __base<void (NSDictionary<NSString *, NSObject *>*)> *__f_;
};

struct function<void (NSNotification *)> {
    struct type __buf_;
    struct __base<void (NSNotification *)> *__f_;
};

struct function<void (TBrowserTableView *, TColumnCellView *, long)> {
    struct type _field1;
    struct __base<void (TBrowserTableView *, TColumnCellView *, long)> *_field2;
};

struct function<void (TCollectionViewItem *, bool &)> {
    struct type _field1;
    struct __base<void (TCollectionViewItem *, bool &)> *_field2;
};

struct function<void (TFENode)> {
    struct type __buf_;
    struct __base<void (TFENode)> *__f_;
};

struct function<void (TGotoWindowController *, const TFENode &, const TFENode &, const TString &)> {
    struct type __buf_;
    struct __base<void (TGotoWindowController *, const TFENode &, const TFENode &, const TString &)> *__f_;
};

struct function<void (TPreviewOptions *)> {
    struct type __buf_;
    struct __base<void (TPreviewOptions *)> *__f_;
};

struct function<void (TString)> {
    struct type __buf_;
    struct __base<void (TString)> *__f_;
};

struct function<void (TTagInfo *, bool)> {
    struct type __buf_;
    struct __base<void (TTagInfo *, bool)> *__f_;
};

struct function<void (bool)> {
    struct type _field1;
    struct __base<void (bool)> *_field2;
};

struct function<void (const CGSize &)> {
    struct type _field1;
    struct __base<void (const CGSize &)> *_field2;
};

struct function<void (const TFENode &)> {
    struct type __buf_;
    struct __base<void (const TFENode &)> *__f_;
};

struct function<void (const TFENode &, const TFENode &, const TFENodeVector &)> {
    struct type _field1;
    struct __base<void (const TFENode &, const TFENode &, const TFENodeVector &)> *_field2;
};

struct function<void (const TFENode &, const TString &)> {
    struct type __buf_;
    struct __base<void (const TFENode &, const TString &)> *__f_;
};

struct function<void (const TFENodeVector &)> {
    struct type _field1;
    struct __base<void (const TFENodeVector &)> *_field2;
};

struct function<void (const TFENodeVector &, const TError &)> {
    struct type __buf_;
    struct __base<void (const TFENodeVector &, const TError &)> *__f_;
};

struct function<void (const std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>&, std::__1::unordered_map<TFENode, TChildrenData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildrenData>>>&, TGroupModeData &, std::__1::vector<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>, std::__1::allocator<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>>>&, bool, bool)> {
    struct type _field1;
    struct __base<void (const std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>&, std::__1::unordered_map<TFENode, TChildrenData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildrenData>>>&, TGroupModeData &, std::__1::vector<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>, std::__1::allocator<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>>>&, bool, bool)> *_field2;
};

struct function<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> {
    struct type _field1;
    struct __base<void (const std::__1::vector<TThumbnailExtractorData, std::__1::allocator<TThumbnailExtractorData>>&)> *_field2;
};

struct function<void (long)> {
    struct type __buf_;
    struct __base<void (long)> *__f_;
};

struct function<void (unsigned long long)> {
    struct type _field1;
    struct __base<void (unsigned long long)> *_field2;
};

struct function<void (unsigned long)> {
    struct type __buf_;
    struct __base<void (unsigned long)> *__f_;
};

struct map<CGSize, NSAttributedString *, CompareSizeByWidth, std::__1::allocator<std::__1::pair<const CGSize, NSAttributedString *>>> {
    struct __tree<std::__1::__value_type<CGSize, NSAttributedString *>, std::__1::__map_value_compare<CGSize, std::__1::__value_type<CGSize, NSAttributedString *>, CompareSizeByWidth, true>, std::__1::allocator<std::__1::__value_type<CGSize, NSAttributedString *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CGSize, NSAttributedString *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<CGSize, std::__1::__value_type<CGSize, NSAttributedString *>, CompareSizeByWidth, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TFENode, CGRect, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGRect>>> {
    struct __tree<std::__1::__value_type<TFENode, CGRect>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, CGRect>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TFENode, IconSpatialData, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, IconSpatialData>>> {
    struct __tree<std::__1::__value_type<TFENode, IconSpatialData>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, IconSpatialData>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, IconSpatialData>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, IconSpatialData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, IconSpatialData>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TFENode, TNSRef<NSMutableDictionary, void>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSMutableDictionary, void>>>> {
    struct __tree<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary, void>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary, void>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary, void>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary, void>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TNSRef<NSMutableDictionary, void>>, std::__1::less<TFENode>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, TObserverStats, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TObserverStats>>> {
    struct __tree<std::__1::__value_type<TFENode, TObserverStats>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TObserverStats>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TObserverStats>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TObserverStats>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TObserverStats>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TFENode, TOpenWithMenuData, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TOpenWithMenuData>>> {
    struct __tree<std::__1::__value_type<TFENode, TOpenWithMenuData>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TOpenWithMenuData>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, TOpenWithMenuData>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, TOpenWithMenuData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, TOpenWithMenuData>, std::__1::less<TFENode>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TFENode, const TFENodeVector *const, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, const TFENodeVector *const>>> {
    struct __tree<std::__1::__value_type<TFENode, const TFENodeVector *const>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, const TFENodeVector *const>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, const TFENodeVector *const>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, const TFENodeVector *const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, const TFENodeVector *const>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>>> {
    struct __tree<std::__1::__value_type<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TFENode, std::__1::pair<unsigned long, TFENode>, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::pair<unsigned long, TFENode>>>> {
    struct __tree<std::__1::__value_type<TFENode, std::__1::pair<unsigned long, TFENode>>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, std::__1::pair<unsigned long, TFENode>>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, std::__1::pair<unsigned long, TFENode>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, std::__1::pair<unsigned long, TFENode>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, std::__1::pair<unsigned long, TFENode>>, std::__1::less<TFENode>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TNSRef<NSProgress, void>, TNSRef<TProgressViewController, void>, std::__1::less<TNSRef<NSProgress, void>>, std::__1::allocator<std::__1::pair<const TNSRef<NSProgress, void>, TNSRef<TProgressViewController, void>>>> {
    struct __tree<std::__1::__value_type<TNSRef<NSProgress, void>, TNSRef<TProgressViewController, void>>, std::__1::__map_value_compare<TNSRef<NSProgress, void>, std::__1::__value_type<TNSRef<NSProgress, void>, TNSRef<TProgressViewController, void>>, std::__1::less<TNSRef<NSProgress, void>>, true>, std::__1::allocator<std::__1::__value_type<TNSRef<NSProgress, void>, TNSRef<TProgressViewController, void>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TNSRef<NSProgress, void>, TNSRef<TProgressViewController, void>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TNSRef<NSProgress, void>, std::__1::__value_type<TNSRef<NSProgress, void>, TNSRef<TProgressViewController, void>>, std::__1::less<TNSRef<NSProgress, void>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TNSRef<NSProgress, void>, std::__1::vector<TKeyValueObserver, std::__1::allocator<TKeyValueObserver>>, std::__1::less<TNSRef<NSProgress, void>>, std::__1::allocator<std::__1::pair<const TNSRef<NSProgress, void>, std::__1::vector<TKeyValueObserver, std::__1::allocator<TKeyValueObserver>>>>> {
    struct __tree<std::__1::__value_type<TNSRef<NSProgress, void>, std::__1::vector<TKeyValueObserver, std::__1::allocator<TKeyValueObserver>>>, std::__1::__map_value_compare<TNSRef<NSProgress, void>, std::__1::__value_type<TNSRef<NSProgress, void>, std::__1::vector<TKeyValueObserver, std::__1::allocator<TKeyValueObserver>>>, std::__1::less<TNSRef<NSProgress, void>>, true>, std::__1::allocator<std::__1::__value_type<TNSRef<NSProgress, void>, std::__1::vector<TKeyValueObserver, std::__1::allocator<TKeyValueObserver>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TNSRef<NSProgress, void>, std::__1::vector<TKeyValueObserver, std::__1::allocator<TKeyValueObserver>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TNSRef<NSProgress, void>, std::__1::__value_type<TNSRef<NSProgress, void>, std::__1::vector<TKeyValueObserver, std::__1::allocator<TKeyValueObserver>>>, std::__1::less<TNSRef<NSProgress, void>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TSidebarZone, TFENodeVector, std::__1::less<TSidebarZone>, std::__1::allocator<std::__1::pair<const TSidebarZone, TFENodeVector>>> {
    struct __tree<std::__1::__value_type<TSidebarZone, TFENodeVector>, std::__1::__map_value_compare<TSidebarZone, std::__1::__value_type<TSidebarZone, TFENodeVector>, std::__1::less<TSidebarZone>, true>, std::__1::allocator<std::__1::__value_type<TSidebarZone, TFENodeVector>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSidebarZone, TFENodeVector>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSidebarZone, std::__1::__value_type<TSidebarZone, TFENodeVector>, std::__1::less<TSidebarZone>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TString, TKVOPubKeyPathAndObservers, std::__1::less<TString>, std::__1::allocator<std::__1::pair<const TString, TKVOPubKeyPathAndObservers>>> {
    struct __tree<std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>, std::__1::__map_value_compare<TString, std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>, std::__1::less<TString>, true>, std::__1::allocator<std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TString, std::__1::__value_type<TString, TKVOPubKeyPathAndObservers>, std::__1::less<TString>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<TString, TNSRef<TDFRTagButton, void>, std::__1::less<TString>, std::__1::allocator<std::__1::pair<const TString, TNSRef<TDFRTagButton, void>>>> {
    struct __tree<std::__1::__value_type<TString, TNSRef<TDFRTagButton, void>>, std::__1::__map_value_compare<TString, std::__1::__value_type<TString, TNSRef<TDFRTagButton, void>>, std::__1::less<TString>, true>, std::__1::allocator<std::__1::__value_type<TString, TNSRef<TDFRTagButton, void>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TString, TNSRef<TDFRTagButton, void>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TString, std::__1::__value_type<TString, TNSRef<TDFRTagButton, void>>, std::__1::less<TString>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<const TNodeObserver *, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>, std::__1::less<const TNodeObserver *>, std::__1::allocator<std::__1::pair<const TNodeObserver *const, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>>>> {
    struct __tree<std::__1::__value_type<const TNodeObserver *, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>>, std::__1::__map_value_compare<const TNodeObserver *, std::__1::__value_type<const TNodeObserver *, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>>, std::__1::less<const TNodeObserver *>, true>, std::__1::allocator<std::__1::__value_type<const TNodeObserver *, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TNodeObserver *, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TNodeObserver *, std::__1::__value_type<const TNodeObserver *, std::__1::pair<std::__1::weak_ptr<TNodeObserver>, TObserverStats>>, std::__1::less<const TNodeObserver *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long, TFENode, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TFENode>>> {
    struct __tree<std::__1::__value_type<long, TFENode>, std::__1::__map_value_compare<long, std::__1::__value_type<long, TFENode>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, TFENode>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, TFENode>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, TFENode>, std::__1::less<long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long, TNSRef<IPropertyValueApplicator, void>, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TNSRef<IPropertyValueApplicator, void>>>> {
    struct __tree<std::__1::__value_type<long, TNSRef<IPropertyValueApplicator, void>>, std::__1::__map_value_compare<long, std::__1::__value_type<long, TNSRef<IPropertyValueApplicator, void>>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, TNSRef<IPropertyValueApplicator, void>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, TNSRef<IPropertyValueApplicator, void>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, TNSRef<IPropertyValueApplicator, void>>, std::__1::less<long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long, TNSRef<TSegmentedControlHelper, void>, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TNSRef<TSegmentedControlHelper, void>>>> {
    struct __tree<std::__1::__value_type<long, TNSRef<TSegmentedControlHelper, void>>, std::__1::__map_value_compare<long, std::__1::__value_type<long, TNSRef<TSegmentedControlHelper, void>>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, TNSRef<TSegmentedControlHelper, void>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, TNSRef<TSegmentedControlHelper, void>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, TNSRef<TSegmentedControlHelper, void>>, std::__1::less<long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::shared_ptr<TGroup>, TFENodeVector, finder_memory_extras::shared_less<TGroup>, std::__1::allocator<std::__1::pair<const std::__1::shared_ptr<TGroup>, TFENodeVector>>> {
    struct __tree<std::__1::__value_type<std::__1::shared_ptr<TGroup>, TFENodeVector>, std::__1::__map_value_compare<std::__1::shared_ptr<TGroup>, std::__1::__value_type<std::__1::shared_ptr<TGroup>, TFENodeVector>, finder_memory_extras::shared_less<TGroup>, true>, std::__1::allocator<std::__1::__value_type<std::__1::shared_ptr<TGroup>, TFENodeVector>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::shared_ptr<TGroup>, TFENodeVector>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::shared_ptr<TGroup>, std::__1::__value_type<std::__1::shared_ptr<TGroup>, TFENodeVector>, finder_memory_extras::shared_less<TGroup>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, TThumbnailExtractorData::TThumbnailData, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TThumbnailExtractorData::TThumbnailData>>> {
    struct __tree<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TThumbnailExtractorData::TThumbnailData>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct optional<unsigned long> {
    union {
        char __null_state_;
        unsigned long long __val_;
    } ;
    _Bool __engaged_;
};

struct pair<CGSize, double> {
    struct CGSize _field1;
    double _field2;
};

struct pair<NSImage *, TString> {
    id _field1;
    struct TString _field2;
};

struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>;

struct pair<OperationConflict, OperationResolution>;

struct pair<QLPreviewEditMode, TFENode> {
    long long first;
    struct TFENode second;
};

struct pair<TFENode, NodeNotificationOptions>;

struct pair<TFENode, TFENode>;

struct pair<TFENode, TFENodePropertyList>;

struct pair<TFENode, TNSRef<NSImage, void>>;

struct pair<TFENode, unsigned int>;

struct pair<TNSRef<NSObject, void>, unsigned long>;

struct pair<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>> {
    struct TNSRef<TDesktopViewDataSourcePileItem, void> _field1;
    TNSRef_469baef2 _field2;
};

struct pair<TString, TString> {
    struct TString _field1;
    struct TString _field2;
};

struct pair<TString, unsigned long> {
    struct TString _field1;
    unsigned long long _field2;
};

struct pair<double, double> {
    double _field1;
    double _field2;
};

struct set<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
    struct __tree<TFENode, std::__1::less<TFENode>, std::__1::allocator<TFENode>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TFENode, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TFENode>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<TString, std::__1::less<TString>, std::__1::allocator<TString>> {
    struct __tree<TString, std::__1::less<TString>, std::__1::allocator<TString>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TString, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TString>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID>> {
    struct __tree<UDefaults::RegistryID, std::__1::less<UDefaults::RegistryID>, std::__1::allocator<UDefaults::RegistryID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UDefaults::RegistryID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UDefaults::RegistryID>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<double, std::__1::less<double>, std::__1::allocator<double>> {
    struct __tree<double, std::__1::less<double>, std::__1::allocator<double>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<double, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<double>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<IAirDropBaseOperationController> {
    struct IAirDropBaseOperationController *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ISpawnOrigin> {
    struct ISpawnOrigin *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TAirDropReceiverOperationController> {
    struct TAirDropReceiverOperationController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TAirDropSenderOperationController> {
    struct TAirDropSenderOperationController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TAsyncNodeOperationAssistant> {
    struct TAsyncNodeOperationAssistant *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TBestFitFormatterSelector> {
    struct TBestFitFormatterSelector *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TBestFitStringSelector> {
    struct TBestFitStringSelector *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TBurningDevice> {
    struct TBurningDevice *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TCoalescingNodeObserverCocoaBridge> {
    struct TCoalescingNodeObserverCocoaBridge *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TColumnPreviewQTEjectHelper> {
    struct TColumnPreviewQTEjectHelper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TDesktopNodesComparator> {
    struct TDesktopNodesComparator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TDisableScreenUpdatesInWindow> {
    struct TDisableScreenUpdatesInWindow *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TEnableObserverAdaptor<TNodeObserver, TCustomNode>> {
    struct TEnableObserverAdaptor<TNodeObserver, TCustomNode> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TEnableObserverAdaptor<TNodeObserver, TNewFolderAction>> {
    struct TEnableObserverAdaptor<TNodeObserver, TNewFolderAction> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TEnableObserverAdaptor<TNodeObserver, TRenameAction>> {
    struct TEnableObserverAdaptor<TNodeObserver, TRenameAction> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TFENodeComparator> {
    struct TFENodeComparator *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TFullScreenAnimationInfo> {
    struct TFullScreenAnimationInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TGroup> {
    struct TGroup *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TIconFetcher> {
    struct TIconFetcher *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TInfoExtractorController> {
    struct TInfoExtractorController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TItemMetadata> {
    struct TItemMetadata *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TNodeEngineCocoaBridge> {
    struct TNodeEngineCocoaBridge *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TNodeObserverCocoaBridge> {
    struct TNodeObserverCocoaBridge *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TPromiseDragReceiverThread> {
    struct TPromiseDragReceiverThread *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TQLPreviewViewQTEjectHelper> {
    struct TQLPreviewViewQTEjectHelper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TQLPreviewWindowQTEjectHelper> {
    struct TQLPreviewWindowQTEjectHelper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TSeamlessOpenerSpawnOrigin> {
    struct TSeamlessOpenerSpawnOrigin *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TTagsTask> {
    struct TTagsTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TTask> {
    struct TTask *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TThreadSafeQueue<TNSRef<TQueuedPopoverController, void>>> {
    struct TThreadSafeQueue<TNSRef<TQueuedPopoverController, void>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TThumbnailExtractorController> {
    struct TThumbnailExtractorController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TThumbnailExtractorThread> {
    struct TThumbnailExtractorThread *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TTimeMachineTarget> {
    struct TTimeMachineTarget *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TUndoableActionManager> {
    struct TUndoableActionManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TVolumeEraseTask> {
    struct TVolumeEraseTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::mutex> {
    struct mutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<TOpenContainerOptions, std::__1::allocator<TOpenContainerOptions>>> {
    vector_a7e7ffc1 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<std::__1::pair<TFENode, NodeNotificationOptions>, std::__1::allocator<std::__1::pair<TFENode, NodeNotificationOptions>>>> {
    vector_c133cd5b *_field1;
    struct __shared_weak_count *_field2;
};

struct tuple<bool, bool> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1>, bool, bool> {
        _Bool _field1;
        _Bool _field2;
    } _field1;
};

struct type {
    unsigned char __lx[32];
};

struct unique_function<void ()> {
    struct unique_ptr<fstd::finder_callable_details::callable_holder_base<void>, std::__1::default_delete<fstd::finder_callable_details::callable_holder_base<void>>> fLambdaHolder;
};

struct unique_ptr<Browser::TIconBrowserSettings, std::__1::default_delete<Browser::TIconBrowserSettings>> {
    struct __compressed_pair<Browser::TIconBrowserSettings *, std::__1::default_delete<Browser::TIconBrowserSettings>> {
        struct TIconBrowserSettings *__value_;
    } __ptr_;
};

struct unique_ptr<Browser::TListBrowserSettings, std::__1::default_delete<Browser::TListBrowserSettings>> {
    struct __compressed_pair<Browser::TListBrowserSettings *, std::__1::default_delete<Browser::TListBrowserSettings>> {
        struct TListBrowserSettings *__value_;
    } __ptr_;
};

struct unique_ptr<IBaseQueueStyle<TFENode>, std::__1::default_delete<IBaseQueueStyle<TFENode>>> {
    struct __compressed_pair<IBaseQueueStyle<TFENode>*, std::__1::default_delete<IBaseQueueStyle<TFENode>>> {
        struct IBaseQueueStyle<TFENode> *_field1;
    } _field1;
};

struct unique_ptr<TBlockingQueue, std::__1::default_delete<TBlockingQueue>> {
    struct __compressed_pair<TBlockingQueue *, std::__1::default_delete<TBlockingQueue>> {
        struct TBlockingQueue *__value_;
    } __ptr_;
};

struct unique_ptr<TBrowserImmediateActionGestureRecognizerHandlerBase, std::__1::default_delete<TBrowserImmediateActionGestureRecognizerHandlerBase>> {
    struct __compressed_pair<TBrowserImmediateActionGestureRecognizerHandlerBase *, std::__1::default_delete<TBrowserImmediateActionGestureRecognizerHandlerBase>> {
        struct TBrowserImmediateActionGestureRecognizerHandlerBase *__value_;
    } __ptr_;
};

struct unique_ptr<TFavoriteServersListObserverCocoaBridge, std::__1::default_delete<TFavoriteServersListObserverCocoaBridge>> {
    struct __compressed_pair<TFavoriteServersListObserverCocoaBridge *, std::__1::default_delete<TFavoriteServersListObserverCocoaBridge>> {
        struct TFavoriteServersListObserverCocoaBridge *__value_;
    } __ptr_;
};

struct unique_ptr<TMetadataAvailability, std::__1::default_delete<TMetadataAvailability>> {
    struct __compressed_pair<TMetadataAvailability *, std::__1::default_delete<TMetadataAvailability>> {
        struct TMetadataAvailability *__value_;
    } __ptr_;
};

struct unique_ptr<TNewFolderCallbackHandler, std::__1::default_delete<TNewFolderCallbackHandler>> {
    struct __compressed_pair<TNewFolderCallbackHandler *, std::__1::default_delete<TNewFolderCallbackHandler>> {
        struct TNewFolderCallbackHandler *__value_;
    } __ptr_;
};

struct unique_ptr<TNodeChangeNotifier, std::__1::default_delete<TNodeChangeNotifier>> {
    struct __compressed_pair<TNodeChangeNotifier *, std::__1::default_delete<TNodeChangeNotifier>> {
        struct TNodeChangeNotifier *_field1;
    } _field1;
};

struct unique_ptr<TPointQuadTree<unsigned long>, std::__1::default_delete<TPointQuadTree<unsigned long>>> {
    struct __compressed_pair<TPointQuadTree<unsigned long>*, std::__1::default_delete<TPointQuadTree<unsigned long>>> {
        struct TPointQuadTree<unsigned long> *__value_;
    } __ptr_;
};

struct unique_ptr<TRecentServers, std::__1::default_delete<TRecentServers>> {
    struct __compressed_pair<TRecentServers *, std::__1::default_delete<TRecentServers>> {
        struct TRecentServers *__value_;
    } __ptr_;
};

struct unique_ptr<TRenameUndoRedoOperationHelper, std::__1::default_delete<TRenameUndoRedoOperationHelper>> {
    struct __compressed_pair<TRenameUndoRedoOperationHelper *, std::__1::default_delete<TRenameUndoRedoOperationHelper>> {
        struct TRenameUndoRedoOperationHelper *__value_;
    } __ptr_;
};

struct unique_ptr<TSharedFileListItem, std::__1::default_delete<TSharedFileListItem>> {
    struct __compressed_pair<TSharedFileListItem *, std::__1::default_delete<TSharedFileListItem>> {
        struct TSharedFileListItem *__value_;
    } __ptr_;
};

struct unique_ptr<const std::__1::vector<TMetadataAttribute, std::__1::allocator<TMetadataAttribute>>, std::__1::default_delete<const std::__1::vector<TMetadataAttribute, std::__1::allocator<TMetadataAttribute>>>> {
    struct __compressed_pair<const std::__1::vector<TMetadataAttribute, std::__1::allocator<TMetadataAttribute>>*, std::__1::default_delete<const std::__1::vector<TMetadataAttribute, std::__1::allocator<TMetadataAttribute>>>> {
        vector_6a476d2d *__value_;
    } __ptr_;
};

struct unique_ptr<fstd::finder_callable_details::callable_holder_base<void>, std::__1::default_delete<fstd::finder_callable_details::callable_holder_base<void>>> {
    struct __compressed_pair<fstd::finder_callable_details::callable_holder_base<void>*, std::__1::default_delete<fstd::finder_callable_details::callable_holder_base<void>>> {
        struct callable_holder_base<void> *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<NSObject *, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TFENode, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<TString, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<TFENode, CGPoint, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGPoint>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, CGPoint>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, CGPoint>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, CGPoint>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, CGPoint>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, CGPoint>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, CGPoint>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, CGPoint>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, ContainerObservingOptions, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, ContainerObservingOptions>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, ContainerObservingOptions>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, IconSpatialData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, IconSpatialData>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, IconSpatialData>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, IconSpatialData>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, IconSpatialData>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, IconSpatialData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, IconSpatialData>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, IconSpatialData>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, IconSpatialData>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, NodeNotificationOptions, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, NodeNotificationOptions>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, NodeNotificationOptions>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>;

struct unordered_map<TFENode, TChildrenData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildrenData>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TChildrenData>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TChildrenData>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TChildrenData>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TChildrenData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TChildrenData>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TChildrenData>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TFENodeOrderedSet, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TFENodeOrderedSet>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TGroupInFolderItem, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TGroupInFolderItem>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TGroupInFolderItem>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TGroupModeData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TGroupModeData>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TGroupModeData>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TGroupModeData>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TGroupModeData>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TGroupModeData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TGroupModeData>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TGroupModeData>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TGroupModeData>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNSRef<NSIndexPath, void>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSIndexPath, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, TNSRef<NSObject, void>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSObject, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSObject, void>>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TBVDSBusyStateIncrementer, void>>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TNSRef<TDesktopIconView, void>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TDesktopIconView, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TOpenContainerOptions, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TOpenContainerOptions>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TOpenContainerOptions>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, TString, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TString>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TString>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TString>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TString>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TString>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, long, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, long>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, long>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, long>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, long>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, long>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, long>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, std::__1::shared_ptr<TCoalescedEvents>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::shared_ptr<TCoalescedEvents>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TCoalescedEvents>>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, std::__1::shared_ptr<TGroup>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::shared_ptr<TGroup>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::shared_ptr<TGroup>>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::vector<std::__1::pair<TFENode, TFENodePropertyList>, std::__1::allocator<std::__1::pair<TFENode, TFENodePropertyList>>>>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TFENode, unsigned long, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, unsigned long>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, unsigned long>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, unsigned long>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, unsigned long>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, unsigned long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, unsigned long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, unsigned long>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, unsigned long>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>, std::__1::hash<TNSRef<NSFormatter, void>>, std::__1::equal_to<TNSRef<NSFormatter, void>>, std::__1::allocator<std::__1::pair<const TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, std::__1::__unordered_map_hasher<TNSRef<NSFormatter, void>, std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, std::__1::hash<TNSRef<NSFormatter, void>>, true>, std::__1::__unordered_map_equal<TNSRef<NSFormatter, void>, std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, std::__1::equal_to<TNSRef<NSFormatter, void>>, true>, std::__1::allocator<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TNSRef<NSFormatter, void>, std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, std::__1::hash<TNSRef<NSFormatter, void>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TNSRef<NSFormatter, void>, std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, std::__1::equal_to<TNSRef<NSFormatter, void>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<TNSRef<NSObject, void>, unsigned long, std::__1::hash<TNSRef<NSObject, void>>, std::__1::equal_to<TNSRef<NSObject, void>>, std::__1::allocator<std::__1::pair<const TNSRef<NSObject, void>, unsigned long>>> {
    struct __hash_table<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, std::__1::__unordered_map_hasher<TNSRef<NSObject, void>, std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, std::__1::hash<TNSRef<NSObject, void>>, true>, std::__1::__unordered_map_equal<TNSRef<NSObject, void>, std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, std::__1::equal_to<TNSRef<NSObject, void>>, true>, std::__1::allocator<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TNSRef<NSObject, void>, std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, std::__1::hash<TNSRef<NSObject, void>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TNSRef<NSObject, void>, std::__1::__hash_value_type<TNSRef<NSObject, void>, unsigned long>, std::__1::equal_to<TNSRef<NSObject, void>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>, std::__1::hash<TNSRef<NSView, void>>, std::__1::equal_to<TNSRef<NSView, void>>, std::__1::allocator<std::__1::pair<const TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>>> {
    struct __hash_table<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, std::__1::__unordered_map_hasher<TNSRef<NSView, void>, std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, std::__1::hash<TNSRef<NSView, void>>, true>, std::__1::__unordered_map_equal<TNSRef<NSView, void>, std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, std::__1::equal_to<TNSRef<NSView, void>>, true>, std::__1::allocator<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TNSRef<NSView, void>, std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, std::__1::hash<TNSRef<NSView, void>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TNSRef<NSView, void>, std::__1::__hash_value_type<TNSRef<NSView, void>, std::__1::pair<unsigned long, TNotificationCenterObserver>>, std::__1::equal_to<TNSRef<NSView, void>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TNSRef<TAirDropIconView, void>, KVOHelpers, std::__1::hash<TNSRef<TAirDropIconView, void>>, std::__1::equal_to<TNSRef<TAirDropIconView, void>>, std::__1::allocator<std::__1::pair<const TNSRef<TAirDropIconView, void>, KVOHelpers>>> {
    struct __hash_table<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, std::__1::__unordered_map_hasher<TNSRef<TAirDropIconView, void>, std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, std::__1::hash<TNSRef<TAirDropIconView, void>>, true>, std::__1::__unordered_map_equal<TNSRef<TAirDropIconView, void>, std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, std::__1::equal_to<TNSRef<TAirDropIconView, void>>, true>, std::__1::allocator<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TNSRef<TAirDropIconView, void>, std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, std::__1::hash<TNSRef<TAirDropIconView, void>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TNSRef<TAirDropIconView, void>, std::__1::__hash_value_type<TNSRef<TAirDropIconView, void>, KVOHelpers>, std::__1::equal_to<TNSRef<TAirDropIconView, void>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>, std::__1::hash<TNSRef<TDesktopViewDataSourcePileItem, void>>, std::__1::equal_to<TNSRef<TDesktopViewDataSourcePileItem, void>>, std::__1::allocator<std::__1::pair<const TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, std::__1::__unordered_map_hasher<TNSRef<TDesktopViewDataSourcePileItem, void>, std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, std::__1::hash<TNSRef<TDesktopViewDataSourcePileItem, void>>, true>, std::__1::__unordered_map_equal<TNSRef<TDesktopViewDataSourcePileItem, void>, std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, std::__1::equal_to<TNSRef<TDesktopViewDataSourcePileItem, void>>, true>, std::__1::allocator<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TNSRef<TDesktopViewDataSourcePileItem, void>, std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, std::__1::hash<TNSRef<TDesktopViewDataSourcePileItem, void>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TNSRef<TDesktopViewDataSourcePileItem, void>, std::__1::__hash_value_type<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>>, std::__1::equal_to<TNSRef<TDesktopViewDataSourcePileItem, void>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>, std::__1::hash<TNSRef<TDesktopWindowController, void>>, std::__1::equal_to<TNSRef<TDesktopWindowController, void>>, std::__1::allocator<std::__1::pair<const TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, std::__1::__unordered_map_hasher<TNSRef<TDesktopWindowController, void>, std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, std::__1::hash<TNSRef<TDesktopWindowController, void>>, true>, std::__1::__unordered_map_equal<TNSRef<TDesktopWindowController, void>, std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, std::__1::equal_to<TNSRef<TDesktopWindowController, void>>, true>, std::__1::allocator<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TNSRef<TDesktopWindowController, void>, std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, std::__1::hash<TNSRef<TDesktopWindowController, void>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TNSRef<TDesktopWindowController, void>, std::__1::__hash_value_type<TNSRef<TDesktopWindowController, void>, std::__1::vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>>>, std::__1::equal_to<TNSRef<TDesktopWindowController, void>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TString, TNSRef<NSImage, void>, std::__1::hash<TString>, std::__1::equal_to<TString>, std::__1::allocator<std::__1::pair<const TString, TNSRef<NSImage, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, std::__1::hash<TString>, true>, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, std::__1::equal_to<TString>, true>, std::__1::allocator<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, std::__1::hash<TString>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, TNSRef<NSImage, void>>, std::__1::equal_to<TString>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TString, TNSRef<TPreviewOptions, void>, std::__1::hash<TString>, std::__1::equal_to<TString>, std::__1::allocator<std::__1::pair<const TString, TNSRef<TPreviewOptions, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, std::__1::hash<TString>, true>, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, std::__1::equal_to<TString>, true>, std::__1::allocator<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, std::__1::hash<TString>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, TNSRef<TPreviewOptions, void>>, std::__1::equal_to<TString>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TString, TString, std::__1::hash<TString>, std::__1::equal_to<TString>, std::__1::allocator<std::__1::pair<const TString, TString>>> {
    struct __hash_table<std::__1::__hash_value_type<TString, TString>, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, TString>, std::__1::hash<TString>, true>, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, TString>, std::__1::equal_to<TString>, true>, std::__1::allocator<std::__1::__hash_value_type<TString, TString>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, TString>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, TString>, std::__1::hash<TString>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, TString>, std::__1::equal_to<TString>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>, TStringCaseInsensitiveHash, TStringCaseInsensitiveCompare, std::__1::allocator<std::__1::pair<const TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveHash, true>, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveCompare, true>, std::__1::allocator<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveHash, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TString, std::__1::__hash_value_type<TString, std::__1::vector<TruncationTableElement, std::__1::allocator<TruncationTableElement>>>, TStringCaseInsensitiveCompare, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::shared_ptr<TGroup>, TFENode, finder_memory_extras::shared_hash<TGroup>, finder_memory_extras::shared_equal_to<TGroup>, std::__1::allocator<std::__1::pair<const std::__1::shared_ptr<TGroup>, TFENode>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, std::__1::__unordered_map_hasher<std::__1::shared_ptr<TGroup>, std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, finder_memory_extras::shared_hash<TGroup>, true>, std::__1::__unordered_map_equal<std::__1::shared_ptr<TGroup>, std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, finder_memory_extras::shared_equal_to<TGroup>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::shared_ptr<TGroup>, std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, finder_memory_extras::shared_hash<TGroup>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::shared_ptr<TGroup>, std::__1::__hash_value_type<std::__1::shared_ptr<TGroup>, TFENode>, finder_memory_extras::shared_equal_to<TGroup>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, CGRect, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, CGRect>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, CGRect>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CGRect>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CGRect>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, CGRect>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, CGRect>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, CGRect>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, CGRect>, std::__1::equal_to<unsigned int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, std::__1::hash<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<std::__1::weak_ptr<TNotificationReceiver>, std::__1::allocator<std::__1::weak_ptr<TNotificationReceiver>>>>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>>>, std::__1::equal_to<unsigned long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *>> {
    struct __hash_table<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>, std::__1::allocator<std::__1::__hash_node<NSObject *, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<NSObject *, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<NSObject *>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<NSObject *>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>> {
    struct __hash_table<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>, std::__1::allocator<std::__1::__hash_node<TFENode, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TFENode, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TFENode>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TFENode>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_set<TString, std::__1::hash<TString>, std::__1::equal_to<TString>, std::__1::allocator<TString>> {
    struct __hash_table<TString, std::__1::hash<TString>, std::__1::equal_to<TString>, std::__1::allocator<TString>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>, std::__1::allocator<std::__1::__hash_node<TString, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TString, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TString>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TString>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<std::__1::shared_ptr<TGroup>, std::__1::hash<std::__1::shared_ptr<TGroup>>, std::__1::equal_to<std::__1::shared_ptr<TGroup>>, std::__1::allocator<std::__1::shared_ptr<TGroup>>> {
    struct __hash_table<std::__1::shared_ptr<TGroup>, std::__1::hash<std::__1::shared_ptr<TGroup>>, std::__1::equal_to<std::__1::shared_ptr<TGroup>>, std::__1::allocator<std::__1::shared_ptr<TGroup>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::shared_ptr<TGroup>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::shared_ptr<TGroup>>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<Browser::ColumnDesc, std::__1::allocator<Browser::ColumnDesc>> {
    struct ColumnDesc *_field1;
    struct ColumnDesc *_field2;
    struct __compressed_pair<Browser::ColumnDesc *, std::__1::allocator<Browser::ColumnDesc>> {
        struct ColumnDesc *_field1;
    } _field3;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *_field1;
    struct CGPoint *_field2;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *_field1;
    } _field3;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__value_;
    } __end_cap_;
};

struct vector<CGSize, std::__1::allocator<CGSize>> {
    struct CGSize *__begin_;
    struct CGSize *__end_;
    struct __compressed_pair<CGSize *, std::__1::allocator<CGSize>> {
        struct CGSize *__value_;
    } __end_cap_;
};

struct vector<IconSpatialData, std::__1::allocator<IconSpatialData>> {
    struct IconSpatialData *__begin_;
    struct IconSpatialData *__end_;
    struct __compressed_pair<IconSpatialData *, std::__1::allocator<IconSpatialData>> {
        struct IconSpatialData *__value_;
    } __end_cap_;
};

struct vector<NSObject<TAirDropProgressControllerDelegate>*, std::__1::allocator<NSObject<TAirDropProgressControllerDelegate>*>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<NSObject<TAirDropProgressControllerDelegate>**, std::__1::allocator<NSObject<TAirDropProgressControllerDelegate>*>> {
        id *__value_;
    } __end_cap_;
};

struct vector<TAccessControlInfo, std::__1::allocator<TAccessControlInfo>> {
    struct TAccessControlInfo *_field1;
    struct TAccessControlInfo *_field2;
    struct __compressed_pair<TAccessControlInfo *, std::__1::allocator<TAccessControlInfo>> {
        struct TAccessControlInfo *_field1;
    } _field3;
};

struct vector<TAdjustContainerOptions, std::__1::allocator<TAdjustContainerOptions>> {
    struct TAdjustContainerOptions *_field1;
    struct TAdjustContainerOptions *_field2;
    struct __compressed_pair<TAdjustContainerOptions *, std::__1::allocator<TAdjustContainerOptions>> {
        struct TAdjustContainerOptions *_field1;
    } _field3;
};

struct vector<TCompletionNodeAndNames, std::__1::allocator<TCompletionNodeAndNames>> {
    struct TCompletionNodeAndNames *__begin_;
    struct TCompletionNodeAndNames *__end_;
    struct __compressed_pair<TCompletionNodeAndNames *, std::__1::allocator<TCompletionNodeAndNames>> {
        struct TCompletionNodeAndNames *__value_;
    } __end_cap_;
};

struct vector<TDesktopViewDataSourceItem *, std::__1::allocator<TDesktopViewDataSourceItem *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<TDesktopViewDataSourceItem **, std::__1::allocator<TDesktopViewDataSourceItem *>> {
        id *_field1;
    } _field3;
};

struct vector<TFENode, std::__1::allocator<TFENode>> {
    struct TFENode *_field1;
    struct TFENode *_field2;
    struct __compressed_pair<TFENode *, std::__1::allocator<TFENode>> _field3;
};

struct vector<TFENodePropertyList, std::__1::allocator<TFENodePropertyList>> {
    struct TFENodePropertyList *_field1;
    struct TFENodePropertyList *_field2;
    struct __compressed_pair<TFENodePropertyList *, std::__1::allocator<TFENodePropertyList>> {
        struct TFENodePropertyList *_field1;
    } _field3;
};

struct vector<TFormattedDateEntry, std::__1::allocator<TFormattedDateEntry>> {
    struct TFormattedDateEntry *__begin_;
    struct TFormattedDateEntry *__end_;
    struct __compressed_pair<TFormattedDateEntry *, std::__1::allocator<TFormattedDateEntry>> {
        struct TFormattedDateEntry *__value_;
    } __end_cap_;
};

struct vector<TIdentity, std::__1::allocator<TIdentity>> {
    struct TIdentity *_field1;
    struct TIdentity *_field2;
    struct __compressed_pair<TIdentity *, std::__1::allocator<TIdentity>> {
        struct TIdentity *_field1;
    } _field3;
};

struct vector<TKeyValueBinder, std::__1::allocator<TKeyValueBinder>> {
    struct TKeyValueBinder *__begin_;
    struct TKeyValueBinder *__end_;
    struct __compressed_pair<TKeyValueBinder *, std::__1::allocator<TKeyValueBinder>> {
        struct TKeyValueBinder *__value_;
    } __end_cap_;
};

struct vector<TKeyValueObserver, std::__1::allocator<TKeyValueObserver>> {
    struct TKeyValueObserver *__begin_;
    struct TKeyValueObserver *__end_;
    struct __compressed_pair<TKeyValueObserver *, std::__1::allocator<TKeyValueObserver>> {
        struct TKeyValueObserver *__value_;
    } __end_cap_;
};

struct vector<TMDQueryAliasNode::SearchScopeDefinition, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> {
    struct SearchScopeDefinition *_field1;
    struct SearchScopeDefinition *_field2;
    struct __compressed_pair<TMDQueryAliasNode::SearchScopeDefinition *, std::__1::allocator<TMDQueryAliasNode::SearchScopeDefinition>> {
        struct SearchScopeDefinition *_field1;
    } _field3;
};

struct vector<TMetadataAttribute, std::__1::allocator<TMetadataAttribute>> {
    struct TMetadataAttribute *__begin_;
    struct TMetadataAttribute *__end_;
    struct __compressed_pair<TMetadataAttribute *, std::__1::allocator<TMetadataAttribute>> {
        struct TMetadataAttribute *__value_;
    } __end_cap_;
};

struct vector<TNSRef<NSURL, void>, std::__1::allocator<TNSRef<NSURL, void>>> {
    struct TNSRef<NSURL, void> *__begin_;
    struct TNSRef<NSURL, void> *__end_;
    struct __compressed_pair<TNSRef<NSURL, void>*, std::__1::allocator<TNSRef<NSURL, void>>> {
        struct TNSRef<NSURL, void> *__value_;
    } __end_cap_;
};

struct vector<TNSRef<NSWindow, void>, std::__1::allocator<TNSRef<NSWindow, void>>> {
    struct TNSRef<NSWindow, void> *__begin_;
    struct TNSRef<NSWindow, void> *__end_;
    struct __compressed_pair<TNSRef<NSWindow, void>*, std::__1::allocator<TNSRef<NSWindow, void>>> {
        struct TNSRef<NSWindow, void> *__value_;
    } __end_cap_;
};

struct vector<TNSRef<TDesktopViewController, void>, std::__1::allocator<TNSRef<TDesktopViewController, void>>> {
    struct TNSRef<TDesktopViewController, void> *__begin_;
    struct TNSRef<TDesktopViewController, void> *__end_;
    struct __compressed_pair<TNSRef<TDesktopViewController, void>*, std::__1::allocator<TNSRef<TDesktopViewController, void>>> {
        struct TNSRef<TDesktopViewController, void> *__value_;
    } __end_cap_;
};

struct vector<TNSRef<TDesktopViewDataSourceItem, void>, std::__1::allocator<TNSRef<TDesktopViewDataSourceItem, void>>> {
    struct TNSRef<TDesktopViewDataSourceItem, void> *__begin_;
    struct TNSRef<TDesktopViewDataSourceItem, void> *__end_;
    struct __compressed_pair<TNSRef<TDesktopViewDataSourceItem, void>*, std::__1::allocator<TNSRef<TDesktopViewDataSourceItem, void>>> {
        struct TNSRef<TDesktopViewDataSourceItem, void> *__value_;
    } __end_cap_;
};

struct vector<TNSRef<TDesktopViewDataSourcePileItem, void>, std::__1::allocator<TNSRef<TDesktopViewDataSourcePileItem, void>>> {
    struct TNSRef<TDesktopViewDataSourcePileItem, void> *__begin_;
    struct TNSRef<TDesktopViewDataSourcePileItem, void> *__end_;
    struct __compressed_pair<TNSRef<TDesktopViewDataSourcePileItem, void>*, std::__1::allocator<TNSRef<TDesktopViewDataSourcePileItem, void>>> {
        struct TNSRef<TDesktopViewDataSourcePileItem, void> *__value_;
    } __end_cap_;
};

struct vector<TNSRef<TDesktopWindowController, void>, std::__1::allocator<TNSRef<TDesktopWindowController, void>>> {
    struct TNSRef<TDesktopWindowController, void> *__begin_;
    struct TNSRef<TDesktopWindowController, void> *__end_;
    struct __compressed_pair<TNSRef<TDesktopWindowController, void>*, std::__1::allocator<TNSRef<TDesktopWindowController, void>>> {
        struct TNSRef<TDesktopWindowController, void> *__value_;
    } __end_cap_;
};

struct vector<TNSRef<TLayer, void>, std::__1::allocator<TNSRef<TLayer, void>>> {
    struct TNSRef<TLayer, void> *_field1;
    struct TNSRef<TLayer, void> *_field2;
    struct __compressed_pair<TNSRef<TLayer, void>*, std::__1::allocator<TNSRef<TLayer, void>>> {
        struct TNSRef<TLayer, void> *_field1;
    } _field3;
};

struct vector<TNSRef<TSidebarViewController, void>, std::__1::allocator<TNSRef<TSidebarViewController, void>>> {
    struct TNSRef<TSidebarViewController, void> *__begin_;
    struct TNSRef<TSidebarViewController, void> *__end_;
    struct __compressed_pair<TNSRef<TSidebarViewController, void>*, std::__1::allocator<TNSRef<TSidebarViewController, void>>> {
        struct TNSRef<TSidebarViewController, void> *__value_;
    } __end_cap_;
};

struct vector<TNSRef<TTargetActionFunctor, void>, std::__1::allocator<TNSRef<TTargetActionFunctor, void>>> {
    struct TNSRef<TTargetActionFunctor, void> *__begin_;
    struct TNSRef<TTargetActionFunctor, void> *__end_;
    struct __compressed_pair<TNSRef<TTargetActionFunctor, void>*, std::__1::allocator<TNSRef<TTargetActionFunctor, void>>> {
        struct TNSRef<TTargetActionFunctor, void> *__value_;
    } __end_cap_;
};

struct vector<TNotificationCenterObserver, std::__1::allocator<TNotificationCenterObserver>> {
    struct TNotificationCenterObserver *__begin_;
    struct TNotificationCenterObserver *__end_;
    struct __compressed_pair<TNotificationCenterObserver *, std::__1::allocator<TNotificationCenterObserver>> {
        struct TNotificationCenterObserver *__value_;
    } __end_cap_;
};

struct vector<TOpenContainerOptions, std::__1::allocator<TOpenContainerOptions>> {
    struct TOpenContainerOptions *_field1;
    struct TOpenContainerOptions *_field2;
    struct __compressed_pair<TOpenContainerOptions *, std::__1::allocator<TOpenContainerOptions>> {
        struct TOpenContainerOptions *_field1;
    } _field3;
};

struct vector<TOperationRecord, std::__1::allocator<TOperationRecord>> {
    struct TOperationRecord *__begin_;
    struct TOperationRecord *__end_;
    struct __compressed_pair<TOperationRecord *, std::__1::allocator<TOperationRecord>> {
        struct TOperationRecord *__value_;
    } __end_cap_;
};

struct vector<TPointQuadTreeNode<unsigned long>, std::__1::allocator<TPointQuadTreeNode<unsigned long>>> {
    struct TPointQuadTreeNode<unsigned long> *__begin_;
    struct TPointQuadTreeNode<unsigned long> *__end_;
    struct __compressed_pair<TPointQuadTreeNode<unsigned long>*, std::__1::allocator<TPointQuadTreeNode<unsigned long>>> {
        struct TPointQuadTreeNode<unsigned long> *__value_;
    } __end_cap_;
};

struct vector<TRecentServer, std::__1::allocator<TRecentServer>> {
    struct TRecentServer *__begin_;
    struct TRecentServer *__end_;
    struct __compressed_pair<TRecentServer *, std::__1::allocator<TRecentServer>> {
        struct TRecentServer *__value_;
    } __end_cap_;
};

struct vector<TScreenToGridLayoutPair, std::__1::allocator<TScreenToGridLayoutPair>> {
    struct TScreenToGridLayoutPair *__begin_;
    struct TScreenToGridLayoutPair *__end_;
    struct __compressed_pair<TScreenToGridLayoutPair *, std::__1::allocator<TScreenToGridLayoutPair>> {
        struct TScreenToGridLayoutPair *__value_;
    } __end_cap_;
};

struct vector<TSidebarZone, std::__1::allocator<TSidebarZone>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<TSidebarZone *, std::__1::allocator<TSidebarZone>> {
        int *__value_;
    } __end_cap_;
};

struct vector<TSortBy, std::__1::allocator<TSortBy>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<TSortBy *, std::__1::allocator<TSortBy>> {
        int *_field1;
    } _field3;
};

struct vector<TSpatialDataCacheElement, std::__1::allocator<TSpatialDataCacheElement>> {
    struct TSpatialDataCacheElement *__begin_;
    struct TSpatialDataCacheElement *__end_;
    struct __compressed_pair<TSpatialDataCacheElement *, std::__1::allocator<TSpatialDataCacheElement>> {
        struct TSpatialDataCacheElement *__value_;
    } __end_cap_;
};

struct vector<TString, std::__1::allocator<TString>> {
    struct TString *__begin_;
    struct TString *__end_;
    struct __compressed_pair<TString *, std::__1::allocator<TString>> {
        struct TString *__value_;
    } __end_cap_;
};

struct vector<TTypedData, std::__1::allocator<TTypedData>> {
    struct TTypedData *__begin_;
    struct TTypedData *__end_;
    struct __compressed_pair<TTypedData *, std::__1::allocator<TTypedData>> {
        struct TTypedData *__value_;
    } __end_cap_;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__value_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *_field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long _field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> {
    struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *> *_field1;
    struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *> *_field2;
    struct __compressed_pair<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>*, std::__1::allocator<std::__1::pair<OpaqueEventTargetRef *, TCarbonEventFunnel *>>> {
        struct pair<OpaqueEventTargetRef *, TCarbonEventFunnel *> *_field1;
    } _field3;
};

struct vector<std::__1::pair<OperationConflict, OperationResolution>, std::__1::allocator<std::__1::pair<OperationConflict, OperationResolution>>> {
    struct pair<OperationConflict, OperationResolution> *_field1;
    struct pair<OperationConflict, OperationResolution> *_field2;
    struct __compressed_pair<std::__1::pair<OperationConflict, OperationResolution>*, std::__1::allocator<std::__1::pair<OperationConflict, OperationResolution>>> {
        struct pair<OperationConflict, OperationResolution> *_field1;
    } _field3;
};

struct vector<std::__1::pair<TFENode, NodeNotificationOptions>, std::__1::allocator<std::__1::pair<TFENode, NodeNotificationOptions>>> {
    struct pair<TFENode, NodeNotificationOptions> *_field1;
    struct pair<TFENode, NodeNotificationOptions> *_field2;
    struct __compressed_pair<std::__1::pair<TFENode, NodeNotificationOptions>*, std::__1::allocator<std::__1::pair<TFENode, NodeNotificationOptions>>> {
        struct pair<TFENode, NodeNotificationOptions> *_field1;
    } _field3;
};

struct vector<std::__1::pair<TFENode, TFENode>, std::__1::allocator<std::__1::pair<TFENode, TFENode>>> {
    struct pair<TFENode, TFENode> *__begin_;
    struct pair<TFENode, TFENode> *__end_;
    struct __compressed_pair<std::__1::pair<TFENode, TFENode>*, std::__1::allocator<std::__1::pair<TFENode, TFENode>>> {
        struct pair<TFENode, TFENode> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<TFENode, TNSRef<NSImage, void>>, std::__1::allocator<std::__1::pair<TFENode, TNSRef<NSImage, void>>>> {
    struct pair<TFENode, TNSRef<NSImage, void>> *__begin_;
    struct pair<TFENode, TNSRef<NSImage, void>> *__end_;
    struct __compressed_pair<std::__1::pair<TFENode, TNSRef<NSImage, void>>*, std::__1::allocator<std::__1::pair<TFENode, TNSRef<NSImage, void>>>> {
        struct pair<TFENode, TNSRef<NSImage, void>> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>> {
    struct pair<TFENode, unsigned int> *_field1;
    struct pair<TFENode, unsigned int> *_field2;
    struct __compressed_pair<std::__1::pair<TFENode, unsigned int>*, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>> {
        struct pair<TFENode, unsigned int> *_field1;
    } _field3;
};

struct vector<std::__1::pair<TNSRef<NSObject, void>, unsigned long>, std::__1::allocator<std::__1::pair<TNSRef<NSObject, void>, unsigned long>>> {
    struct pair<TNSRef<NSObject, void>, unsigned long> *__begin_;
    struct pair<TNSRef<NSObject, void>, unsigned long> *__end_;
    struct __compressed_pair<std::__1::pair<TNSRef<NSObject, void>, unsigned long>*, std::__1::allocator<std::__1::pair<TNSRef<NSObject, void>, unsigned long>>> {
        struct pair<TNSRef<NSObject, void>, unsigned long> *__value_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<TIconFetcher>, std::__1::allocator<std::__1::shared_ptr<TIconFetcher>>> {
    shared_ptr_a3732858 *__begin_;
    shared_ptr_a3732858 *__end_;
    struct __compressed_pair<std::__1::shared_ptr<TIconFetcher>*, std::__1::allocator<std::__1::shared_ptr<TIconFetcher>>> {
        shared_ptr_a3732858 *__value_;
    } __end_cap_;
};

struct vector<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>, std::__1::allocator<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>>> {
    struct unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>> *__begin_;
    struct unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>> *__end_;
    struct __compressed_pair<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>*, std::__1::allocator<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>>> {
        struct unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>> *__value_;
    } __end_cap_;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
};

struct weak_ptr<TCustomNode> {
    struct TCustomNode *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<TGroup> {
    struct TGroup *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<TInvokeQuickAction_Action> {
    struct TInvokeQuickAction_Action *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<TNodeEventHandler> {
    struct TNodeEventHandler *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<TUndoableAction> {
    struct TUndoableAction *_field1;
    struct __shared_weak_count *_field2;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct TNSRef<TDesktopIconView, void> {
    TDesktopIconView *fRef;
} TNSRef_469baef2;

typedef struct TNSRef<TICloudBadgePlaceholderView, void> {
    TICloudBadgePlaceholderView *fRef;
} TNSRef_69374e60;

typedef struct TNSRef<TQLMultiPreviewView, void> {
    TQLMultiPreviewView *fRef;
} TNSRef_cd9018bc;

typedef struct TNSRef<TRenameOperation, void> {
    TRenameOperation *fRef;
} TNSRef_a11c280b;

typedef struct TNSWeakPtr<TRunAfterHelper, void> {
    struct TNSRef<NSValue, void> fWeakObject;
} TNSWeakPtr_34793079;

typedef struct function<NSComparisonResult (__kindof NSView *, __kindof NSView *)> {
    struct type __buf_;
    struct __base<NSComparisonResult (__kindof NSView *, __kindof NSView *)> *__f_;
} function_0f3b3c36;

typedef struct function<NSImage *(NSView *, MouseState)> {
    struct type __buf_;
    struct __base<NSImage *(NSView *, MouseState)> *__f_;
} function_14166bfe;

typedef struct function<NSImage *(NSView *, MouseState, TSidebarActionKind)> {
    struct type _field1;
    struct __base<NSImage *(NSView *, MouseState, TSidebarActionKind)> *_field2;
} function_058db925;

typedef struct function<NSImage *(bool, bool, bool, NSTableViewRowSizeStyle, double)> {
    struct type __buf_;
    struct __base<NSImage *(bool, bool, bool, NSTableViewRowSizeStyle, double)> *__f_;
} function_3343ca80;

typedef struct function<TFENodeVector (SEL *)> {
    struct type _field1;
    struct __base<TFENodeVector (SEL *)> *_field2;
} function_dc9816ab;

typedef struct function<TString (const TString &)> {
    struct type __buf_;
    struct __base<TString (const TString &)> *__f_;
} function_d52b5b4a;

typedef struct function<bool (NSObject<TAirDropProgressControllerDelegate>*)> {
    struct type _field1;
    struct __base<bool (NSObject<TAirDropProgressControllerDelegate>*)> *_field2;
} function_599114e4;

typedef struct function<bool (TFENode, TFENode)> {
    struct type _field1;
    struct __base<bool (TFENode, TFENode)> *_field2;
} function_9b956abc;

typedef struct function<bool (TMenuItem *)> {
    struct type __buf_;
    struct __base<bool (TMenuItem *)> *__f_;
} function_14d430ba;

typedef struct function<bool (TSTFTextField *)> {
    struct type __buf_;
    struct __base<bool (TSTFTextField *)> *__f_;
} function_8a797d9f;

typedef struct function<std::__1::pair<NSImage *, TString>(CGSize)> {
    struct type __buf_;
    struct __base<std::__1::pair<NSImage *, TString>(CGSize)> *__f_;
} function_d15ff7cc;

typedef struct function<std::__1::shared_ptr<TUndoableAction>()> {
    struct type __buf_;
    struct __base<std::__1::shared_ptr<TUndoableAction>()> *__f_;
} function_8ccccc32;

typedef struct function<void ()> {
    struct type __buf_;
    struct __base<void ()> *__f_;
} function_b1fce659;

typedef struct function<void (NSArray<TQuickAction *>*)> {
    struct type __buf_;
    struct __base<void (NSArray<TQuickAction *>*)> *__f_;
} function_5232256d;

typedef struct function<void (NSDictionary<NSString *, NSObject *>*)> {
    struct type __buf_;
    struct __base<void (NSDictionary<NSString *, NSObject *>*)> *__f_;
} function_e1076a84;

typedef struct function<void (NSNotification *)> {
    struct type __buf_;
    struct __base<void (NSNotification *)> *__f_;
} function_afb0e2a8;

typedef struct function<void (TBrowserTableView *, TColumnCellView *, long)> {
    struct type _field1;
    struct __base<void (TBrowserTableView *, TColumnCellView *, long)> *_field2;
} function_44d0c673;

typedef struct function<void (TCollectionViewItem *, bool &)> {
    struct type _field1;
    struct __base<void (TCollectionViewItem *, bool &)> *_field2;
} function_7eea65be;

typedef struct function<void (TFENode)> {
    struct type __buf_;
    struct __base<void (TFENode)> *__f_;
} function_d375ce60;

typedef struct function<void (TGotoWindowController *, const TFENode &, const TFENode &, const TString &)> {
    struct type __buf_;
    struct __base<void (TGotoWindowController *, const TFENode &, const TFENode &, const TString &)> *__f_;
} function_52422bbc;

typedef struct function<void (TPreviewOptions *)> {
    struct type __buf_;
    struct __base<void (TPreviewOptions *)> *__f_;
} function_a9996d7a;

typedef struct function<void (TString)> {
    struct type __buf_;
    struct __base<void (TString)> *__f_;
} function_64d3e52e;

typedef struct function<void (TTagInfo *, bool)> {
    struct type __buf_;
    struct __base<void (TTagInfo *, bool)> *__f_;
} function_ae93399b;

typedef struct function<void (bool)> {
    struct type _field1;
    struct __base<void (bool)> *_field2;
} function_fa9a3333;

typedef struct function<void (const CGSize &)> {
    struct type _field1;
    struct __base<void (const CGSize &)> *_field2;
} function_96ce23bb;

typedef struct function<void (const TFENode &)> {
    struct type __buf_;
    struct __base<void (const TFENode &)> *__f_;
} function_0beffb83;

typedef struct function<void (const TFENode &, const TFENode &, const TFENodeVector &)> {
    struct type _field1;
    struct __base<void (const TFENode &, const TFENode &, const TFENodeVector &)> *_field2;
} function_e1a188ab;

typedef struct function<void (const TFENode &, const TString &)> {
    struct type __buf_;
    struct __base<void (const TFENode &, const TString &)> *__f_;
} function_b4fae195;

typedef struct function<void (const TFENodeVector &)> {
    struct type _field1;
    struct __base<void (const TFENodeVector &)> *_field2;
} function_4670099d;

typedef struct function<void (const std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>&, std::__1::unordered_map<TFENode, TChildrenData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildrenData>>>&, TGroupModeData &, std::__1::vector<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>, std::__1::allocator<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>>>&, bool, bool)> {
    struct type _field1;
    struct __base<void (const std::__1::unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>>&, std::__1::unordered_map<TFENode, TChildrenData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildrenData>>>&, TGroupModeData &, std::__1::vector<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>, std::__1::allocator<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>>>&, bool, bool)> *_field2;
} function_7b5bbfa5;

typedef struct function<void (long)> {
    struct type __buf_;
    struct __base<void (long)> *__f_;
} function_998afc14;

typedef struct function<void (unsigned long)> {
    struct type __buf_;
    struct __base<void (unsigned long)> *__f_;
} function_19463893;

typedef struct map<TFENode, CGRect, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, CGRect>>> {
    struct __tree<std::__1::__value_type<TFENode, CGRect>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, CGRect>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, CGRect>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, CGRect>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_e297d142;

typedef struct map<TFENode, IconSpatialData, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, IconSpatialData>>> {
    struct __tree<std::__1::__value_type<TFENode, IconSpatialData>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, IconSpatialData>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, IconSpatialData>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, IconSpatialData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, IconSpatialData>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_fc98c7ae;

typedef struct map<TFENode, const TFENodeVector *const, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, const TFENodeVector *const>>> {
    struct __tree<std::__1::__value_type<TFENode, const TFENodeVector *const>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, const TFENodeVector *const>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, const TFENodeVector *const>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, const TFENodeVector *const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, const TFENodeVector *const>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_27534541;

typedef struct map<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const, std::__1::less<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>>> {
    struct __tree<std::__1::__value_type<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, std::__1::less<TFENode>, true>, std::__1::allocator<std::__1::__value_type<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TFENode, std::__1::__value_type<TFENode, const std::__1::vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>>*const>, std::__1::less<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_253f12d2;

typedef struct map<long, TFENode, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TFENode>>> {
    struct __tree<std::__1::__value_type<long, TFENode>, std::__1::__map_value_compare<long, std::__1::__value_type<long, TFENode>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, TFENode>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, TFENode>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, TFENode>, std::__1::less<long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_a2752b13;

typedef struct optional<unsigned long> {
    union {
        char __null_state_;
        unsigned long long __val_;
    } ;
    _Bool __engaged_;
} optional_a670fce5;

typedef struct pair<CGSize, double> {
    struct CGSize _field1;
    double _field2;
} pair_4f4968b2;

typedef struct pair<NSImage *, TString> {
    id _field1;
    struct TString _field2;
} pair_a86e8956;

typedef struct pair<TNSRef<TDesktopViewDataSourcePileItem, void>, TNSRef<TDesktopIconView, void>> {
    struct TNSRef<TDesktopViewDataSourcePileItem, void> _field1;
    TNSRef_469baef2 _field2;
} pair_dabef6e6;

typedef struct pair<TString, TString> {
    struct TString _field1;
    struct TString _field2;
} pair_1ddb90c7;

typedef struct pair<TString, unsigned long> {
    struct TString _field1;
    unsigned long long _field2;
} pair_b3ac3938;

typedef struct pair<double, double> {
    double _field1;
    double _field2;
} pair_b2618ff2;

typedef struct set<double, std::__1::less<double>, std::__1::allocator<double>> {
    struct __tree<double, std::__1::less<double>, std::__1::allocator<double>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<double, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<double>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_8681f3ab;

typedef struct shared_ptr<IAirDropBaseOperationController> {
    struct IAirDropBaseOperationController *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_466d67c7;

typedef struct shared_ptr<ISpawnOrigin> {
    struct ISpawnOrigin *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3b64c573;

typedef struct shared_ptr<TBestFitFormatterSelector> {
    struct TBestFitFormatterSelector *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2ccd00e6;

typedef struct shared_ptr<TBurningDevice> {
    struct TBurningDevice *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4507d06a;

typedef struct shared_ptr<TDesktopNodesComparator> {
    struct TDesktopNodesComparator *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c8f8caee;

typedef struct shared_ptr<TFENodeComparator> {
    struct TFENodeComparator *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_0ec8498d;

typedef struct shared_ptr<TFullScreenAnimationInfo> {
    struct TFullScreenAnimationInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_656241d2;

typedef struct shared_ptr<TIconFetcher> {
    struct TIconFetcher *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_a3732858;

typedef struct shared_ptr<TItemMetadata> {
    struct TItemMetadata *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_99c3fa9b;

typedef struct shared_ptr<TTagsTask> {
    struct TTagsTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_68874bd0;

typedef struct shared_ptr<TThreadSafeQueue<TNSRef<TQueuedPopoverController, void>>> {
    struct TThreadSafeQueue<TNSRef<TQueuedPopoverController, void>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a833fc5c;

typedef struct shared_ptr<TThumbnailExtractorController> {
    struct TThumbnailExtractorController *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0f967b3d;

typedef struct shared_ptr<TTimeMachineTarget> {
    struct TTimeMachineTarget *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_253687d6;

typedef struct shared_ptr<std::__1::vector<TOpenContainerOptions, std::__1::allocator<TOpenContainerOptions>>> {
    vector_a7e7ffc1 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7bdd7b4a;

typedef struct shared_ptr<std::__1::vector<std::__1::pair<TFENode, NodeNotificationOptions>, std::__1::allocator<std::__1::pair<TFENode, NodeNotificationOptions>>>> {
    vector_c133cd5b *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_73db28f7;

typedef struct tuple<bool, bool> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1>, bool, bool> {
        _Bool _field1;
        _Bool _field2;
    } _field1;
} tuple_a9f0e812;

typedef struct unique_function<void ()> {
    struct unique_ptr<fstd::finder_callable_details::callable_holder_base<void>, std::__1::default_delete<fstd::finder_callable_details::callable_holder_base<void>>> fLambdaHolder;
} unique_function_63952f55;

typedef struct unique_ptr<TBrowserImmediateActionGestureRecognizerHandlerBase, std::__1::default_delete<TBrowserImmediateActionGestureRecognizerHandlerBase>> {
    struct __compressed_pair<TBrowserImmediateActionGestureRecognizerHandlerBase *, std::__1::default_delete<TBrowserImmediateActionGestureRecognizerHandlerBase>> {
        struct TBrowserImmediateActionGestureRecognizerHandlerBase *__value_;
    } __ptr_;
} unique_ptr_8828cb85;

typedef struct unordered_map<TFENode, TChildrenData, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TChildrenData>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TChildrenData>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TChildrenData>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TChildrenData>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TChildrenData>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TChildrenData>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TChildrenData>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TChildrenData>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_9c9b7b32;

typedef struct unordered_map<TFENode, TFENodeOrderedSet, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TFENodeOrderedSet>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TFENodeOrderedSet>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_f8b1458f;

typedef struct unordered_map<TFENode, TNSRef<NSIndexPath, void>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<NSIndexPath, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<NSIndexPath, void>>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_7677f55a;

typedef struct unordered_map<TFENode, TNSRef<TDesktopIconView, void>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TNSRef<TDesktopIconView, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, TNSRef<TDesktopIconView, void>>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_f9ac4d38;

typedef struct unordered_map<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, std::__1::hash<TFENode>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::pair<TNSRef<NSIndexPath, void>, TNSRef<NSIndexPath, void>>>, std::__1::equal_to<TFENode>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_c143f583;

typedef struct unordered_map<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>> {
    struct __hash_table<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::hash<TFENode>, true>, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::equal_to<TFENode>, true>, std::__1::allocator<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::hash<TFENode>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TFENode, std::__1::__hash_value_type<TFENode, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>, std::__1::equal_to<TFENode>, true>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_map_80f1bec4;

typedef struct unordered_map<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>, std::__1::hash<TNSRef<NSFormatter, void>>, std::__1::equal_to<TNSRef<NSFormatter, void>>, std::__1::allocator<std::__1::pair<const TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>>> {
    struct __hash_table<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, std::__1::__unordered_map_hasher<TNSRef<NSFormatter, void>, std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, std::__1::hash<TNSRef<NSFormatter, void>>, true>, std::__1::__unordered_map_equal<TNSRef<NSFormatter, void>, std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, std::__1::equal_to<TNSRef<NSFormatter, void>>, true>, std::__1::allocator<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TNSRef<NSFormatter, void>, std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, std::__1::hash<TNSRef<NSFormatter, void>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TNSRef<NSFormatter, void>, std::__1::__hash_value_type<TNSRef<NSFormatter, void>, TNSRef<NSDictionary, void>>, std::__1::equal_to<TNSRef<NSFormatter, void>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_6f91522d;

typedef struct unordered_set<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *>> {
    struct __hash_table<NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *>, std::__1::allocator<NSObject *>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<NSObject *, void *>*>, std::__1::allocator<std::__1::__hash_node<NSObject *, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<NSObject *, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<NSObject *>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<NSObject *>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_set_24e1661d;

typedef struct unordered_set<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>> {
    struct __hash_table<TFENode, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<TFENode>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TFENode, void *>*>, std::__1::allocator<std::__1::__hash_node<TFENode, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TFENode, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<TFENode>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<TFENode>> {
            float __value_;
        } __p3_;
    } __table_;
} unordered_set_931aff12;

typedef struct unordered_set<TString, std::__1::hash<TString>, std::__1::equal_to<TString>, std::__1::allocator<TString>> {
    struct __hash_table<TString, std::__1::hash<TString>, std::__1::equal_to<TString>, std::__1::allocator<TString>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TString, void *>*>, std::__1::allocator<std::__1::__hash_node<TString, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TString, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<TString>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<TString>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_66d0470b;

typedef struct unordered_set<std::__1::shared_ptr<TGroup>, std::__1::hash<std::__1::shared_ptr<TGroup>>, std::__1::equal_to<std::__1::shared_ptr<TGroup>>, std::__1::allocator<std::__1::shared_ptr<TGroup>>> {
    struct __hash_table<std::__1::shared_ptr<TGroup>, std::__1::hash<std::__1::shared_ptr<TGroup>>, std::__1::equal_to<std::__1::shared_ptr<TGroup>>, std::__1::allocator<std::__1::shared_ptr<TGroup>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<TGroup>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::shared_ptr<TGroup>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::shared_ptr<TGroup>>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_66e9327b;

typedef struct vector<Browser::ColumnDesc, std::__1::allocator<Browser::ColumnDesc>> {
    struct ColumnDesc *_field1;
    struct ColumnDesc *_field2;
    struct __compressed_pair<Browser::ColumnDesc *, std::__1::allocator<Browser::ColumnDesc>> {
        struct ColumnDesc *_field1;
    } _field3;
} vector_abc0d4d8;

typedef struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *_field1;
    struct CGPoint *_field2;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *_field1;
    } _field3;
} vector_e1abc270;

typedef struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__value_;
    } __end_cap_;
} vector_a9587b3d;

typedef struct vector<IconSpatialData, std::__1::allocator<IconSpatialData>> {
    struct IconSpatialData *__begin_;
    struct IconSpatialData *__end_;
    struct __compressed_pair<IconSpatialData *, std::__1::allocator<IconSpatialData>> {
        struct IconSpatialData *__value_;
    } __end_cap_;
} vector_55f57b11;

typedef struct vector<TAccessControlInfo, std::__1::allocator<TAccessControlInfo>> {
    struct TAccessControlInfo *_field1;
    struct TAccessControlInfo *_field2;
    struct __compressed_pair<TAccessControlInfo *, std::__1::allocator<TAccessControlInfo>> {
        struct TAccessControlInfo *_field1;
    } _field3;
} vector_27cb8753;

typedef struct vector<TAdjustContainerOptions, std::__1::allocator<TAdjustContainerOptions>> {
    struct TAdjustContainerOptions *_field1;
    struct TAdjustContainerOptions *_field2;
    struct __compressed_pair<TAdjustContainerOptions *, std::__1::allocator<TAdjustContainerOptions>> {
        struct TAdjustContainerOptions *_field1;
    } _field3;
} vector_04525f4a;

typedef struct vector<TCompletionNodeAndNames, std::__1::allocator<TCompletionNodeAndNames>> {
    struct TCompletionNodeAndNames *__begin_;
    struct TCompletionNodeAndNames *__end_;
    struct __compressed_pair<TCompletionNodeAndNames *, std::__1::allocator<TCompletionNodeAndNames>> {
        struct TCompletionNodeAndNames *__value_;
    } __end_cap_;
} vector_0488428e;

typedef struct vector<TDesktopViewDataSourceItem *, std::__1::allocator<TDesktopViewDataSourceItem *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<TDesktopViewDataSourceItem **, std::__1::allocator<TDesktopViewDataSourceItem *>> {
        id *_field1;
    } _field3;
} vector_6b5352a9;

typedef struct vector<TFENodePropertyList, std::__1::allocator<TFENodePropertyList>> {
    struct TFENodePropertyList *_field1;
    struct TFENodePropertyList *_field2;
    struct __compressed_pair<TFENodePropertyList *, std::__1::allocator<TFENodePropertyList>> {
        struct TFENodePropertyList *_field1;
    } _field3;
} vector_d50fdf79;

typedef struct vector<TIdentity, std::__1::allocator<TIdentity>> {
    struct TIdentity *_field1;
    struct TIdentity *_field2;
    struct __compressed_pair<TIdentity *, std::__1::allocator<TIdentity>> {
        struct TIdentity *_field1;
    } _field3;
} vector_5fd34a1b;

typedef struct vector<TMetadataAttribute, std::__1::allocator<TMetadataAttribute>> {
    struct TMetadataAttribute *__begin_;
    struct TMetadataAttribute *__end_;
    struct __compressed_pair<TMetadataAttribute *, std::__1::allocator<TMetadataAttribute>> {
        struct TMetadataAttribute *__value_;
    } __end_cap_;
} vector_6a476d2d;

typedef struct vector<TNSRef<TDesktopViewController, void>, std::__1::allocator<TNSRef<TDesktopViewController, void>>> {
    struct TNSRef<TDesktopViewController, void> *__begin_;
    struct TNSRef<TDesktopViewController, void> *__end_;
    struct __compressed_pair<TNSRef<TDesktopViewController, void>*, std::__1::allocator<TNSRef<TDesktopViewController, void>>> {
        struct TNSRef<TDesktopViewController, void> *__value_;
    } __end_cap_;
} vector_5868a58c;

typedef struct vector<TNSRef<TDesktopViewDataSourceItem, void>, std::__1::allocator<TNSRef<TDesktopViewDataSourceItem, void>>> {
    struct TNSRef<TDesktopViewDataSourceItem, void> *__begin_;
    struct TNSRef<TDesktopViewDataSourceItem, void> *__end_;
    struct __compressed_pair<TNSRef<TDesktopViewDataSourceItem, void>*, std::__1::allocator<TNSRef<TDesktopViewDataSourceItem, void>>> {
        struct TNSRef<TDesktopViewDataSourceItem, void> *__value_;
    } __end_cap_;
} vector_9edeb3e0;

typedef struct vector<TNSRef<TDesktopViewDataSourcePileItem, void>, std::__1::allocator<TNSRef<TDesktopViewDataSourcePileItem, void>>> {
    struct TNSRef<TDesktopViewDataSourcePileItem, void> *__begin_;
    struct TNSRef<TDesktopViewDataSourcePileItem, void> *__end_;
    struct __compressed_pair<TNSRef<TDesktopViewDataSourcePileItem, void>*, std::__1::allocator<TNSRef<TDesktopViewDataSourcePileItem, void>>> {
        struct TNSRef<TDesktopViewDataSourcePileItem, void> *__value_;
    } __end_cap_;
} vector_bd3f2f5c;

typedef struct vector<TNSRef<TLayer, void>, std::__1::allocator<TNSRef<TLayer, void>>> {
    struct TNSRef<TLayer, void> *_field1;
    struct TNSRef<TLayer, void> *_field2;
    struct __compressed_pair<TNSRef<TLayer, void>*, std::__1::allocator<TNSRef<TLayer, void>>> {
        struct TNSRef<TLayer, void> *_field1;
    } _field3;
} vector_558f1846;

typedef struct vector<TOpenContainerOptions, std::__1::allocator<TOpenContainerOptions>> {
    struct TOpenContainerOptions *_field1;
    struct TOpenContainerOptions *_field2;
    struct __compressed_pair<TOpenContainerOptions *, std::__1::allocator<TOpenContainerOptions>> {
        struct TOpenContainerOptions *_field1;
    } _field3;
} vector_a7e7ffc1;

typedef struct vector<TSortBy, std::__1::allocator<TSortBy>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<TSortBy *, std::__1::allocator<TSortBy>> {
        int *_field1;
    } _field3;
} vector_528602f5;

typedef struct vector<TString, std::__1::allocator<TString>> {
    struct TString *__begin_;
    struct TString *__end_;
    struct __compressed_pair<TString *, std::__1::allocator<TString>> {
        struct TString *__value_;
    } __end_cap_;
} vector_757c8b87;

typedef struct vector<TTypedData, std::__1::allocator<TTypedData>> {
    struct TTypedData *__begin_;
    struct TTypedData *__end_;
    struct __compressed_pair<TTypedData *, std::__1::allocator<TTypedData>> {
        struct TTypedData *__value_;
    } __end_cap_;
} vector_a82b476a;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
} vector_b67dfe3a;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
} vector_12bd641b;

typedef struct vector<std::__1::pair<TFENode, NodeNotificationOptions>, std::__1::allocator<std::__1::pair<TFENode, NodeNotificationOptions>>> {
    struct pair<TFENode, NodeNotificationOptions> *_field1;
    struct pair<TFENode, NodeNotificationOptions> *_field2;
    struct __compressed_pair<std::__1::pair<TFENode, NodeNotificationOptions>*, std::__1::allocator<std::__1::pair<TFENode, NodeNotificationOptions>>> {
        struct pair<TFENode, NodeNotificationOptions> *_field1;
    } _field3;
} vector_c133cd5b;

typedef struct vector<std::__1::pair<TFENode, TNSRef<NSImage, void>>, std::__1::allocator<std::__1::pair<TFENode, TNSRef<NSImage, void>>>> {
    struct pair<TFENode, TNSRef<NSImage, void>> *__begin_;
    struct pair<TFENode, TNSRef<NSImage, void>> *__end_;
    struct __compressed_pair<std::__1::pair<TFENode, TNSRef<NSImage, void>>*, std::__1::allocator<std::__1::pair<TFENode, TNSRef<NSImage, void>>>> {
        struct pair<TFENode, TNSRef<NSImage, void>> *__value_;
    } __end_cap_;
} vector_2129316b;

typedef struct vector<std::__1::pair<TFENode, unsigned int>, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>> {
    struct pair<TFENode, unsigned int> *_field1;
    struct pair<TFENode, unsigned int> *_field2;
    struct __compressed_pair<std::__1::pair<TFENode, unsigned int>*, std::__1::allocator<std::__1::pair<TFENode, unsigned int>>> {
        struct pair<TFENode, unsigned int> *_field1;
    } _field3;
} vector_614ab7ad;

typedef struct vector<std::__1::shared_ptr<TIconFetcher>, std::__1::allocator<std::__1::shared_ptr<TIconFetcher>>> {
    shared_ptr_a3732858 *__begin_;
    shared_ptr_a3732858 *__end_;
    struct __compressed_pair<std::__1::shared_ptr<TIconFetcher>*, std::__1::allocator<std::__1::shared_ptr<TIconFetcher>>> {
        shared_ptr_a3732858 *__value_;
    } __end_cap_;
} vector_7ca3ab92;

typedef struct vector<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>, std::__1::allocator<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>>> {
    struct unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>> *__begin_;
    struct unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>> *__end_;
    struct __compressed_pair<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>*, std::__1::allocator<std::__1::unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>>>> {
        struct unordered_map<TFENode, TBVDSChangedPayload, std::__1::hash<TFENode>, std::__1::equal_to<TFENode>, std::__1::allocator<std::__1::pair<const TFENode, TBVDSChangedPayload>>> *__value_;
    } __end_cap_;
} vector_274a36ec;

typedef struct weak_ptr<TInvokeQuickAction_Action> {
    struct TInvokeQuickAction_Action *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_62a1ab87;

