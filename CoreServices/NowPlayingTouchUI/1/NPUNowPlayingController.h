//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NPUNowPlayingTargetDelegate-Protocol.h"
#import "NPUPlaybackControlsControlling-Protocol.h"

@class AVTouchBarMediaSelectionOption, AVValueTiming, NPUNowPlayingMetadata, NPUNowPlayingTarget, NSArray, NSDate, NSDictionary, NSString, NSURL;
@protocol NPUNowPlayingDelegate, OS_dispatch_source;

@interface NPUNowPlayingController : NSObject <NPUNowPlayingTargetDelegate, NPUPlaybackControlsControlling>
{
    NSObject<OS_dispatch_source> *_timeInformationTimer;
    NSDictionary *_currentNowPlayingInfo;
    NSArray *_currentSupportedCommands;
    double _currentElapsed;
    double _currentDuration;
    double _seekDestinationTime;
    long long _isPlaying;
    NSString *_currentNowPlayingAppDisplayID;
    BOOL _hasValidCurrentNowPlayingAppDisplayID;
    BOOL _isRegisteredForNowPlayingNotifications;
    BOOL _isUpdatingNowPlayingInfo;
    BOOL _isUpdatingPlaybackState;
    BOOL _isUpdatingNowPlayingApp;
    BOOL _wantsTimeInformationUpdates;
    BOOL _cachedArtworkDirty;
    BOOL _seeking;
    BOOL _scrubbing;
    BOOL _playingBeforeScrubStarted;
    BOOL _currentNowPlayingAppIsRunning;
    BOOL _shouldUpdateNowPlayingArtwork;
    id <NPUNowPlayingDelegate> _delegate;
    NPUNowPlayingTarget *_nowPlayingTarget;
    NSString *_currentNowPlayingArtworkDigest;
    NSDate *_lastActivityDate;
    double _timeInformationUpdateInterval;
    struct CGImage *_cachedNowPlayingArtwork;
}

+ (id)_nowPlayingInfoObservableKeys;
+ (id)_supportedCommandsObservableKeys;
@property(nonatomic) struct CGImage *cachedNowPlayingArtwork; // @synthesize cachedNowPlayingArtwork=_cachedNowPlayingArtwork;
@property(nonatomic) BOOL shouldUpdateNowPlayingArtwork; // @synthesize shouldUpdateNowPlayingArtwork=_shouldUpdateNowPlayingArtwork;
@property(nonatomic) double timeInformationUpdateInterval; // @synthesize timeInformationUpdateInterval=_timeInformationUpdateInterval;
@property(readonly, nonatomic) NSDate *lastActivityDate; // @synthesize lastActivityDate=_lastActivityDate;
@property(readonly, nonatomic) double currentElapsed; // @synthesize currentElapsed=_currentElapsed;
@property(readonly, nonatomic) BOOL currentNowPlayingAppIsRunning; // @synthesize currentNowPlayingAppIsRunning=_currentNowPlayingAppIsRunning;
@property(readonly, nonatomic) NSString *currentNowPlayingArtworkDigest; // @synthesize currentNowPlayingArtworkDigest=_currentNowPlayingArtworkDigest;
@property(readonly, nonatomic) NPUNowPlayingTarget *nowPlayingTarget; // @synthesize nowPlayingTarget=_nowPlayingTarget;
@property(nonatomic) __weak id <NPUNowPlayingDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_sendCommand:(unsigned int)arg1 withOptions:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (BOOL)_isUpdatingTimeInformation;
- (double)_preferredTimeIntervalForCommand:(unsigned int)arg1;
- (BOOL)_commandIsSupportedAndEnabled:(unsigned int)arg1;
- (BOOL)_commandIsSupported:(unsigned int)arg1;
- (void)_notifyNowPlayingInfoObserversBeforeChange:(BOOL)arg1;
- (void)_notifySupportedCommandObserversBeforeChange:(BOOL)arg1;
- (void)_updateLastActivityDate;
- (void)_updateSupportedCommands;
- (void)_updateTimeInformationAndCallDelegate:(BOOL)arg1;
- (void)_updateNowPlayingAppDisplayID;
- (void)_updatePlaybackState;
- (void)_updateCurrentNowPlaying;
- (void)_stopUpdatingTimeInformation;
- (void)_startUpdatingTimeInformation;
- (void)_nowPlayingTouchBarVisibilityChangedNotification:(id)arg1;
- (BOOL)_allowedToBeginUpdatingTimeInformation;
- (void)_unregisterForNotifications;
- (void)_registerForNotifications;
- (void)generateTouchBarAudioAmplitudeSamples:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)generateTouchBarThumbnailsForTimes:(id)arg1 tolerance:(double)arg2 size:(struct CGSize)arg3 thumbnailHandler:(CDUnknownBlockType)arg4;
@property(readonly) NSURL *assetURL;
- (void)controlsViewDidDisappear;
- (void)controlsViewWillAppear;
- (void)endTouchBarScrubbing;
- (void)beginTouchBarScrubbing;
@property(readonly) BOOL canBeginTouchBarScrubbing;
- (void)togglePlayback;
@property(getter=isPlaying) BOOL playing;
@property(readonly) BOOL canTogglePlayback;
@property(readonly) BOOL hasEnabledVideo;
@property(readonly) BOOL hasEnabledAudio;
- (void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
@property(readonly) double seekToTime;
@property(readonly, getter=isSeeking) BOOL seeking;
@property(readonly) AVValueTiming *timing;
@property(readonly) double contentDuration;
@property(readonly) double scanBackwardPreferredInterval;
@property(readonly) unsigned long long scanBackwardDisplayMode;
@property(readonly) double scanForwardPreferredInterval;
@property(readonly) unsigned long long scanForwardDisplayMode;
@property(readonly) BOOL shouldShowLiveContentView;
@property(readonly) BOOL shouldShowScrubber;
@property(readonly) BOOL shouldShowScanningButtons;
- (void)skipBackward;
- (void)endScanningBackward;
- (void)beginScanningBackward;
@property(readonly) BOOL canSkipBackward;
@property(readonly) BOOL canBeginScanningBackward;
- (void)skipForward;
- (void)endScanningForward;
- (void)beginScanningForward;
@property(readonly) BOOL canSkipForward;
@property(readonly) BOOL canBeginScanningForward;
- (void)nowPlayingTarget:(id)arg1 activeClientDidChange:(id)arg2;
- (void)update;
- (void)stopUpdating;
- (void)startUpdating;
@property(readonly, nonatomic) double currentDuration;
@property(readonly, nonatomic) BOOL nowPlayingAppIsSystemMediaApp;
@property(readonly, nonatomic) NSString *nowPlayingAppDisplayID;
@property(readonly, nonatomic) struct CGImage *currentNowPlayingArtwork;
@property(readonly, nonatomic) NPUNowPlayingMetadata *currentNowPlayingMetadata;
@property(readonly, nonatomic) NSDictionary *currentNowPlayingInfo;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;
- (id)initWithNowPlayingTarget:(id)arg1;

// Remaining properties
@property(readonly) BOOL allowsPictureInPicturePlayback;
@property(readonly) NSArray *audioTouchBarMediaSelectionOptions;
@property(readonly) BOOL canTogglePictureInPicture;
@property(retain) AVTouchBarMediaSelectionOption *currentAudioTouchBarMediaSelectionOption;
@property(retain) AVTouchBarMediaSelectionOption *currentLegibleTouchBarMediaSelectionOption;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL isPlaying;
@property(readonly) NSArray *legibleTouchBarMediaSelectionOptions;
@property(getter=isPictureInPictureActive) BOOL pictureInPictureActive;
@property(readonly) NSArray *seekableTimeRanges;
@property(readonly) Class superclass;

@end

