//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MCXD_Server-Protocol.h"

@class IASUnifiedProgressClient, NSArray, NSBundle, NSConnection, NSMutableArray, NSString, NSTimer, ODNode, ODUGroupGraph, ODUMCXRecord;

@interface MCXD_MCX : NSObject <MCXD_Server>
{
    ODNode *mLocalNode;
    ODNode *mSearchNode;
    NSBundle *mBundle;
    NSBundle *mMechanismBundle;
    NSConnection *mConnection;
    int mLockFileDescriptor;
    ODUGroupGraph *mComputerGraph;
    ODUMCXRecord *mComputerRecord;
    ODUGroupGraph *mLocalUserGroupGraph;
    NSArray *mTrustInfo;
    double mComputerInfoQueryTimestamp;
    NSArray *mAllowList;
    NSArray *mDenyList;
    BOOL mLocalUserLoginEnabled;
    BOOL mAlwaysShowWorkgroupDialog;
    BOOL mCombineUserWorkgroups;
    BOOL mFlattenUserWorkgroups;
    BOOL mLocalUsersHaveWorkgroups;
    BOOL mAdminMayDisableMCX;
    unsigned int mLoginWindowRefreshInterval;
    BOOL mComputerCacheEnabled;
    int mNestedGroupLevels;
    BOOL mNestedGroupCheck;
    BOOL mComputerInfoManaged;
    BOOL mBusy;
    BOOL mShouldQuit;
    BOOL mManagementActive;
    BOOL mAdminForceManaged;
    BOOL mConfigInfoAdminForceManaged;
    struct __CFDictionary *mCompositorDict;
    struct MCXD_UserInfo_Data *mUID;
    BOOL mExternalAccountsCreation;
    BOOL mExternalAccountsEnabled;
    BOOL mExternalAccountsAlwaysImport;
    BOOL mExternalAccountsSearchIntVols;
    BOOL mExternalAccountsAllowNonHFSVols;
    struct __DASession *mXADiskArbSession;
    unsigned int mXAVolumeQueueLength;
    BOOL mXAStopping;
    NSMutableArray *mXACandidates;
    id mXAAuthController;
    unsigned long long mUserListUpdateSecs;
    unsigned long long mUserListUpdateTimes;
    NSTimer *mLoginListUpdateTimer;
    NSTimer *mQuitAfterTimer;
    NSString *mUserPassword;
    NSString *mOriginalHomeURLString;
    BOOL mUsingConfigProfiles;
    NSTimer *mLoginwindowTimer;
    BOOL mWarnAboutHash;
    IASUnifiedProgressClient *mProgressClient;
    NSString *mSpecialLoginService;
}

+ (id)sharedMCXDNoOD;
+ (id)sharedMCXD;
- (void)cancelQuitAfterTimer;
- (void)quitAfter:(double)arg1;
- (void)quit:(BOOL)arg1;
- (void)dealloc;
- (void)initCore;
- (id)init;
- (id)init:(BOOL)arg1;
- (BOOL)createConnection;
- (void)setConnection:(id)arg1;
- (id)connection;
- (void)setBundle:(id)arg1;
- (id)bundle;
- (void)fixDiskMountsForUser:(id)arg1 context:(id)arg2;
- (BOOL)initializeDirectoryServices;
- (void)setManagedLoginwindowKeys:(BOOL)arg1;
- (void)doPostComposite:(BOOL)arg1 withPwd:(id)arg2;
- (void)recompositePrefs:(id)arg1 forUID:(unsigned int)arg2 withPassword:(id)arg3 atLoginTime:(BOOL)arg4 profileInstallAtLogin:(BOOL)arg5;
- (BOOL)recompositePrefs:(id)arg1 forUID:(unsigned int)arg2 withAuthRef:(struct AuthorizationOpaqueRef *)arg3 atLoginTime:(BOOL)arg4 profileInstallAtLogin:(BOOL)arg5;
- (int)mcxAlertQueryCBWithOther:(id)arg1 msg:(id)arg2 btn:(id)arg3 btnAlt:(id)arg4 btnOther:(id)arg5 cbStr:(id)arg6 cbResult:(char *)arg7;
- (BOOL)mcxAlertQueryCB:(id)arg1 msg:(id)arg2 btn:(id)arg3 btnAlt:(id)arg4 cbStr:(id)arg5 cbInitialState:(BOOL)arg6 cbResult:(char *)arg7;
- (int)mcxAlertQueryWithOther:(id)arg1 msg:(id)arg2 btn:(id)arg3 btnAlt:(id)arg4 btnOther:(id)arg5;
- (BOOL)mcxAlertQuery:(id)arg1 msg:(id)arg2 btn:(id)arg3 btnAlt:(id)arg4;
- (void)mcxAlertNotify:(id)arg1 msg:(id)arg2 btn:(id)arg3;
- (int)showNoWorkgroupsManagedAlert:(BOOL)arg1 shouldRemember:(char *)arg2;
- (void)setMCXDontAskMACreatePreferenceKey:(BOOL)arg1 deleteKey:(BOOL)arg2;
- (void)mcxdLoginwindowNotify:(id)arg1;
- (BOOL)workgroupsAreCombined;
- (BOOL)mustShowWorkgroupList;
- (BOOL)shouldShowWorkgroupList;
- (BOOL)shouldAllowMCXDisable;
- (void)setUserWorkgroup:(id)arg1;
- (void)setRememberWorkgroup:(BOOL)arg1;
- (void)setEnableWorkgroupManagement:(BOOL)arg1;
- (void)refreshPreferences;
- (BOOL)completeMCXLogin:(id)arg1 andPwd:(id)arg2;
- (void)postCompositeInfo:(id)arg1;
- (BOOL)managed;
- (void)setConfigFileForceManaged:(BOOL)arg1;
- (void)setForceManaged:(BOOL)arg1;
- (BOOL)isUserAdmin;
- (id)userDisplayName;
- (id)getRememberedGroupName;
- (id)getMCXWorkgroupList;
- (void)finishMCXD;
- (id)currentUsersLocalizedResourcePathForBundle:(id)arg1;
- (id)getUserHome:(id *)arg1 fileVaultDevicePath:(id *)arg2 fileVaultImageURL:(id *)arg3;
- (BOOL)shouldShowCreateMobileUserAccount:(char *)arg1;
- (id)showWorkgroupPickerAlertWithWorkgroups:(char *)arg1 allowMCXDisable:(BOOL)arg2 returnEnableMgmt:(char *)arg3;
- (int)showMobileAccountAlert:(char *)arg1;
- (BOOL)setupCustomMobileHomePath;
- (BOOL)checkLoginFileVaultEnablement:(id)arg1 withPassword:(id)arg2;
- (int)createMobileUserAccount:(id)arg1 returnPath:(id *)arg2;
- (unsigned int)compositeInfo;
- (void)cleanupSimultaneousLogin:(BOOL)arg1;
- (BOOL)checkSimultaneousLogin;
- (unsigned int)canUserLogin:(id)arg1 password:(in id)arg2 serviceType:(in id)arg3;
- (id)getAPFSSecureTokenAdminAuthorization:(BOOL)arg1;
- (int)setupFileVaultFDE:(int)arg1 forUser:(id)arg2 withPassword:(id)arg3 configDict:(id)arg4 shouldRestart:(BOOL)arg5 shutDownOnSuccess:(BOOL)arg6;
- (BOOL)doDeferFileVaultEnablementForUser:(id)arg1 withPassword:(id)arg2 isMobileAccount:(BOOL)arg3;
- (void)setComputerInfoManaged:(BOOL)arg1;
- (BOOL)computerInfoManaged;
- (void)refreshLoginwindowTimer;
- (void)cancelLoginwindowTimer;
- (void)checkLoginwindowTimer:(id)arg1;
- (void)checkToDisableTimeMachineServices;
- (void)killUpdateTimer;
- (void)sendUserListUpdateNotification:(id)arg1;
- (void)sendLoginwindowUpdateNotification;
- (int)getComputerInfoFromStartup:(BOOL)arg1 compositePreferences:(BOOL)arg2 updateCache:(BOOL)arg3;
- (id)getLocalUserGroupGraph;
- (void)reinitializeComputerInfo;
- (id)postCompositeLoginwindow;
- (BOOL)compositeComputerInfo:(BOOL)arg1 odProfiles:(id)arg2;
- (void)setManaged:(BOOL)arg1 forUID:(struct MCXD_UserInfo_Data *)arg2;
- (BOOL)userIsManaged:(struct MCXD_UserInfo_Data *)arg1;
- (void)setComplete:(BOOL)arg1 forUID:(struct MCXD_UserInfo_Data *)arg2;
- (BOOL)userInfoComplete:(struct MCXD_UserInfo_Data *)arg1;
- (BOOL)isNonUserUser:(id)arg1;
- (void)setUserWorkgroup:(id)arg1 forUID:(struct MCXD_UserInfo_Data *)arg2;
- (void)loadWorkgroupToRemember:(struct MCXD_UserInfo_Data *)arg1;
- (void)setRememberKey:(struct __CFString *)arg1 deleteKey:(BOOL)arg2 forUID:(struct MCXD_UserInfo_Data *)arg3;
- (void)saveWorkgroupToRemember:(struct MCXD_UserInfo_Data *)arg1;
- (void)setRememberWorkgroup:(BOOL)arg1 forUID:(struct MCXD_UserInfo_Data *)arg2;
- (void)readInGroupInfo:(struct MCXD_UserInfo_Data *)arg1;
- (BOOL)doCompositing:(struct MCXD_UserInfo_Data *)arg1 userState:(int)arg2;
- (unsigned int)gatherUserInfoFor:(id)arg1 password:(id)arg2 intoUID:(struct MCXD_UserInfo_Data *)arg3 atLoginTime:(BOOL)arg4 profileInstallAtLogin:(BOOL)arg5 fromSecurityAgent:(BOOL)arg6;
- (void)cleanupUserInfoFor:(struct MCXD_UserInfo_Data *)arg1;
- (void)prepareCompositorArgs:(struct MCXD_UserInfo_Data *)arg1 userState:(int)arg2;
- (BOOL)compositeUserGroupInfo:(struct MCXD_UserInfo_Data *)arg1 userState:(int)arg2;
- (id)filterManualConfigProfileSettings:(id)arg1 newCompositorDict:(id *)arg2;
- (id)getPayloadUUIDOutOfCompositorArgString:(id)arg1 forDomain:(id)arg2;
- (id)getDomainNamesOutOfCompositorArgString:(id)arg1;
- (id)getDomainDictOutOfCompositorArgString:(id)arg1;
- (void)initUserDock:(unsigned int)arg1 inHome:(id)arg2;
- (int)canUserLoginToComputer:(struct MCXD_UserInfo_Data *)arg1;
- (BOOL)nodeIsTrusted:(id)arg1 trustInfo:(id)arg2 requiredTrustLevel:(id)arg3;
- (id)getRequiredTrustLevel;
- (int)getTrustRank:(id)arg1;
- (id)getTrustInfo;
- (id)injectUPKsIfNecessary:(id)arg1 isUserUPKs:(BOOL)arg2;
- (BOOL)hasAutologinUser;
- (id)workgroupPickerForUser:(id)arg1 uid:(unsigned int)arg2 enableMgmt:(char *)arg3 allowMCXDisable:(BOOL)arg4 rememberWorkgroup:(char *)arg5;
- (int)_showMHDAlert:(id)arg1 uid:(unsigned int)arg2 dontAsk:(char *)arg3 newHomeType:(int *)arg4 newHomeRef:(id *)arg5 allowDontCreate:(BOOL)arg6;
- (void)_unmountUserHome:(id)arg1;
- (int)findSuffixStrInStrArray:(id)arg1 suffixStr:(id)arg2;
- (void)setupCompositorTmpFiles:(struct __CFArray *)arg1 withOption:(struct __CFString *)arg2 withTmpFile:(struct __CFString *)arg3 withPriorityOffset:(int)arg4 compositorDict:(struct __CFDictionary *)arg5;
- (BOOL)setupComputerSettingsForCompositor:(BOOL)arg1 localODProfiles:(id)arg2;
- (BOOL)isSessionFastUserSwitchingCompatible:(struct MCXD_UserInfo_Data *)arg1;
- (id)getUserShortName:(unsigned int)arg1;
- (void)xaDiskUnmounted:(struct __DADisk *)arg1 dissenter:(struct __DADissenter *)arg2 xAcctCandidates:(id)arg3;
- (void)xaDiskDisappeared:(struct __DADisk *)arg1;
- (void)xaDiskAppeared:(struct __DADisk *)arg1;
- (void)xaProcessMountedDisk:(struct __DADisk *)arg1 dissenter:(struct __DADissenter *)arg2 mountAttemptReadOnly:(BOOL)arg3 mountAttemptReadWrite:(BOOL)arg4;
- (void)xaQueueXAcctCandidates:(id)arg1;
- (id)xaGatherAccountsOnVolume:(id)arg1 promptToImport:(BOOL)arg2;
- (void)xaImportUserList:(id)arg1;
- (id)xaImportUser:(id)arg1 accountsInUse:(id)arg2 externalAccountsPrefs:(id)arg3 invalidateState:(char *)arg4 importedAccount:(char *)arg5;
- (void)xaAuthorizeUserImport:(id)arg1;
- (void)xaStopDACallbacks;
- (void)xaStartDACallbacks;
- (id)xaRemoveInactiveExternalAccountsExceptUserName:(id)arg1 onlyIfHomeDiskAbsent:(BOOL)arg2;
- (BOOL)xaRemoveLocalExternalAccounts;
- (BOOL)xaUpdateExternalAccount:(id)arg1 homePath:(id)arg2;
- (BOOL)xaSetAttributeIfDifferent:(id)arg1 sourceMCXRecord:(id)arg2 destMCXRecord:(id)arg3;
- (void)xaTellLoginwindowDataChanged:(id)arg1;
- (int)sanitizeComputerPasscodePolicies;
- (int)migratePasscodePolicyPayloadToOD:(id)arg1;
- (int)setPasscodePolicy:(id)arg1 forPolicy:(id)arg2 forUserGUID:(id)arg3 payloadUUID:(id)arg4;
- (BOOL)lwlaunch:(int)arg1 uid:(unsigned int)arg2;
- (BOOL)getVerifiedUserPassword:(unsigned int)arg1 userName:(id)arg2 password:(id *)arg3 isFileVault:(BOOL)arg4 isMobileAccount:(BOOL)arg5 shouldRestart:(char *)arg6;
- (int)getUserPassword:(unsigned int)arg1 password:(id *)arg2 forUser:(id)arg3 isFileVault:(BOOL)arg4 isMobileAccount:(BOOL)arg5 usesRestartBtn:(BOOL)arg6;
- (void)doCmdLogout:(unsigned int)arg1 reason:(id)arg2;
- (void)dropProgressUIIfNecessary;
- (BOOL)showLogoutMobileAccountMessage:(unsigned int)arg1 header:(id)arg2 message:(id)arg3 altIconPath:(id)arg4;
- (int)notificationAlertQueryCBWithOther:(id)arg1 msg:(id)arg2 btn:(id)arg3 btnAlt:(id)arg4 btnOther:(id)arg5 cbStr:(id)arg6 cbResult:(char *)arg7;
- (void)showLogoutMobileAccountCreationFailedAlert:(unsigned int)arg1;
- (void)showLogoutMobileAccountCreationFailedAlert:(unsigned int)arg1 status:(int)arg2 atPath:(id)arg3;
- (void)showLogoutMobileAccountCreationCancelledAlert:(unsigned int)arg1;
- (void)showLogoutPasswordIncorrectAlert:(unsigned int)arg1 altIconPath:(id)arg2;
- (BOOL)hasProfileProvisioningInfo;
- (id)profileConfigInfoForAllUsers;
- (BOOL)hasProfileConfigInfoForUser:(id)arg1;
- (BOOL)loadConfigDataFromCoreData:(id)arg1 withCompositorDict:(id)arg2 withUserState:(int)arg3;
- (void)updateProfilesFlagFile;
- (void)migQuit;
- (void)migQuitAfter:(double)arg1;
- (void)addExtraProfileDictFieldsToCPProfile:(id)arg1 profile:(id)arg2;
- (int)dispatchCoreDataCmd:(unsigned long long)arg1 inDict:(struct __CFDictionary *)arg2 inProfileType:(long long)arg3 outDict:(struct __CFDictionary *)arg4;
- (int)getCloudConfigProfile:(id)arg1 withAuth:(id)arg2 profileData:(id *)arg3 error:(id *)arg4;
- (id)mapHTTPCloudConfigError:(id)arg1;
- (id)copyCloudConfigProfileDataFromServer:(id)arg1 authDict:(id)arg2 forIdentity:(struct OpaqueSecIdentityRef *)arg3 anchorCerts:(id)arg4 returnsError:(id *)arg5;
- (struct OpaqueSecIdentityRef *)copyDeviceIdentity;
- (BOOL)unbindServerUsingPayload:(id)arg1 error:(id *)arg2;
- (BOOL)bindServerUsingPayload:(id)arg1 error:(id *)arg2;
- (id)odDictionaryForServer:(id)arg1 error:(id *)arg2;
- (id)odUnbindActionForServer:(id)arg1 usingPayload:(id)arg2;
- (id)odBindActionForServer:(id)arg1 usingPayload:(id)arg2;
- (id)adUnbindActionForServer:(id)arg1 usingPayload:(id)arg2;
- (id)adBindActionForServer:(id)arg1 usingPayload:(id)arg2;
- (struct __SCNetworkService *)copyWifiNetworkService:(struct __SCPreferences *)arg1;
- (int)removewifiproxies:(id)arg1;
- (int)addwifiproxies:(id)arg1;
- (int)removeSystemKeychainWifiPassword:(id)arg1 isEnterprise:(BOOL)arg2;
- (int)addSystemKeychainWifiPassword:(id)arg1 password:(id)arg2 authUsername:(id)arg3 authPassword:(id)arg4 isEnterprise:(BOOL)arg5 isSystemModeNetwork:(BOOL)arg6;
- (int)removewifinetworkprofile:(id)arg1 isHotspot:(BOOL)arg2;
- (int)addwifinetworkprofile:(id)arg1 bsdInterface:(id)arg2 isHotspot:(BOOL)arg3;
- (int)removeEAPClientProfile:(id)arg1 withPayload:(id)arg2 sysCertRefs:(id)arg3 interface:(struct __CFString *)arg4 isSystemProfile:(BOOL)arg5;
- (int)createEAPClientProfile:(id)arg1 isHotspot:(BOOL)arg2 securityType:(id)arg3 identityPayload:(id)arg4 scepIdentity:(struct __CFData *)arg5 payload:(id)arg6 trusted_certs:(struct __CFArray *)arg7 persistentCertRefs:(struct __CFArray *)arg8 bsdInterfaceName:(struct __CFString *)arg9 identityUUID:(struct __CFString *)arg10 isSystemProfile:(BOOL)arg11 outProfileID:(const struct __CFString **)arg12 outSysPersistCertRefs:(id *)arg13;
- (BOOL)isUserMode:(id)arg1;
- (BOOL)isLoginwindowMode:(id)arg1;
- (BOOL)isSystemMode:(id)arg1;
- (int)acquireKerberosTicket:(id)arg1;
- (void)networkChangeTimerQuit;
- (void)networkChangeTimerRelease;
- (void)startNetworkChangeTimer:(double)arg1;
- (BOOL)waitForNetworkChange:(unsigned long long)arg1;
- (BOOL)installProfilesSearchNodeChangeCallback;
- (void)uninstallProfilesSearchNodeCallback;
- (BOOL)profileDataContainsEnrollment:(id)arg1;
- (BOOL)needsSetupStartupProfiles;
- (id)getStartupProfilePaths;
- (void)finishSetupStartupProfiles;
- (int)installStartupProfiles;
- (id)getODProfiles:(id)arg1;
- (BOOL)hasODProfiles:(id)arg1;
- (int)receiveODProfiles:(id)arg1 odNode:(id)arg2 forUser:(id)arg3 profiles:(id)arg4;
- (BOOL)handleODComputerProfiles:(id)arg1 odNode:(id)arg2 profiles:(id)arg3;
- (BOOL)syncODProfiles:(id)arg1 odNode:(id)arg2 forUser:(id)arg3;
- (BOOL)sendODProfiles:(id)arg1 odNode:(id)arg2 forUser:(id)arg3 profiles:(id)arg4;

@end

