//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSWindowController.h>

#import "NSTabViewDelegate-Protocol.h"
#import "NSTextFieldDelegate-Protocol.h"

@class AMSMIDIPanelIconBrowserController, MIDIDeviceWidget, MessageView, NSButton, NSCollectionView, NSColorWell, NSComboBox, NSLayoutConstraint, NSMatrix, NSMutableArray, NSMutableDictionary, NSSegmentedControl, NSStepper, NSString, NSTabView, NSTabViewItem, NSTableView, NSTextField, NSView, NSWindow;

@interface MIDIPropertyWindowController : NSWindowController <NSTextFieldDelegate, NSTabViewDelegate>
{
    NSTextField *uiDeviceNameTitle;
    NSTextField *uiDeviceName;
    NSTextField *uiDeviceMfrTitle;
    NSComboBox *uiDeviceMfr;
    NSTextField *uiDeviceModelTitle;
    NSComboBox *uiDeviceModel;
    NSColorWell *uiWidgetColorWell;
    NSButton *uiDeviceState;
    NSButton *uiWidgetIconButton;
    NSTextField *uiIconBrowserText;
    NSView *uiIconViewContainer;
    NSTextField *uiMorePropertiesTitle;
    NSButton *uiMorePropertiesButton;
    NSView *uiMorePropertiesSuperview;
    NSTabView *uiMorePropertiesView;
    NSButton *uiContextualHelpButton;
    NSButton *uiApplyButton;
    NSButton *uiRevertButton;
    NSWindow *window;
    NSSegmentedControl *uiReceiveChannelControl;
    NSTextField *uiReceiveChannelMaxString;
    NSMatrix *uiReceiveParameterMatrix;
    NSSegmentedControl *uiTransmitChannelControl;
    NSTextField *uiTransmitChannelMaxString;
    NSMatrix *uiTransmitParameterMatrix;
    NSMatrix *uiFeatureMatrix;
    NSTextField *uiSysExID;
    NSTextField *uiPortHelpText;
    NSTableView *uiPortTableView;
    NSButton *uiAddPortButton;
    NSButton *uiRemovePortButton;
    NSTextField *uiPortNameString;
    NSTextField *uiMIDIInConnectorCount;
    NSStepper *uiMIDIInConnectorStepper;
    NSTextField *uiMIDIOutConnectorCount;
    NSStepper *uiMIDIOutConnectorStepper;
    NSLayoutConstraint *uiMIDIPropertiesViewHeightConstraint;
    AMSMIDIPanelIconBrowserController *mBrowserController;
    NSCollectionView *uiIconBrowserCollectionView;
    NSString *mPrefsKey;
    NSMutableDictionary *mPrefsDictionary;
    NSView *mSwappableViewSuperview;
    MessageView *mInterfacePropertyMessage;
    MessageView *mIACPropertyMessage;
    NSView *mInterfacePropertyStorage;
    BOOL mSheetIsExpanded;
    BOOL mIconViewIsDisplaying;
    struct CGRect mMorePropertiesViewExpandedFrame;
    float mMorePropertiesViewHeight;
    MIDIDeviceWidget *mCurrentWidget;
    int mWidgetUID;
    NSString *mLastMfrSelected;
    NSString *mLastModelSelected;
    NSString *mIconPath;
    struct MIDIDeviceDBPropertyList *mProps;
    char *mInvisibleDatabasePropertyMask;
    BOOL mShouldUpdateColor;
    NSMutableArray *mPortList;
    BOOL mRemovePrefsOnWindowClose;
    BOOL mWindowShouldCloseAfterUserResponse;
    BOOL mTabViewShouldChangeAfterUserResponse;
    BOOL mIsInited;
    NSTabViewItem *mCachedTabViewItem;
}

+ (void)forceCloseAllInspectors;
+ (void)bringDirtyWindowsToFront;
+ (void)applyAllChanges;
+ (int)dirtyInspectorCount;
+ (void)showAllInspectors:(BOOL)arg1;
+ (void)restoreAndShowAllInspectorsFromPrefs;
+ (id)getInspectorForDevice:(id)arg1;
+ (void)privGetInspectorPrefs;
- (void)windowWillClose:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (BOOL)tabView:(id)arg1 shouldSelectTabViewItem:(id)arg2;
- (void)showApplyChangesAlertSheet;
- (void)controlTextDidChange:(id)arg1;
- (void)iaRevertButtonPressed:(id)arg1;
- (void)iaApplyButtonPressed:(id)arg1;
- (void)iaContextualHelpButtonPressed:(id)arg1;
- (BOOL)executeMIDIPropertyChanges;
- (BOOL)windowIsMarkedAsEdited;
- (void)refreshCurrentDeviceWidget;
- (void)setSelectedWidget:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (void)swapOutIconViewAndResizeTabs:(BOOL)arg1;
- (void)setWindowEdited:(BOOL)arg1;
- (void)privSetDeviceWidgetImplementation:(id)arg1;
- (void)privMIDIStateWasThrashed:(id)arg1;
- (void)privNewIconSelected:(id)arg1;
- (id)windowNibName;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)iaPortNameChanged:(id)arg1;
- (id)tableView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 row:(int)arg5 mouseLocation:(struct CGPoint)arg6;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (unsigned long long)numberOfRowsInTableView:(id)arg1;
- (void)populatePortsForMIDIDevice;
- (void)iaEndpointCountChanged:(id)arg1;
- (void)iaRemovePortPressed:(id)arg1;
- (void)iaAddPortPressed:(id)arg1;
- (void)privPopulateConnectorInfoForSelectedPort;
- (void)iaWidgetColorChanged:(id)arg1;
- (void)iaDeviceOfflineStateChangedManually:(id)arg1;
- (void)iaDeviceModelSelected:(id)arg1;
- (void)iaDeviceMfrSelected:(id)arg1;
- (void)iaPropertyWidgetTouched:(id)arg1;
- (void)iaMorePropertiesButtonPressed:(id)arg1;
- (void)iaIconOverlayButtonPressed:(id)arg1;
- (void)addTabViewContraints;
- (void)enablePropertiesUI:(BOOL)arg1;
- (void)populateUIForDevice:(id)arg1;
- (void)initializePropertiesTab;
- (BOOL)executeMIDIPropertyChangesImplementation;
- (void)iaChannelControlSegmentSelectionChanged:(id)arg1;
- (void)MIDIDeviceOfflinePropertyChanged:(id)arg1;
- (void)privSetDevicePropertiesFromList:(struct MIDIDeviceDBPropertyList *)arg1;
- (void)privExecuteChangesInNonVisibleProperties;
- (void)privPopulateDeviceProperties;
- (int)channelStateForSegmentedControl:(id)arg1;
- (void)updateSegmentedControl:(id)arg1 forChannelState:(int)arg2;
- (void)updateSegmentedControl:(id)arg1 forNumberOfChannels:(int)arg2;
- (void)privSetField:(id)arg1 editable:(BOOL)arg2;
- (void)privPopulateCheckbox:(id)arg1 withDatabaseProperty:(struct MIDIDeviceDBProperty *)arg2;
- (void)privPopulateCheckbox:(id)arg1 withDeviceProperty:(struct __CFString *)arg2;
- (void)privPopulateSysEx;
- (void)privPopulateOfflineProperty;
- (void)privPopulateModelComboBox;
- (void)privPopulateMfrComboBox;
- (id)privWindowTitleForName:(id)arg1;
- (void)privEnablePropertyUIBasedOnDevice;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

