//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSApplication.h>

#import "LARUIAuthenticationDialogDelegate-Protocol.h"
#import "LAUIDelegate-Protocol.h"
#import "NSApplicationDelegate-Protocol.h"
#import "NSMenuDelegate-Protocol.h"
#import "NSPathControlDelegate-Protocol.h"
#import "NSUserInterfaceItemSearching-Protocol.h"

@class LAContext, LARUIAuthenticationDialog, NSDictionary, NSMenu, NSMenuItem, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSPanel, NSString, TTWindow, TTWindowController, TTWorkspace;

@interface TTApplication : NSApplication <LAUIDelegate, LARUIAuthenticationDialogDelegate, NSApplicationDelegate, NSMenuDelegate, NSPathControlDelegate, NSUserInterfaceItemSearching>
{
    NSMutableIndexSet *_availableEquivalents;
    NSMutableDictionary *_windowEquivalents;
    NSMenu *_equivalentsMenu;
    NSMenu *_alternateEquivalentsMenu;
    BOOL _shouldDisplayWindowEquivalents;
    NSMutableArray *_windowsToPromptForCloseArray;
    BOOL _shouldPerformStartupAction;
    BOOL _isTerminating;
    NSDictionary *_initialEnvironment;
    BOOL _illegalShell;
    NSString *_defaultShell;
    NSString *_termType;
    TTWorkspace *_currentWorkspace;
    TTWindow *_mainTerminalWindow;
    TTWindowController *_mainTerminalWindowController;
    NSMenuItem *_closeWindowMenuItem;
    NSMenuItem *_closeAllMenuItem;
    NSMenuItem *_closeTabMenuItem;
    NSMenuItem *_closeOtherTabsMenuItem;
    NSMenuItem *_servicesMenuItem;
    NSMenuItem *_helpMenuItem;
    NSMenu *_newWindowMenu;
    NSMenu *_newTabMenu;
    NSMenu *_newWindowDockMenu;
    NSMenu *_copySpecialMenu;
    NSMenu *_bookmarksMenu;
    BOOL _userAlertAttention;
    BOOL _userAlertAttentionCritical;
    BOOL _isUpdatingUserAlert;
    NSMenu *_workspacesMenu;
    int _lowSwapSpaceWatcherKQueueFD;
    BOOL _terminateLowSwapSpaceWatcher;
    NSPanel *_lowSwapSpaceWindow;
    NSPanel *_lowAddressSpaceWindow;
    BOOL isInEmergencyMemoryConservationModeForLowSwapSpace;
    LAContext *_airAuthContext;
    LARUIAuthenticationDialog *_airDialogController;
    CDUnknownBlockType _airEventReply;
}

+ (BOOL)isRunningInInstallEnvironment;
+ (BOOL)shouldUseVisualBeep;
+ (id)alertSoundURL;
+ (id)NVRAMForKey:(id)arg1 namespace:(id)arg2;
+ (id)systemVolumeUUID;
+ (void)initialize;
@property BOOL shouldDisplayWindowEquivalents; // @synthesize shouldDisplayWindowEquivalents=_shouldDisplayWindowEquivalents;
@property(copy) CDUnknownBlockType airEventReply; // @synthesize airEventReply=_airEventReply;
@property(retain) LARUIAuthenticationDialog *airDialogController; // @synthesize airDialogController=_airDialogController;
@property(retain) LAContext *airAuthContext; // @synthesize airAuthContext=_airAuthContext;
@property(nonatomic) BOOL isInEmergencyMemoryConservationModeForLowSwapSpace; // @synthesize isInEmergencyMemoryConservationModeForLowSwapSpace;
@property BOOL shouldPerformStartupAction; // @synthesize shouldPerformStartupAction=_shouldPerformStartupAction;
@property(readonly) NSDictionary *initialEnvironment; // @synthesize initialEnvironment=_initialEnvironment;
- (void)performActionForItem:(id)arg1;
- (id)localizedCategoryForItem:(id)arg1;
- (id)localizedTitlesForItem:(id)arg1;
- (void)searchForItemsWithSearchString:(id)arg1 resultLimit:(long long)arg2 matchedItemHandler:(CDUnknownBlockType)arg3;
- (id)manPathForFind;
- (void)searchManPages:(id)arg1 userData:(id)arg2 error:(id *)arg3;
- (void)searchManPagesForString:(id)arg1;
- (void)openManPage:(id)arg1 userData:(id)arg2 error:(id *)arg3;
- (void)openManPageForString:(id)arg1;
- (void)terminateLowSpaceWatcher;
- (void)initLowSwapSpaceWatcher;
- (void)watchForLowSwapSpace;
- (void)handleReceivedLowSwapSpaceClearedNotification;
- (void)handleReceivedLowSwapSpaceSetNotification;
- (void)orderFrontStandardAboutPanel:(id)arg1;
- (void)sendEvent:(id)arg1;
- (void)_updateWindowTitlesTimer:(id)arg1;
- (void)_updateWindowTitles;
- (unsigned long long)keyEquivalentModifierMaskForProfileID:(long long)arg1;
- (id)keyEquivalentForProfileID:(long long)arg1;
- (unsigned long long)keyEquivalentModifierMaskForTabNumber:(unsigned long long)arg1;
- (id)keyEquivalentForTabNumber:(unsigned long long)arg1;
- (void)releaseProfileID:(long long)arg1;
- (void)transferProfileID:(id)arg1;
- (unsigned long long)registerProfileID:(id)arg1;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuNeedsUpdate:(id)arg1;
- (void)workspaceMenuNeedsUpdate:(id)arg1;
- (void)copySpecialMenuNeedsUpdate:(id)arg1;
- (void)profileMenuNeedsUpdate:(id)arg1 withAction:(SEL)arg2;
- (void)profileMenuNeedsUpdate:(id)arg1;
- (void)removeWindowsItem:(id)arg1;
- (void)updateWindowsItem:(id)arg1;
- (void)changeWindowsItem:(id)arg1 title:(id)arg2 filename:(BOOL)arg3;
- (void)addWindowsItem:(id)arg1 title:(id)arg2 filename:(BOOL)arg3;
- (void)updateWindowMenu;
- (void)updateShellMenu;
- (BOOL)validateMenuItem:(id)arg1;
- (void)searchManPagesForSelection:(id)arg1;
- (void)openManPageForSelection:(id)arg1;
- (void)showHelpAnchorWithTag:(id)arg1;
- (void)toggleSecureKeyboardEntry:(id)arg1;
- (void)setSecureKeyboardEntry:(BOOL)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)mainTerminalWindow;
- (void)returnAllToDefaultSize:(id)arg1;
- (id)frontmostTerminalWindow;
- (void)openWorkspaceRepresentation:(id)arg1;
- (void)openWorkspace:(id)arg1;
- (void)saveWorkspace:(id)arg1;
- (id)currentWorkspace;
- (void)addWindowController:(id)arg1 withProfileID:(long long)arg2;
- (void)addWindowController:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationWillBecomeActive:(id)arg1;
- (void)handleWindowKeyChange:(id)arg1;
- (void)applyProfileToAllWindowControllers:(id)arg1;
- (BOOL)importSettingsFiles:(id)arg1 overwritingExisting:(BOOL)arg2 onlyNewer:(BOOL)arg3 profiles:(id *)arg4 workspaces:(id *)arg5 error:(id *)arg6;
- (BOOL)importSettingsFiles:(id)arg1 overwritingExisting:(BOOL)arg2 profiles:(id *)arg3 workspaces:(id *)arg4 error:(id *)arg5;
- (BOOL)openSettingsFile:(id)arg1;
- (id)importTermFile:(id)arg1;
- (BOOL)openTermFile:(id)arg1;
- (BOOL)openCommandFile:(id)arg1;
- (void)newCommand:(id)arg1;
- (void)newTerminalAtFolder:(id)arg1 userData:(id)arg2 error:(id *)arg3;
- (BOOL)openURL:(id)arg1;
- (int)checkKnownHostName:(id)arg1;
- (BOOL)openFolder:(id)arg1 inNewTab:(BOOL)arg2;
- (BOOL)openFile:(id)arg1;
- (BOOL)_shouldOpenFile:(id)arg1;
- (id)_localizedSenderNameForAppleEvent:(id)arg1;
- (BOOL)pathControl:(id)arg1 shouldDragPathComponentCell:(id)arg2 withPasteboard:(id)arg3;
- (void)_revealPathControlObject:(id)arg1;
- (void)_revealPathControl:(id)arg1;
- (void)didPresentErrorWithRecovery:(BOOL)arg1 contextInfo:(void *)arg2;
- (void)cancelTermination:(id)arg1;
- (void)continueTermination:(id)arg1;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (void)connectToServer:(id)arg1;
- (BOOL)application:(id)arg1 openTempFile:(id)arg2;
- (void)open:(id)arg1;
- (void)changeStyleForCopy:(id)arg1;
- (void)toggleInspectorPanel:(id)arg1;
- (void)toggleProfileInspector:(id)arg1;
- (void)sneakilyOrderFrontFontPanel:(id)arg1;
- (void)showPreferencesWindow:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (id)makeWindowControllerWithProfile:(id)arg1 customFont:(id)arg2 command:(id)arg3 runAsShell:(BOOL)arg4 restorable:(BOOL)arg5 workingDirectory:(id)arg6;
- (id)makeWindowControllerWithProfile:(id)arg1;
- (BOOL)newShell:(id)arg1 withProfile:(id)arg2;
- (void)newTab:(id)arg1;
- (void)newShell:(id)arg1;
- (BOOL)modifiersPressedForNewTerminalWithSameCommand;
- (void)commitPreferenceChanges;
- (id)importDefaultSettingsOverwritingExisting:(BOOL)arg1 onlyNewer:(BOOL)arg2;
- (void)migrateDefaults;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)finishLaunching;
- (void)cancelAlertUser;
- (void)alertUserWithAttention:(BOOL)arg1 critical:(BOOL)arg2;
- (void)_delayedDoCancelAlertUser;
- (void)_delayedDoAlertUser;
- (void)_doCancelAlertUser;
- (void)_doAlertUser;
- (void)_updateAlertBadge;
- (void)awakeFromNib;
- (void)authenticationDialogFinishedWithResult:(long long)arg1;
- (void)event:(long long)arg1 params:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (BOOL)isSystemVolumeFileVaulted;
- (BOOL)authenticateInRecovery;
- (id)defaultShell;
- (void)setDefaultShell:(id)arg1;
- (void)dealloc;
- (id)init;
@property(readonly) BOOL isInEmergencyMemoryConservationMode;
- (void)_dismissLowSpacePanel:(id)arg1;
- (void)setScriptStartupSettings:(id)arg1;
- (id)scriptStartupSettings;
- (void)setScriptDefaultSettings:(id)arg1;
- (id)scriptDefaultSettings;
- (void)insertInScriptSettings:(id)arg1;
- (void)setScriptSettings:(id)arg1;
- (id)scriptSettings;
- (void)handleGetURLScriptCommand:(id)arg1;
- (id)handleDoScriptCommand:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

