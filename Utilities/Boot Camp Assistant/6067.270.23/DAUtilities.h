//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface DAUtilities : NSObject
{
}

+ (struct __DADisk *)getTopLevelDiskForContainer:(struct __DADisk *)arg1;
+ (BOOL)doesSystemSupportMultidisks;
+ (float)getPhysicalMemorySize;
+ (BOOL)is3TBHardDiskDrive;
+ (BOOL)isUnSupportedMojaveSystem:(id)arg1;
+ (BOOL)getIsInternalSSD:(id)arg1 forDisk:(struct __DADisk *)arg2;
+ (id)externalDrives;
+ (BOOL)hasAPFSFusionContainer;
+ (struct __DADisk *)getTargetContainer;
+ (id)nonAPFSDisks;
+ (int)removeKernelDumpPartition:(struct __DADisk *)arg1;
+ (void)checkForCoreDump:(struct __DADisk **)arg1;
+ (struct __DADisk *)getPhysicalContainer:(struct __DADisk *)arg1;
+ (id)getContainers;
+ (long long)numberOfContainers;
+ (BOOL)isSystemUEFIOnly;
+ (BOOL)isSystemSupportedNonWin10;
+ (BOOL)isSystemWindows10OrLateronly;
+ (id)getPlatformModel;
+ (BOOL)doesSystemSupportWindowsServer;
+ (BOOL)doesSystemSupportHibernation;
+ (BOOL)isSystemLockedToRS5orHigher;
+ (BOOL)is64BitWindows10OrlaterISO:(id)arg1;
+ (void)getVersionOfWindowsISOImage:(id)arg1 majorVersion:(unsigned short *)arg2 minorVersion:(unsigned short *)arg3 arch:(char *)arg4;
+ (int)getWindowsFlavor:(id)arg1 isWindowsServer:(char *)arg2 isConsumer:(char *)arg3;
+ (unsigned int)getWindowsBuildVersion:(id)arg1;
+ (void)unmountISO:(id)arg1;
+ (long long)getSizeOfISO:(id)arg1;
+ (id)mountISO:(id)arg1;
+ (BOOL)isExternalInstallationOnly;
+ (BOOL)isESDRequired;
+ (BOOL)isBootCampESDPresent;
+ (void)clearBootFlagForUSBDrives;
+ (id)enumerateUSBDrives;
+ (BOOL)isUEFIBootSupport;
+ (BOOL)isSystemWindows8OrLater;
+ (BOOL)hasEnoughSpace:(struct __DADisk *)arg1;
+ (BOOL)hasSingleFAT:(struct __DADisk *)arg1;
+ (BOOL)isWindows7Only;
+ (BOOL)is32BitSupported;
+ (void)checkWindowsISOImage:(id)arg1 isWindows7:(char *)arg2 isWindows8OrLater:(char *)arg3 isWindows10:(char *)arg4 is64Bit:(char *)arg5;
+ (BOOL)checkInstallationMedia:(id)arg1 isWindows7:(char *)arg2 isWindows8OrLater:(char *)arg3 isWindows10:(char *)arg4 is64Bit:(char *)arg5;
+ (BOOL)isUEFISupport;
+ (BOOL)isCSPVDiskOrChildren:(struct __DADisk *)arg1;
+ (BOOL)restartForLV;
+ (int)checkBootableUSBDrive:(struct __DADisk *)arg1 bootDisk:(struct __DADisk **)arg2 supportUEFI:(BOOL)arg3 isWindows7:(char *)arg4 isWindows10rLater:(char *)arg5 is64Bit:(char *)arg6;
+ (id)getDiskNameString:(struct __DADisk *)arg1;
+ (BOOL)usbInstallationSupported;
+ (id)getModelNameVersion:(id)arg1 versionNumber:(unsigned long long *)arg2;
+ (struct __DADisk *)getCoreStoragePVForLV:(id)arg1 disk:(struct __DADisk *)arg2;
+ (struct __DADisk *)getCoreStorageLVForPV:(id)arg1 disk:(struct __DADisk *)arg2;
+ (id)localizedStringWithLong:(long long)arg1;
+ (BOOL)hasOpticalDrive;
+ (unsigned long long)numericVersionWithMajor:(id)arg1 minor:(id)arg2;
+ (void)advanceProgress:(id)arg1 newValue:(double)arg2;
+ (void)addView:(id)arg1 toTabView:(id)arg2 atIndex:(int)arg3;
+ (void)quit;
+ (void)restart;
+ (void)blessCurrentStartupDisk:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (int)blessCDWithDriveHint:(struct __DADisk *)arg1 supportUEFI:(BOOL)arg2 isWindows7:(char *)arg3 isWindows8OrLater:(char *)arg4 isWindows10:(char *)arg5 is64Bit:(char *)arg6;
+ (int)blessCD:(struct __DADisk *)arg1 supportUEFI:(BOOL)arg2 isWindows7:(char *)arg3 isWindows8OrLater:(char *)arg4 isWindows10:(char *)arg5 is64Bit:(char *)arg6;
+ (BOOL)containsRAID:(id)arg1 disk:(struct __DADisk *)arg2;
+ (struct __DADisk *)getBootCampPartition:(id)arg1 from:(struct __DADisk *)arg2;
+ (struct __DADisk *)getInstallerPartition:(id)arg1 from:(struct __DADisk *)arg2;
+ (void)getPartitions:(id)arg1 from:(struct __DADisk *)arg2 efi:(struct __DADisk **)arg3 hfs:(struct __DADisk **)arg4 msReserved:(struct __DADisk **)arg5 msdos:(struct __DADisk **)arg6 abt:(struct __DADisk **)arg7 cst:(struct __DADisk **)arg8 apfs:(struct __DADisk **)arg9;
+ (void)doWindowsFormatForSelectedDisk:(struct __DADisk *)arg1 delegate:(id)arg2;
+ (void)revertWindowsFormatBackToSinglePartition:(struct __DADisk *)arg1 delegate:(id)arg2;
+ (void)doWindowsFormat:(struct __DADisk *)arg1 delegate:(id)arg2;
+ (void)doEraseOperation:(struct __DADisk *)arg1 delegate:(id)arg2 isGPTPartition:(BOOL)arg3;
+ (void)doUnpartitionOperation:(struct __DADisk *)arg1 delegate:(id)arg2;
+ (void)doPartitionOperation:(struct __DADisk *)arg1 size:(id)arg2 delegate:(id)arg3 isGPTPartition:(BOOL)arg4;
+ (BOOL)enableJournaling;
+ (id)volumeNamesForDisk:(struct __DADisk *)arg1;
+ (id)externalDisks;
+ (id)internalDisks;
+ (long long)numberOfInternalDisks;
+ (BOOL)isWindowsOnly:(struct __DADisk *)arg1;
+ (BOOL)canInstall:(struct __DADisk *)arg1;
+ (BOOL)canErase:(struct __DADisk *)arg1;
+ (BOOL)canUnpartition:(struct __DADisk *)arg1 mergedCapacity:(long long *)arg2;
+ (long long)getUnpartitionedCapacity:(struct __DADisk *)arg1;
+ (BOOL)canUnpartition:(struct __DADisk *)arg1;
+ (BOOL)canPartition:(struct __DADisk *)arg1;
+ (BOOL)isStartupTopDisk:(struct __DADisk *)arg1;
+ (struct __DADisk *)getStartupTopDisk:(id)arg1;
+ (struct __DADisk *)getStartupDisk:(id)arg1;
+ (BOOL)getCapacities:(struct __DADisk *)arg1 capacity:(float *)arg2 used:(float *)arg3;
+ (id)getDiskIcon:(struct __DADisk *)arg1;
+ (id)getDiskName:(struct __DADisk *)arg1;
+ (int)systemSuitable;

@end

