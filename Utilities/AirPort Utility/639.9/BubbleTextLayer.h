//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <QuartzCore/CALayer.h>

@class NSMutableArray;

@interface BubbleTextLayer : CALayer
{
    struct CGSize _textSize;
    struct CGSize _leftImageLayerSize;
    struct CGSize _rightAccessoryLayerSize;
    struct CGSize _contentSize;
    struct CGSize _bubbleSize;
    struct CGRect _textFrame;
    struct CGRect _bubbleFrame;
    struct CGSize _boundsSizeConstraint;
    struct __CTFont *_font;
    struct __CTLine *_theLine;
    double _descent;
    double _ascent;
    double _leading;
    struct CGRect _fontBounds;
    NSMutableArray *_annotationPoints;
    struct CGColor *_generalShadowColor;
    struct CGColor *_whiteShadowColor;
    CALayer *_leftImageLayer;
    CALayer *_rightAccessoryLayer;
    id _owningView;
}

+ (BOOL)needsDisplayForKey:(id)arg1;
@property(retain, nonatomic) struct __CTFont *font; // @synthesize font=_font;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)layoutSublayers;
@property(readonly, nonatomic) double textBaselineOffset;
@property(readonly, nonatomic) struct CGRect textFrame;
- (struct CGSize)preferredFrameSize;
- (struct CGSize)calculatePreferredSubframeSizes;
- (struct CGSize)textPreferredFrameSizeForLayerSize:(struct CGSize)arg1;
- (BOOL)isAnnotationBubble;
- (struct CGSize)getRightAccessoryLayerPreferredSize;
- (struct CGSize)getImagePreferredSize;
@property(nonatomic) struct CGSize boundsSizeConstraint;
@property(retain, nonatomic) CALayer *rightAccessoryLayer;
@property(retain, nonatomic) struct CGImage *image;
@property(nonatomic) id owningView;
- (void)addAnnotationPoint:(struct CGPoint)arg1;
- (void)dealloc;
- (void)contentsScaleHasBeenChangedFromOldScale:(double)arg1 toNewScale:(double)arg2;
- (BOOL)layer:(id)arg1 shouldInheritContentsScale:(double)arg2 fromWindow:(id)arg3;
- (id)initWithOwningView:(id)arg1;

// Remaining properties
@property(retain, nonatomic) struct CGColor *fillColor; // @dynamic fillColor;
@property(retain, nonatomic) struct CGColor *fillColor2; // @dynamic fillColor2;
@property(nonatomic) double fontSize; // @dynamic fontSize;
@property(retain, nonatomic) struct CGColor *foregroundColor; // @dynamic foregroundColor;
@property(retain, nonatomic) struct CGColor *frameColor; // @dynamic frameColor;
@property(nonatomic) double frameWidth; // @dynamic frameWidth;
@property(retain, nonatomic) id string; // @dynamic string;

@end

