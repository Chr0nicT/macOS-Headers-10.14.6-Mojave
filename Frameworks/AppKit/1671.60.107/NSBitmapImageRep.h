//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSImageRep.h>

#import <AppKit/NSSecureCoding-Protocol.h>

@class NSColorSpace, NSData;

@interface NSBitmapImageRep : NSImageRep <NSSecureCoding>
{
    unsigned int _bytesPerRow;
    struct __bitmapRepFlags {
        unsigned int bitsPerPixel:8;
        unsigned int isPlanar:1;
        unsigned int explicitPlanes:1;
        unsigned int imageSourceIsIndexed:1;
        unsigned int dataLoaded:1;
        unsigned int colorModel:4;
        unsigned int tierTwoInfoIsLoaded:1;
        unsigned int respectO:1;
        unsigned int compressionFactor:14;
        unsigned int imageNumber:8;
        unsigned int bitmapFormat:3;
        unsigned int cgImageIsPrimary:1;
        unsigned int compression:20;
    } _moreRepFlags;
    id _dataObj;
    NSData *_tiffData;
    id _properties;
}

+ (id)TIFFRepresentationOfImageRepsInArray:(id)arg1 usingCompression:(unsigned long long)arg2 factor:(float)arg3;
+ (id)TIFFRepresentationOfImageRepsInArray:(id)arg1;
+ (id)localizedNameForTIFFCompressionType:(unsigned long long)arg1;
+ (void)getTIFFCompressionTypes:(const unsigned long long **)arg1 count:(long long *)arg2;
+ (void)withCurrentThreadRespectingOrientation:(BOOL)arg1 performBlock:(CDUnknownBlockType)arg2;
+ (BOOL)currentThreadRespectOrientation;
+ (void)setDefaultRespectOrientation:(BOOL)arg1;
+ (BOOL)defaultRespectOrientation;
+ (BOOL)supportsSecureCoding;
+ (BOOL)canInitWithData:(id)arg1;
+ (id)_imageRepWithData:(id)arg1 hfsFileType:(id)arg2 extension:(id)arg3;
+ (id)_imageRepsWithData:(id)arg1 hfsFileType:(id)arg2 extension:(id)arg3 expandImageContentNow:(BOOL)arg4;
+ (id)imageRepWithData:(id)arg1;
+ (id)imageRepsWithData:(id)arg1;
+ (id)_imagesFromURL:(id)arg1 forImage:(id)arg2 fileType:(id)arg3 extension:(id)arg4;
+ (id)_imagesFromIcon:(id)arg1 inApp:(id)arg2 zone:(struct _NSZone *)arg3;
+ (id)_imagesWithData:(id)arg1 hfsFileType:(id)arg2 extension:(id)arg3 zone:(struct _NSZone *)arg4 expandImageContentNow:(BOOL)arg5 includeAllReps:(BOOL)arg6;
+ (id)_imagesWithData:(id)arg1 hfsFileType:(id)arg2 extension:(id)arg3 zone:(struct _NSZone *)arg4 expandImageContentNow:(BOOL)arg5;
+ (void)initialize;
+ (id)imageUnfilteredPasteboardTypes;
+ (id)imageUnfilteredFileTypes;
+ (id)imageUnfilteredTypes;
+ (id)representationOfImageRepsInArray:(id)arg1 usingType:(unsigned long long)arg2 properties:(id)arg3;
+ (void)_setEnableFlippedImageFix:(BOOL)arg1;
@property(retain, setter=_setBacking:) id _backing; // @synthesize _backing=_dataObj;
- (void)colorizeByMappingGray:(double)arg1 toColor:(id)arg2 blackMapping:(id)arg3 whiteMapping:(id)arg4;
- (id)_bitmapImageReps;
- (id)TIFFRepresentationUsingCompression:(unsigned long long)arg1 factor:(float)arg2;
@property(readonly, copy) NSData *TIFFRepresentation;
- (void)setCompression:(unsigned long long)arg1 factor:(float)arg2;
- (void)getCompression:(unsigned long long *)arg1 factor:(float *)arg2;
- (BOOL)canBeCompressedUsing:(unsigned long long)arg1;
- (void)setRespectOrientation:(BOOL)arg1;
- (BOOL)respectOrientation;
- (BOOL)_isValid;
- (long long)_uncachedSize;
- (void)getPixel:(unsigned long long *)arg1 atX:(long long)arg2 y:(long long)arg3;
- (void)setPixel:(unsigned long long *)arg1 atX:(long long)arg2 y:(long long)arg3;
- (id)colorAtX:(long long)arg1 y:(long long)arg2;
- (void)setColor:(id)arg1 atX:(long long)arg2 y:(long long)arg3;
@property(readonly) char *bitmapData;
- (void)getBitmapDataPlanes:(char **)arg1;
- (BOOL)_wantsToBeCachedForFlippedness:(BOOL)arg1;
- (struct CGImage *)CGImageForProposedRect:(struct CGRect *)arg1 context:(id)arg2 hints:(id)arg3;
@property(readonly) struct CGImage *CGImage;
- (BOOL)draw;
- (void)setSize:(struct CGSize)arg1;
- (void)dealloc;
- (void)_freeImage;
- (void)_freeData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_setSharedIdentifier:(long long)arg1;
- (id)initWithData:(id)arg1;
- (BOOL)_loadData;
- (long long)incrementalLoadFromData:(id)arg1 complete:(BOOL)arg2;
- (id)initWithCIImage:(id)arg1;
- (id)initWithFocusedViewRect:(struct CGRect)arg1;
- (id)initWithBitmapDataPlanes:(char **)arg1 pixelsWide:(long long)arg2 pixelsHigh:(long long)arg3 bitsPerSample:(long long)arg4 samplesPerPixel:(long long)arg5 hasAlpha:(BOOL)arg6 isPlanar:(BOOL)arg7 colorSpaceName:(id)arg8 bytesPerRow:(long long)arg9 bitsPerPixel:(long long)arg10;
- (id)_initWithSharedBitmap:(const void *)arg1 rect:(struct CGRect)arg2;
- (id)init;
- (id)_initWithImageSource:(void *)arg1 imageNumber:(long long)arg2 properties:(struct __CFDictionary *)arg3;
- (id)initForIncrementalLoad;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithBitmapDataPlanes:(char **)arg1 pixelsWide:(long long)arg2 pixelsHigh:(long long)arg3 bitsPerSample:(long long)arg4 samplesPerPixel:(long long)arg5 hasAlpha:(BOOL)arg6 isPlanar:(BOOL)arg7 colorSpaceName:(id)arg8 bitmapFormat:(unsigned long long)arg9 bytesPerRow:(long long)arg10 bitsPerPixel:(long long)arg11;
- (BOOL)_loadTierTwoInfoIfNotYetLoaded;
- (void)_loadTierTwoInfoWithCGImage:(struct CGImage *)arg1;
- (BOOL)_loadTierOneInfoWithCGImage:(struct CGImage *)arg1;
- (BOOL)_loadTierOneInfoWithImageSource:(struct CGImageSource *)arg1 imageNumber:(long long)arg2 properties:(struct __CFDictionary *)arg3;
- (id)bitmapImageRepByRetaggingWithColorSpace:(id)arg1;
- (id)bitmapImageRepByConvertingToColorSpace:(id)arg1 renderingIntent:(long long)arg2;
- (void)setColorSpaceName:(id)arg1;
- (id)colorSpaceName;
- (void)_bitmapImageRep_setColorSpaceName:(id)arg1;
- (void)_retagBackingWithColorSpace:(id)arg1;
@property(readonly) NSColorSpace *colorSpace;
- (unsigned long long)_bitmapFormat;
@property(readonly) unsigned long long bitmapFormat;
@property(readonly) long long bytesPerRow;
@property(readonly) long long bytesPerPlane;
@property(readonly) long long bitsPerPixel;
@property(readonly) long long numberOfPlanes;
@property(readonly) long long samplesPerPixel;
- (long long)_numberOfColorComponentsNotIncludingAlpha;
- (long long)_colorSpaceModel;
@property(readonly, getter=isPlanar) BOOL planar;
- (void)_performBlockUsingBackingMutableData:(CDUnknownBlockType)arg1;
- (void)_withoutChangingBackingPerformBlockUsingBackingMutableData:(CDUnknownBlockType)arg1;
- (void)_fromCGImage:(struct CGImage *)arg1 performBlockUsingMutableData:(CDUnknownBlockType)arg2;
- (void)_captureDrawing:(CDUnknownBlockType)arg1;
- (void)_performBlockUsingBackingCGImage:(CDUnknownBlockType)arg1;
- (void)_becomeBackedByCGImage:(struct CGImage *)arg1;
- (void)_withoutChangingBackingPerformBlockUsingBackingCGImage:(CDUnknownBlockType)arg1;
- (void)_performBlockUsingBacking:(CDUnknownBlockType)arg1;
- (id)description;
- (void)_setImageNumber:(long long)arg1;
- (long long)_imageNumber;
- (id)valueForProperty:(id)arg1;
- (void)setProperty:(id)arg1 withValue:(id)arg2;
- (id)representationUsingType:(unsigned long long)arg1 properties:(id)arg2;
- (void)_setCGImageRef:(struct CGImage *)arg1;
- (struct CGImage *)_getCGImageRefCreateIfNecessary;
- (struct CGImage *)_CGImageRef;
- (struct CGImage *)_acquireRetainedCGImageRef;

@end

