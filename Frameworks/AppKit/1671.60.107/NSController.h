//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <AppKit/NSCoding-Protocol.h>
#import <AppKit/NSEditor-Protocol.h>
#import <AppKit/NSEditorRegistration-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSString;

@interface NSController : NSObject <NSCoding, NSEditor, NSEditorRegistration>
{
    int _specialPurposeType;
    id _bindingAdaptor;
    NSMutableArray *_editors;
    NSMutableArray *_declaredKeys;
    NSMutableDictionary *_dependentKeyToModelKeyTable;
    NSMutableDictionary *_modelKeyToDependentKeyTable;
    NSMutableArray *_modelKeysToRefreshEachTime;
    struct __bindingsControllerFlags {
        unsigned int _alwaysPresentsApplicationModalAlerts:1;
        unsigned int _refreshesAllModelKeys:1;
        unsigned int _multipleObservedModelObjects:1;
        unsigned int _isEditing:1;
        unsigned int _reservedController:28;
    } _bindingsControllerFlags;
    id _modelObservingTracker;
    id _expectedObservingInfo;
    id _singleValueAccessor;
}

+ (BOOL)_shouldAddObservationForwardersForKey:(id)arg1;
+ (id)_modelAndProxyKeys;
+ (id)_keyValueBindingAccessPoints;
+ (Class)_modelObservingTrackerClass;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)_nonAutomaticObservingKeys;
+ (void)initialize;
- (BOOL)_refreshesAllModelKeys;
- (void)_setRefreshesAllModelKeys:(BOOL)arg1;
- (id)_modelKeysTriggeringChangeNotificationsForDependentKey:(id)arg1;
- (void)_setModelKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)_shouldSuppressObserverNotificationFromObject:(id)arg1 keyPath:(id)arg2;
- (BOOL)_shouldSendObserverNotificationForModelOrProxyKey:(id)arg1 keyPath:(id)arg2 ofObject:(id)arg3;
- (id)_modelAndProxyKeysObserved;
- (BOOL)_observesModelObjects;
- (BOOL)_validateSingleValue:(id *)arg1 forKeyPath:(id)arg2 error:(id *)arg3;
- (BOOL)_validateSingleValue:(id *)arg1 forKey:(id)arg2 error:(id *)arg3;
- (void)_invokeSingleSelector:(SEL)arg1 withArguments:(id)arg2 onKeyPath:(id)arg3;
- (void)_setSingleValue:(id)arg1 forKeyPath:(id)arg2;
- (void)_setSingleValue:(id)arg1 forKey:(id)arg2;
- (id)_singleMutableArrayValueForKeyPath:(id)arg1;
- (id)_singleMutableArrayValueForKey:(id)arg1;
- (id)_singleValueForKeyPath:(id)arg1 operationType:(long long)arg2;
- (id)_singleValueForKeyPath:(id)arg1;
- (id)_singleValueForKey:(id)arg1;
@property(readonly, getter=isEditing) BOOL editing;
- (void)_controllerEditor:(id)arg1 didCommit:(BOOL)arg2 contextInfo:(id)arg3;
- (void)commitEditingWithDelegate:(id)arg1 didCommitSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (BOOL)commitEditingAndReturnError:(id *)arg1;
- (BOOL)commitEditing;
- (void)discardEditing;
- (BOOL)alwaysPresentsApplicationModalAlerts;
- (void)setAlwaysPresentsApplicationModalAlerts:(BOOL)arg1;
- (void)objectDidEndEditing:(id)arg1;
- (void)objectDidBeginEditing:(id)arg1;
- (void)_finishEditingState;
- (void)_notifyEditorStateChanged:(BOOL)arg1;
- (void)didChangeValueForKey:(id)arg1;
- (void)willChangeValueForKey:(id)arg1;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2;
- (BOOL)_shouldAddObservationForwardersForKey:(id)arg1;
- (long long)_specialPurposeType;
- (void)_setSpecialPurposeType:(long long)arg1;
- (void)_removeDeclaredKey:(id)arg1;
- (void)_addDeclaredKey:(id)arg1;
- (id)_declaredKeys;
- (void)_setDeclaredKeys:(id)arg1;
- (id)_controllerKeys;
- (id)_bindingAdaptor;
- (void)_setBindingAdaptor:(id)arg1;
- (void)dealloc;
- (void)_dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)_init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

