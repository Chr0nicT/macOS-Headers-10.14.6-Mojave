//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <AppKit/NSPersistentUIFlushHandler-Protocol.h>

@class NSMapTable, NSMutableArray, NSMutableDictionary, NSPersistentUICrashHandler, NSPersistentUIEncodingQueue, NSPersistentUIFileManager, NSPersistentUIFlushScheduler, NSPersistentUIRestorer, NSPersistentUIWindowSnapshotter, NSString;
@protocol OS_dispatch_queue;

@interface NSPersistentUIManager : NSObject <NSPersistentUIFlushHandler>
{
    NSPersistentUIEncodingQueue *_encodingQueue;
    NSObject<OS_dispatch_queue> *workQueue;
    NSMutableArray *sortedWindowInfos;
    NSMapTable *objectToPendingKeyPaths;
    NSMutableArray *pendingRecords;
    NSMutableDictionary *additionalBuckets;
    struct os_unfair_lock_s _lock;
    NSPersistentUIRestorer *_stateRestorer;
    NSPersistentUICrashHandler *_crashHandler;
    BOOL _isClosedToChanges;
    NSPersistentUIFileManager *_fileManager;
    NSPersistentUIFlushScheduler *_flushScheduler;
    NSPersistentUIWindowSnapshotter *_windowSnapshotter;
    BOOL treatEverythingAsDirty;
}

+ (id)unarchiver:(id)arg1 didDecodeObject:(id)arg2;
+ (void)nibDecoder:(id)arg1 didDecodeObject:(id)arg2;
+ (void)_didDecodeObject:(id)arg1 uid:(unsigned int)arg2;
+ (id)_debugUnrestoredWindows;
+ (id)sharedManager;
+ (id)copyDebugDumpStateDirectory:(id)arg1;
+ (id)copyPersistentCarbonWindowDictionariesForBundleID:(id)arg1;
+ (CDUnknownBlockType)_copyCGWindowOrderingReplayer;
+ (void)_resuppressWindowOrderingNowThatStateRestorationIsOccurring;
+ (void)_permitWindowOrderingUntilStateRestoration;
+ (BOOL)_suppressCGWindowOrdering;
+ (void)_NSPersistentUIDestroyTalagentWindows:(unsigned int)arg1:(id)arg2;
+ (id)_NSPersistentUIAcquireTalagentWindowsOnConnections:(unsigned int)arg1:(id)arg2;
- (BOOL)shouldRestoreStateOnLaunch;
- (void)writePublicPlistWithOpenWindowIDs:(id)arg1;
- (BOOL)promptToIgnorePersistentState;
- (BOOL)hasFinishedRestoringWindows;
- (void)ignoreAnyPreexistingPersistentState;
- (BOOL)shouldUseOneWindowHeuristic;
- (void)resumeNormalWindowOrderingAndDrawing;
- (void)delayCGWindowOrderingIfNecessary;
- (BOOL)performingWindowOrdering;
- (BOOL)restoreAllPersistentStateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)performDockCommands:(id)arg1 withOldWindowIDToNewWindowID:(id)arg2;
- (void)changePersistentKeyPathObservationForPaths:(id)arg1 inObject:(id)arg2 to:(BOOL)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)addPendingKeyPath:(id)arg1 forObject:(id)arg2;
- (void)changeWindow:(unsigned int)arg1 toStatus:(int)arg2 withConditionalGeneration:(unsigned int)arg3;
- (void)setPublicProperties:(id)arg1 forWindowID:(unsigned int)arg2;
- (void)_setPublicProperties:(id)arg1 forWindowID:(unsigned int)arg2;
- (id)windowInfoForWindowID:(unsigned int)arg1 createIfNecessary:(BOOL)arg2;
- (void)refreshEncryptionKey:(BOOL)arg1;
- (void)clearCrashCountFileIfNecessary;
- (long long)crashBlameCounter;
- (unsigned int)modifyCrashBlameCounterBy:(int)arg1;
- (void)enableRestorableStateWriting;
- (void)disableRestorableStateWriting;
- (void)invalidateStateDirectoryAtLaunch;
- (id)stateDirectoryAtLaunch;
- (BOOL)hasPersistentStateToRestore;
- (void)addObjectInBackgroundForKeyedState:(id)arg1 underKey:(id)arg2 forIdentifier:(id)arg3 inWindow:(unsigned int)arg4;
- (void)acquireDirtyState;
- (void)flushPersistentStateAndClose;
- (void)flushPersistentStateAndClose:(BOOL)arg1 waitingUntilDone:(BOOL)arg2;
- (void)_finishPendingChangesImmediatelyWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fullyDirtyAndReopenPersistentState;
- (void)discardAllPersistentStateAndClose;
- (void)_cancelFlushTimer;
- (id)_flushScheduler;
- (void)flushForScheduler:(id)arg1;
- (void)flushAllChanges;
- (id)persistentStateDirectoryURL;
- (id)initWithBundleID:(id)arg1;
- (void)dealloc;
- (id)copyPersistentCarbonWindowDictionariesAtTimeOfAppLaunch;
- (void)deletePersistentWindow:(unsigned int)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2 forPersistentWindowID:(unsigned int)arg3;
- (unsigned int)createPersistentWindow;
- (void)destroyExternallyCreatedWindows:(id)arg1;
- (id)copyAcquiredExternallyCreatedWindows;
- (void)beginAcquiringExternallyCreatedWindows;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

