//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSResponder.h>

#import <AppKit/NSAccessibility-Protocol.h>
#import <AppKit/NSAccessibilityElement-Protocol.h>
#import <AppKit/NSAppearanceCustomization-Protocol.h>
#import <AppKit/_NSTransientUIElement-Protocol.h>

@class NSAppearance, NSArray, NSString, NSURL, NSView, NSViewController, NSWindow;
@protocol NSPopoverDelegate;

@interface NSPopover : NSResponder <_NSTransientUIElement, NSAppearanceCustomization, NSAccessibilityElement, NSAccessibility>
{
    id _bindingAdaptor;
    id _delegate;
    id _visualRepresentation;
    NSView *_positioningView;
    NSViewController *_contentViewController;
    NSWindow *_positioningWindow;
    NSAppearance *_appearance;
    long long _behavior;
    id _popoverPrivateData;
    unsigned long long _preferredEdge;
    struct CGSize _contentSize;
    struct CGRect _positioningRect;
    id _postCloseBlock;
    struct {
        unsigned int animates:1;
        unsigned int positioningRectIsBounds:1;
        unsigned int registeredAsTransient:1;
        unsigned int registeredAsSemitransient:1;
        unsigned int shown:1;
        unsigned int toolbarHidesAnchor:1;
        unsigned int closing:1;
        unsigned int registeredForGeometryInWindowDidChange:1;
        unsigned int registeredForEffectiveAppearanceDidChange:1;
        unsigned int keepTopStable:1;
        unsigned int implicitlyDetached:1;
        unsigned int hidesDetachedWindowOnDeactivate:1;
        unsigned int requiresCorrectContentAppearance:1;
        unsigned int reserved:19;
    } _flags;
}

@property(retain) NSWindow *positioningWindow; // @synthesize positioningWindow=_positioningWindow;
@property(retain) NSView *positioningView; // @synthesize positioningView=_positioningView;
@property __weak id accessibilityParent; // @dynamic accessibilityParent;
@property struct CGRect accessibilityFrame; // @dynamic accessibilityFrame;
- (void)_removeAllForbiddenRects;
- (void)_addForbiddenRectForBoundsOfView:(id)arg1;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)_dragWithEvent:(id)arg1;
- (void)_applicationDidBecomeActive_detachedWindow:(id)arg1;
- (void)_applicationDidResignActive_detachedWindow:(id)arg1;
- (void)setHidesDetachedWindowOnDeactivate:(BOOL)arg1;
- (BOOL)hidesDetachedWindowOnDeactivate;
- (void)_resetImplicitWindowDetach;
- (void)_finalizeImplicitWindowDetach;
@property(readonly, getter=isDetached) BOOL detached;
- (void)detach;
- (struct NSEdgeInsets)contentInset;
- (struct CGSize)anchorSize;
- (void)popoverDidClose:(id)arg1;
- (void)popoverWillClose:(id)arg1;
- (BOOL)popoverShouldClose:(id)arg1;
- (void)popoverDidShow:(id)arg1;
- (void)popoverWillShow:(id)arg1;
- (void)popoverDidDetach:(id)arg1;
- (id)detachableWindowForPopover:(id)arg1;
- (BOOL)popoverShouldDetach:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)cancel:(id)arg1;
- (void)performClose:(id)arg1;
- (void)close;
- (void)_resetClosingBlock;
- (void)_executeClosingBlock;
- (void)_queueClosingBlock:(CDUnknownBlockType)arg1;
- (void)_finishClosingAndShouldNotify:(BOOL)arg1;
- (long long)_closeReason;
- (void)_setCloseReason:(long long)arg1;
- (long long)_popoverWindowLevel;
- (void)_updatePopoverWindowLevels;
- (void)_popoverDidEnterFullscreen:(id)arg1;
- (void)_popoverDidExitFullscreen:(id)arg1;
- (void)_observeFullscreenChanges:(BOOL)arg1;
- (void)_completeShow;
- (void)_prepareToShowRelativeToRect:(struct CGRect)arg1 inView:(id)arg2 preferredEdge:(unsigned long long)arg3;
- (void)showRelativeToRect:(struct CGRect)arg1 ofView:(id)arg2 preferredEdge:(unsigned long long)arg3;
@property(readonly, copy) NSString *description;
- (BOOL)_validatePopoverWindowFirstResponder;
- (BOOL)_validatePopoverFirstResponder:(id)arg1;
- (void)_repositionRelativeToRect:(struct CGRect)arg1 ofView:(id)arg2 preferredEdge:(unsigned long long)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_setListenToEffectiveAppearanceDidChange:(BOOL)arg1;
- (void)positioningViewGeometryInWindowDidChange:(id)arg1;
- (void)_setListenToViewGeometryInWindowDidChange:(BOOL)arg1;
- (unsigned long long)_externalRectEdgeToInternalAnchorEdge:(unsigned long long)arg1 ofView:(id)arg2;
- (id)_positioningView;
- (void)_geometryInWindowDidChangeForView:(id)arg1;
- (BOOL)_shouldStillBeVisibleRelativeToView:(id)arg1;
- (id)_makePopoverWindowIfNeeded;
- (void)_updateAnchorPoint;
- (void)_updateAnchorPointForFrame:(struct CGRect)arg1 reshape:(BOOL)arg2;
- (struct CGPoint)_computeAnchorPointForFrame:(struct CGRect)arg1;
@property struct CGRect positioningRect;
@property(getter=isShown) BOOL shown;
- (void)_updateWindow:(id)arg1 withContentViewController:(id)arg2;
@property(retain) NSViewController *contentViewController;
- (void)_updateContentViewAndSizeFromViewController;
- (BOOL)_popoverWindow:(id)arg1 fromConstraintsSetWindowFrame:(struct CGRect)arg2;
@property struct CGSize contentSize;
- (void)_setContentView:(id)arg1 size:(struct CGSize)arg2 canAnimate:(BOOL)arg3;
- (void)setAnchorEdge:(unsigned long long)arg1;
- (unsigned long long)anchorEdge;
- (void)_setContentSize:(struct CGSize)arg1;
- (void)_setBindingAdaptor:(id)arg1;
- (id)_bindingAdaptor;
- (void)setPositioningOptions:(unsigned long long)arg1;
- (unsigned long long)positioningOptions;
@property BOOL animates;
@property long long behavior;
- (void)_updateWindowProperties;
- (id)_popoverFrame;
- (void)_setPopoverWindow:(id)arg1;
- (id)_popoverWindow;
- (BOOL)_shouldUseNonVibrantAppearanceForContentView:(id)arg1;
- (BOOL)_requiresCorrectContentAppearance;
- (void)_setRequiresCorrectContentAppearance:(BOOL)arg1;
- (void)_setLegacyAppearance:(long long)arg1;
- (long long)_legacyAppearance;
- (void)setCustomAppearance:(id)arg1;
- (id)customAppearance;
@property(readonly) NSAppearance *effectiveAppearance;
@property(retain) NSAppearance *appearance;
@property __weak id <NSPopoverDelegate> delegate;
- (id)_delegate;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_commonInit;
- (id)init;
- (void)setShouldHideAnchor:(BOOL)arg1;
- (BOOL)shouldHideAnchor;
- (void)recognizerDidDismissAnimation:(id)arg1;
- (void)recognizerDidCompleteAnimation:(id)arg1;
- (void)recognizerDidCancelAnimation:(id)arg1;
- (void)recognizerDidUpdateAnimation:(id)arg1;
- (void)recognizerWillBeginAnimation:(id)arg1;
- (void)_releaseDeepAnimation;
- (void)_completeDeepAnimation;
- (void)_cancelPredeepAnimation;
- (void)_doPredeepAnimationWithProgress:(double)arg1;
- (void)_beginPredeepAnimationRelativeToRect:(struct CGRect)arg1 ofView:(id)arg2 preferredEdge:(unsigned long long)arg3;
- (void)_beginPredeepAnimationAgainstPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (SEL)_reactiveAction;
- (struct CGRect)_currentFrameOnScreenWithContentSize:(struct CGSize)arg1 outAnchorEdge:(unsigned long long *)arg2;
- (void)_closeForToolbarPresentingOnWindow:(id)arg1;
- (void)_closeForSheetPresentingOnWindow:(id)arg1;
- (void)_closeForKeyDownEvent:(id)arg1;
- (void)_closeForNonDragOrResizeClickWithEvent:(id)arg1;
- (BOOL)_isAffectedByEventsInWindow:(id)arg1;
@property(readonly) long long _transientBehavior;
@property(setter=_setRegisteredTransientBehavior:) long long _registeredTransientBehavior;
- (id)accessibilitySectionsAttribute;
- (id)accessibilityAuditIssuesAttribute;
- (BOOL)_accessibilityShouldReportCancelAction;
- (BOOL)accessibilityIsIgnored;
- (BOOL)accessibilityAllowsOverriddenAttributesWhenIgnored;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;

// Remaining properties
@property struct CGPoint accessibilityActivationPoint; // @dynamic accessibilityActivationPoint;
@property(copy) NSArray *accessibilityAllowedValues; // @dynamic accessibilityAllowedValues;
@property(getter=isAccessibilityAlternateUIVisible) BOOL accessibilityAlternateUIVisible; // @dynamic accessibilityAlternateUIVisible;
@property(retain) id accessibilityApplicationFocusedUIElement; // @dynamic accessibilityApplicationFocusedUIElement;
@property(retain) id accessibilityCancelButton; // @dynamic accessibilityCancelButton;
@property(copy) NSArray *accessibilityChildren; // @dynamic accessibilityChildren;
@property(copy) NSArray *accessibilityChildrenInNavigationOrder; // @dynamic accessibilityChildrenInNavigationOrder;
@property(retain) id accessibilityClearButton; // @dynamic accessibilityClearButton;
@property(retain) id accessibilityCloseButton; // @dynamic accessibilityCloseButton;
@property long long accessibilityColumnCount; // @dynamic accessibilityColumnCount;
@property(copy) NSArray *accessibilityColumnHeaderUIElements; // @dynamic accessibilityColumnHeaderUIElements;
@property struct _NSRange accessibilityColumnIndexRange; // @dynamic accessibilityColumnIndexRange;
@property(copy) NSArray *accessibilityColumnTitles; // @dynamic accessibilityColumnTitles;
@property(copy) NSArray *accessibilityColumns; // @dynamic accessibilityColumns;
@property(copy) NSArray *accessibilityContents; // @dynamic accessibilityContents;
@property(retain) id accessibilityCriticalValue; // @dynamic accessibilityCriticalValue;
@property(copy) NSArray *accessibilityCustomActions; // @dynamic accessibilityCustomActions;
@property(copy) NSArray *accessibilityCustomRotors; // @dynamic accessibilityCustomRotors;
@property(retain) id accessibilityDecrementButton; // @dynamic accessibilityDecrementButton;
@property(retain) id accessibilityDefaultButton; // @dynamic accessibilityDefaultButton;
@property(getter=isAccessibilityDisclosed) BOOL accessibilityDisclosed; // @dynamic accessibilityDisclosed;
@property __weak id accessibilityDisclosedByRow; // @dynamic accessibilityDisclosedByRow;
@property(retain) id accessibilityDisclosedRows; // @dynamic accessibilityDisclosedRows;
@property long long accessibilityDisclosureLevel; // @dynamic accessibilityDisclosureLevel;
@property(copy) NSString *accessibilityDocument; // @dynamic accessibilityDocument;
@property(getter=isAccessibilityEdited) BOOL accessibilityEdited; // @dynamic accessibilityEdited;
@property(getter=isAccessibilityElement) BOOL accessibilityElement; // @dynamic accessibilityElement;
@property(getter=isAccessibilityEnabled) BOOL accessibilityEnabled; // @dynamic accessibilityEnabled;
@property(getter=isAccessibilityExpanded) BOOL accessibilityExpanded; // @dynamic accessibilityExpanded;
@property __weak id accessibilityExtrasMenuBar; // @dynamic accessibilityExtrasMenuBar;
@property(copy) NSString *accessibilityFilename; // @dynamic accessibilityFilename;
@property(getter=isAccessibilityFocused) BOOL accessibilityFocused; // @dynamic accessibilityFocused;
@property(retain) id accessibilityFocusedWindow; // @dynamic accessibilityFocusedWindow;
@property(getter=isAccessibilityFrontmost) BOOL accessibilityFrontmost; // @dynamic accessibilityFrontmost;
@property(retain) id accessibilityFullScreenButton; // @dynamic accessibilityFullScreenButton;
@property(retain) id accessibilityGrowArea; // @dynamic accessibilityGrowArea;
@property(copy) NSArray *accessibilityHandles; // @dynamic accessibilityHandles;
@property(retain) id accessibilityHeader; // @dynamic accessibilityHeader;
@property(copy) NSString *accessibilityHelp; // @dynamic accessibilityHelp;
@property(getter=isAccessibilityHidden) BOOL accessibilityHidden; // @dynamic accessibilityHidden;
@property(retain) id accessibilityHorizontalScrollBar; // @dynamic accessibilityHorizontalScrollBar;
@property(copy) NSString *accessibilityHorizontalUnitDescription; // @dynamic accessibilityHorizontalUnitDescription;
@property long long accessibilityHorizontalUnits; // @dynamic accessibilityHorizontalUnits;
@property(copy) NSString *accessibilityIdentifier; // @dynamic accessibilityIdentifier;
@property(retain) id accessibilityIncrementButton; // @dynamic accessibilityIncrementButton;
@property long long accessibilityIndex; // @dynamic accessibilityIndex;
@property long long accessibilityInsertionPointLineNumber; // @dynamic accessibilityInsertionPointLineNumber;
@property(copy) NSString *accessibilityLabel; // @dynamic accessibilityLabel;
@property(copy) NSArray *accessibilityLabelUIElements; // @dynamic accessibilityLabelUIElements;
@property float accessibilityLabelValue; // @dynamic accessibilityLabelValue;
@property(copy) NSArray *accessibilityLinkedUIElements; // @dynamic accessibilityLinkedUIElements;
@property(getter=isAccessibilityMain) BOOL accessibilityMain; // @dynamic accessibilityMain;
@property(retain) id accessibilityMainWindow; // @dynamic accessibilityMainWindow;
@property(retain) id accessibilityMarkerGroupUIElement; // @dynamic accessibilityMarkerGroupUIElement;
@property(copy) NSString *accessibilityMarkerTypeDescription; // @dynamic accessibilityMarkerTypeDescription;
@property(copy) NSArray *accessibilityMarkerUIElements; // @dynamic accessibilityMarkerUIElements;
@property(retain) id accessibilityMarkerValues; // @dynamic accessibilityMarkerValues;
@property(retain) id accessibilityMaxValue; // @dynamic accessibilityMaxValue;
@property __weak id accessibilityMenuBar; // @dynamic accessibilityMenuBar;
@property(retain) id accessibilityMinValue; // @dynamic accessibilityMinValue;
@property(retain) id accessibilityMinimizeButton; // @dynamic accessibilityMinimizeButton;
@property(getter=isAccessibilityMinimized) BOOL accessibilityMinimized; // @dynamic accessibilityMinimized;
@property(getter=isAccessibilityModal) BOOL accessibilityModal; // @dynamic accessibilityModal;
@property(copy) NSArray *accessibilityNextContents; // @dynamic accessibilityNextContents;
@property long long accessibilityNumberOfCharacters; // @dynamic accessibilityNumberOfCharacters;
@property(getter=isAccessibilityOrderedByRow) BOOL accessibilityOrderedByRow; // @dynamic accessibilityOrderedByRow;
@property long long accessibilityOrientation; // @dynamic accessibilityOrientation;
@property(retain) id accessibilityOverflowButton; // @dynamic accessibilityOverflowButton;
@property(copy) NSString *accessibilityPlaceholderValue; // @dynamic accessibilityPlaceholderValue;
@property(copy) NSArray *accessibilityPreviousContents; // @dynamic accessibilityPreviousContents;
@property(getter=isAccessibilityProtectedContent) BOOL accessibilityProtectedContent; // @dynamic accessibilityProtectedContent;
@property(retain) id accessibilityProxy; // @dynamic accessibilityProxy;
@property(getter=isAccessibilityRequired) BOOL accessibilityRequired; // @dynamic accessibilityRequired;
@property(copy) NSString *accessibilityRole; // @dynamic accessibilityRole;
@property(copy) NSString *accessibilityRoleDescription; // @dynamic accessibilityRoleDescription;
@property long long accessibilityRowCount; // @dynamic accessibilityRowCount;
@property(copy) NSArray *accessibilityRowHeaderUIElements; // @dynamic accessibilityRowHeaderUIElements;
@property struct _NSRange accessibilityRowIndexRange; // @dynamic accessibilityRowIndexRange;
@property(copy) NSArray *accessibilityRows; // @dynamic accessibilityRows;
@property long long accessibilityRulerMarkerType; // @dynamic accessibilityRulerMarkerType;
@property(retain) id accessibilitySearchButton; // @dynamic accessibilitySearchButton;
@property(retain) id accessibilitySearchMenu; // @dynamic accessibilitySearchMenu;
@property(getter=isAccessibilitySelected) BOOL accessibilitySelected; // @dynamic accessibilitySelected;
@property(copy) NSArray *accessibilitySelectedCells; // @dynamic accessibilitySelectedCells;
@property(copy) NSArray *accessibilitySelectedChildren; // @dynamic accessibilitySelectedChildren;
@property(copy) NSArray *accessibilitySelectedColumns; // @dynamic accessibilitySelectedColumns;
@property(copy) NSArray *accessibilitySelectedRows; // @dynamic accessibilitySelectedRows;
@property(copy) NSString *accessibilitySelectedText; // @dynamic accessibilitySelectedText;
@property struct _NSRange accessibilitySelectedTextRange; // @dynamic accessibilitySelectedTextRange;
@property(copy) NSArray *accessibilitySelectedTextRanges; // @dynamic accessibilitySelectedTextRanges;
@property(copy) NSArray *accessibilityServesAsTitleForUIElements; // @dynamic accessibilityServesAsTitleForUIElements;
@property struct _NSRange accessibilitySharedCharacterRange; // @dynamic accessibilitySharedCharacterRange;
@property(copy) NSArray *accessibilitySharedFocusElements; // @dynamic accessibilitySharedFocusElements;
@property(copy) NSArray *accessibilitySharedTextUIElements; // @dynamic accessibilitySharedTextUIElements;
@property(retain) id accessibilityShownMenu; // @dynamic accessibilityShownMenu;
@property long long accessibilitySortDirection; // @dynamic accessibilitySortDirection;
@property(copy) NSArray *accessibilitySplitters; // @dynamic accessibilitySplitters;
@property(copy) NSString *accessibilitySubrole; // @dynamic accessibilitySubrole;
@property(copy) NSArray *accessibilityTabs; // @dynamic accessibilityTabs;
@property(copy) NSString *accessibilityTitle; // @dynamic accessibilityTitle;
@property __weak id accessibilityTitleUIElement; // @dynamic accessibilityTitleUIElement;
@property(retain) id accessibilityToolbarButton; // @dynamic accessibilityToolbarButton;
@property __weak id accessibilityTopLevelUIElement; // @dynamic accessibilityTopLevelUIElement;
@property(copy) NSURL *accessibilityURL; // @dynamic accessibilityURL;
@property(copy) NSString *accessibilityUnitDescription; // @dynamic accessibilityUnitDescription;
@property long long accessibilityUnits; // @dynamic accessibilityUnits;
@property(retain) id accessibilityValue; // @dynamic accessibilityValue;
@property(copy) NSString *accessibilityValueDescription; // @dynamic accessibilityValueDescription;
@property(retain) id accessibilityVerticalScrollBar; // @dynamic accessibilityVerticalScrollBar;
@property(copy) NSString *accessibilityVerticalUnitDescription; // @dynamic accessibilityVerticalUnitDescription;
@property long long accessibilityVerticalUnits; // @dynamic accessibilityVerticalUnits;
@property(copy) NSArray *accessibilityVisibleCells; // @dynamic accessibilityVisibleCells;
@property struct _NSRange accessibilityVisibleCharacterRange; // @dynamic accessibilityVisibleCharacterRange;
@property(copy) NSArray *accessibilityVisibleChildren; // @dynamic accessibilityVisibleChildren;
@property(copy) NSArray *accessibilityVisibleColumns; // @dynamic accessibilityVisibleColumns;
@property(copy) NSArray *accessibilityVisibleRows; // @dynamic accessibilityVisibleRows;
@property(retain) id accessibilityWarningValue; // @dynamic accessibilityWarningValue;
@property __weak id accessibilityWindow; // @dynamic accessibilityWindow;
@property(copy) NSArray *accessibilityWindows; // @dynamic accessibilityWindows;
@property(retain) id accessibilityZoomButton; // @dynamic accessibilityZoomButton;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

