//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSResponder.h>

#import <AppKit/NSAccessibility-Protocol.h>
#import <AppKit/NSAccessibilityElement-Protocol.h>
#import <AppKit/NSAnimatablePropertyContainer-Protocol.h>
#import <AppKit/NSAppearanceCustomization-Protocol.h>
#import <AppKit/NSAppearanceCustomizationInternal-Protocol.h>
#import <AppKit/NSDraggingDestination-Protocol.h>
#import <AppKit/NSUserInterfaceItemIdentification-Protocol.h>

@class CALayer, CAProxyLayer, CIFilter, NSAppearance, NSArray, NSBezierPath, NSCGSWindowBackdrop, NSCandidateListTouchBarItem, NSColor, NSColorSpace, NSDictionary, NSFunctionRow, NSLayoutRect, NSMenuItem, NSMutableArray, NSMutableSet, NSPressureConfiguration, NSScrollView, NSShadow, NSString, NSSurface, NSTextInputContext, NSURL, NSViewController, NSWindow, _NSViewAuxiliary;
@protocol NSAppearanceCustomization;

@interface NSView : NSResponder <NSAppearanceCustomizationInternal, NSAnimatablePropertyContainer, NSUserInterfaceItemIdentification, NSDraggingDestination, NSAppearanceCustomization, NSAccessibilityElement, NSAccessibility>
{
    struct CGRect _frame;
    struct CGRect _bounds;
    NSView *_superview;
    NSArray *_subviews;
    NSWindow *_window;
    id _unused_was_gState;
    id _frameMatrix;
    CALayer *_layer;
    id _dragTypes;
    _NSViewAuxiliary *_viewAuxiliary;
    struct __VFlags {
        unsigned int aboutToResize:1;
        unsigned int isOpaque:1;
        unsigned int unused3:5;
        unsigned int hasNotMessedWithIsFlipped:1;
        unsigned int ignoreHitTest:1;
        unsigned int specialArchiving:1;
        unsigned int needsDisplayForBounds:1;
        unsigned int isFlipped:1;
        unsigned int removingWithoutInvalidation:1;
        unsigned int needsBoundsChangeNote:1;
        unsigned int boundsChangeNotesSuspended:1;
        unsigned int unused2:1;
        unsigned int needsFrameChangeNote:1;
        unsigned int frameChangeNotesSuspended:1;
        unsigned int canDrawSubviewsIntoLayer:1;
        unsigned int allowsVibrancy:2;
        unsigned int needsDisplay:1;
        unsigned int unused1:1;
        unsigned int autoresizeSubviews:1;
        unsigned int autosizing:6;
        unsigned int rotatedOrScaledFromBase:1;
        unsigned int rotatedFromBase:1;
    } _vFlags;
    struct __VFlags2 {
        unsigned int nextKeyViewRefCount:14;
        unsigned int previousKeyViewRefCount:14;
        unsigned int isVisibleRect:1;
        unsigned int hasToolTip:1;
        unsigned int cachedIsFlipped:1;
        unsigned int menuWasSet:1;
    } _vFlags2;
}

+ (BOOL)isCompatibleWithResponsiveScrolling;
+ (id)defaultMenu;
+ (Class)_dynamicToolTipManagerClass;
+ (id)_findFirstKeyViewInDirection:(unsigned long long)arg1 forKeyLoopGroupingView:(id)arg2;
+ (int)_debug_layoutFrameChangeCount;
+ (void)_debug_incrementLayoutFrameChangeCount;
+ (void)_debug_clearLayoutFrameChangeCount;
+ (BOOL)_debug_layoutFrameChangeFlag;
+ (void)_debug_setLayoutFrameChangeFlag:(BOOL)arg1;
+ (BOOL)_debug_shouldReportUnnecessaryLayoutCalls;
+ (id)focusView;
+ (id)defaultAnimationForKey:(id)arg1;
+ (void)_performWithoutAnimation:(CDUnknownBlockType)arg1;
+ (BOOL)automaticallyNotifiesObserversOfWantsLayer;
+ (unsigned long long)defaultFocusRingType;
+ (id)new;
+ (void)_antialiasThresholdChanged:(id)arg1;
+ (void)initialize;
+ (void)_setShowsAlignmentRects:(BOOL)arg1;
+ (void)_setShowsAllViews:(BOOL)arg1;
+ (void)_setShowsAllDrawing:(BOOL)arg1;
+ (id)_hiddenViewsTint;
+ (void)_setHiddenViewsTint:(id)arg1;
+ (BOOL)automaticallyNotifiesObserversOf_recommendedDrawableSize;
+ (id)keyPathsForValuesAffectingFunctionRow;
+ (BOOL)requiresConstraintBasedLayout;
+ (id)keyPathsForValuesAffectingAlignmentRectInsets;
+ (id)keyPathsForValuesInvalidatingDisplay;
+ (id)keyPathsForValuesInvalidatingLayout;
+ (id)keyPathsForValuesInvalidatingIntrinsicContentSize;
+ (id)keyPathsForValuesInvalidatingConstraints;
- (BOOL)_isFirstResponder;
- (id)_nearestAncestorOfClass:(Class)arg1;
@property __weak id accessibilityParent; // @dynamic accessibilityParent;
@property struct CGRect accessibilityFrame; // @dynamic accessibilityFrame;
- (id)colorSpace;
- (double)_backingScaleFactorForDrawing;
- (double)backingScaleFactor;
- (void)viewDidChangeBackingProperties:(id)arg1;
- (BOOL)_scrollRectToVisible:(const struct CGRect *)arg1 fromView:(id)arg2;
- (void)_scrollPoint:(const struct CGPoint *)arg1 fromView:(id)arg2;
- (BOOL)shouldBeArchived;
- (void)setShouldBeArchived:(BOOL)arg1;
- (struct CGRect)_renderedContentRect;
@property struct CGRect preparedContentRect;
- (void)prepareContentInRect:(struct CGRect)arg1;
- (void)_didEndScrolling;
- (BOOL)_isScrolling;
- (void)_willBeginScrolling;
- (void)_removeIdleTimer;
- (void)_installPrefetchIdleTimerIfNecessary;
- (BOOL)_doIdlePrefetch;
- (void)_recursiveSendViewDidChangeAppearance:(id)arg1;
- (void)_viewDidChangeAppearance:(id)arg1;
- (void)effectiveAppearanceDidChange;
- (void)viewDidChangeEffectiveAppearance;
@property(readonly) NSAppearance *effectiveAppearance;
- (void)_notePreferredAppearanceDidChange;
@property(readonly) NSAppearance *_preferredAppearance;
@property(setter=_setUsesNonVibrantAppearance:) BOOL _usesNonVibrantAppearance;
- (id)_kitAppearance;
@property(retain) NSAppearance *appearance;
- (void)_internalSetAppearance:(id)arg1;
- (struct CGRect)rectForSmartMagnificationAtPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2;
- (void)setWantsBestResolutionOpenGLSurface:(BOOL)arg1;
- (BOOL)wantsBestResolutionOpenGLSurface;
- (void)_updateOpenGLViewport;
- (void)viewDidChangeBackingProperties;
@property(copy) NSString *identifier;
- (void)setUserInterfaceItemIdentifier:(id)arg1;
- (id)userInterfaceItemIdentifier;
- (void)prepareForReuse;
- (void)_clearHasBeenCommittedIfNeededOrForced:(BOOL)arg1;
- (id)makeBackingLayer;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (void)updateLayer;
@property(readonly) BOOL wantsUpdateLayer;
- (Class)_classToCheckForWantsUpdateLayer;
@property BOOL canDrawSubviewsIntoLayer;
- (void)setIgnoreHitTest:(BOOL)arg1;
- (BOOL)ignoreHitTest;
- (CDUnknownBlockType)updateLayerHandler;
- (void)setUpdateLayerHandler:(CDUnknownBlockType)arg1;
@property(retain) CALayer *layer;
- (void)_didRemoveLayer;
- (id)buildLayerTreeWithOwnLayerRequirement:(BOOL)arg1 someAncestorWantsLayer:(BOOL)arg2;
- (void)buildLayerTree;
@property(readonly) NSTextInputContext *inputContext;
- (void)_autoscrollForDraggingInfo:(id)arg1 timeDelta:(double)arg2;
- (BOOL)_shouldAutoscrollForDraggingInfo:(id)arg1;
- (void)_windowChangedKeyState;
- (void)helpRequested:(id)arg1;
- (id)_contextMenuTargetForEvent:(id)arg1;
- (BOOL)_showMenuForEvent:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)willSendMenuNeedsUpdate:(id)arg1 withEvent:(id)arg2;
- (void)didCloseMenu:(id)arg1 withEvent:(id)arg2;
- (void)willOpenMenu:(id)arg1 withEvent:(id)arg2;
- (void)prepareForMenu:(id)arg1 withEvent:(id)arg2;
- (void)prepareMenu:(id)arg1 withEvent:(id)arg2;
- (id)menuForEvent:(id)arg1;
- (id)menu;
- (void)setMenu:(id)arg1;
- (void)interpretKeyEvents:(id)arg1;
@property long long userInterfaceLayoutDirection;
- (BOOL)_isUserInterfaceLayoutDirectionExplicitlySet;
- (void)_finishedMakingConnections;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)removeAllToolTips;
- (void)removeToolTip:(long long)arg1;
- (long long)addToolTipRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3;
@property(copy) NSString *toolTip;
- (BOOL)_hasToolTip;
- (void)_setHasToolTip:(BOOL)arg1;
- (BOOL)view:(id)arg1 customToolTip:(long long)arg2 fadeOutAllowedForToolTipWithDisplayInfo:(id)arg3;
- (struct CGRect)view:(id)arg1 customToolTip:(long long)arg2 frameForToolTipWithDisplayInfo:(id)arg3;
- (void)_drawExpansionToolTipInView:(id)arg1 usingCell:(id)arg2;
- (void)view:(id)arg1 customToolTip:(long long)arg2 drawInView:(id)arg3 displayInfo:(id)arg4;
- (struct CGRect)_toolTipRectForCell:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)_addRevealoverIfNecessaryForCell:(id)arg1 cellRect:(struct CGRect)arg2;
- (long long)_addToolTipRect:(struct CGRect)arg1 displayDelegate:(id)arg2 displayInfo:(id)arg3;
- (id)_revealoverInfoForCell:(id)arg1 cellRect:(struct CGRect)arg2;
- (BOOL)_canShowExpansionTooltips;
- (void)_toolTipManagerWillRecomputeToolTipsByRemoving:(BOOL)arg1 adding:(BOOL)arg2;
- (void)_invalidateAllRevealovers;
- (void)_removeAllRevealovers;
- (void)_recursiveWindowDidEnableToolTipCreationAndDisplay;
- (BOOL)_shouldComputeRevealovers;
- (BOOL)_wantsRevealovers;
- (void)_setWantsRevealovers:(BOOL)arg1;
- (void)_setRevealoversDirty:(BOOL)arg1;
- (void)scrollWheel:(id)arg1;
- (void)_delayedEnableRevealoverComputationAfterScrollWheel:(id)arg1;
- (id)_dynamicToolTipManager;
- (BOOL)canBecomeKeyView;
- (id)previousValidKeyView;
- (id)nextValidKeyView;
- (void)_omitFalsePositiveKeyViewCandidates:(id)arg1;
- (void)_recursiveGatherAllKeyViewCandidatesInArray:(id)arg1;
- (BOOL)_isKeyLoopGroup;
- (void)_recursiveBreakKeyViewLoop;
- (void)_removeFromKeyViewLoop;
- (void)_removePreviousPointersToMe;
- (void)_removeNextPointersToMe;
- (id)previousKeyView;
- (id)nextKeyView;
- (void)setNextKeyView:(id)arg1;
- (void)_primitiveSetNextKeyView:(id)arg1;
- (void)_primitiveSetPreviousKeyView:(id)arg1;
- (BOOL)performMnemonic:(id)arg1;
- (BOOL)_isAncestorOf:(id)arg1;
- (BOOL)_isAncestorOfViewIdenticalTo:(void *)arg1;
- (void)_setIgnoreForKeyViewLoop:(BOOL)arg1;
- (BOOL)_ignoreForKeyViewLoop;
- (void)_concludeDefaultKeyLoopComputation;
- (void)_prepareForDefaultKeyLoopComputation;
- (id)_findLastViewInKeyViewLoop;
- (id)_findLastViewInKeyViewLoopStartingAtView:(id)arg1;
- (id)_editingFirstResponderIfIsASubview;
- (void)_ensureSubviewNextKeyViewsAreSubviews;
- (void)_recursiveEnsureSubviewNextKeyViewsAreSubviewsOf:(id)arg1;
- (void)_setDefaultKeyViewLoop;
- (id)_recursiveSetDefaultKeyViewLoop;
- (void)_primitiveSetDefaultNextKeyView:(id)arg1;
- (long long)compareGeometry:(id)arg1;
@property BOOL postsBoundsChangedNotifications;
- (void)_postBoundsChangeNotification;
@property(readonly) NSScrollView *enclosingScrollView;
- (BOOL)shouldDrawColor;
- (void)updateTrackingAreas;
@property(readonly, copy) NSArray *trackingAreas;
- (void)removeTrackingArea:(id)arg1;
- (void)addTrackingArea:(id)arg1;
- (void)removeTrackingRect:(long long)arg1;
- (void)_removeTrackingRectTag:(long long)arg1;
- (long long)addTrackingRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3 assumeInside:(BOOL)arg4;
- (id)_resetCursorRects;
- (void)resetCursorRects;
- (void)cursorUpdate:(id)arg1;
- (void)discardCursorRects;
- (void)removeCursorRect:(struct CGRect)arg1 cursor:(id)arg2;
- (void)addCursorRect:(struct CGRect)arg1 cursor:(id)arg2;
- (BOOL)_drawView:(id)arg1;
- (void)_updateDrawDelegateForAlphaValue;
- (id)_drawDelegate;
- (void)_setDrawDelegate:(id)arg1;
- (BOOL)_shouldBeTreatedAsInkEventInInactiveWindow:(id)arg1;
- (BOOL)shouldBeTreatedAsInkEvent:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
@property(readonly) BOOL needsPanelToBecomeKey;
- (BOOL)_performKeyEquivalent:(id)arg1 conditionally:(BOOL)arg2;
- (BOOL)performKeyEquivalent:(id)arg1;
- (id)_startingWindowForSendAction:(SEL)arg1;
- (id)_recursiveFindDefaultButtonCell;
@property(readonly) long long tag;
- (id)viewWithTag:(long long)arg1;
- (BOOL)mouse:(struct CGPoint)arg1 inRect:(struct CGRect)arg2;
- (id)_hitTestToBlockWindowResizing:(struct CGPoint)arg1 forResizeDirection:(long long)arg2;
- (id)hitTest:(struct CGPoint)arg1;
- (BOOL)worksWhenModal;
- (id)_nextResponderForEvent:(id)arg1;
- (void)setNextResponder:(id)arg1;
- (void)translateRectsNeedingDisplayInRect:(struct CGRect)arg1 by:(struct CGSize)arg2;
- (void)scrollRect:(struct CGRect)arg1 by:(struct CGSize)arg2;
- (void)invalidate:(struct CGRect)arg1;
- (struct CGRect)adjustScroll:(struct CGRect)arg1;
- (BOOL)autoscroll:(id)arg1;
- (BOOL)scrollRectToVisible:(struct CGRect)arg1;
- (BOOL)scrollRectToVisible:(const struct CGRect *)arg1 fromView:(id)arg2;
- (void)scrollPoint:(struct CGPoint)arg1;
- (void)scrollPoint:(const struct CGPoint *)arg1 fromView:(id)arg2;
- (id)imageInRect:(struct CGRect)arg1;
- (void)cacheDisplayInRect:(struct CGRect)arg1 toBitmapImageRep:(id)arg2 includeSubviews:(BOOL)arg3;
- (void)cacheDisplayInRect:(struct CGRect)arg1 toBitmapImageRep:(id)arg2;
- (void)_betterCacheDisplayInRect:(struct CGRect)arg1 toBitmapImageRep:(id)arg2;
- (id)bitmapImageRepForCachingDisplayInRect:(struct CGRect)arg1;
- (id)_bitmapImageRepForCachingDisplayInRect:(struct CGRect)arg1 colorSpace:(id)arg2;
- (id)_bitmapImageRepForCachingDisplayInRect:(struct CGRect)arg1 toRect:(struct CGRect)arg2 colorSpace:(id)arg3;
@property(readonly) BOOL wantsDefaultClipping;
- (BOOL)needsToDrawRect:(struct CGRect)arg1;
- (void)getRectsBeingDrawn:(const struct CGRect **)arg1 count:(long long *)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewWillDraw;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(BOOL)arg1;
- (BOOL)translatesAutoresizingMaskIntoConstraints;
- (void)setUsesConstraintsInsteadOfAutoresizing:(BOOL)arg1;
- (BOOL)usesConstraintsInsteadOfAutoresizing;
- (void)displayRectIgnoringOpacity:(struct CGRect)arg1 inContext:(id)arg2;
- (void)_buildLayerTreeFromRoot;
- (BOOL)_useCARenderInContext;
- (void)displayRectIgnoringOpacity:(struct CGRect)arg1;
- (void)displayIfNeededInRectIgnoringOpacity:(struct CGRect)arg1;
- (void)displayIgnoringOpacity;
- (void)displayIfNeededIgnoringOpacity;
- (void)displayRect:(struct CGRect)arg1;
- (void)displayIfNeededInRect:(struct CGRect)arg1;
- (void)display;
- (void)displayIfNeeded;
@property BOOL needsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)_setAncestorLayerNeedsDisplayInRect:(struct CGRect)arg1;
- (BOOL)_shouldDirtyTheWindowOnLayerInvalidation;
- (void)_legacySetNeedsDisplayInRect:(struct CGRect)arg1;
- (id)_regionInvalidatedDuringDisplay;
- (void)_setRegionInvalidatedDuringDisplay:(id)arg1;
- (void)_makeDirtyRegionIvar;
- (id)_dirtyRegionIvar;
- (struct CGRect)_alignmentBounds;
- (struct CGRect)_alignmentFrame;
- (struct CGRect)_boundsForAlignmentRect:(struct CGRect)arg1;
- (struct CGRect)_alignmentRectForBounds:(struct CGRect)arg1;
- (struct CGRect)frameForAlignmentRect:(struct CGRect)arg1;
- (struct CGRect)alignmentRectForFrame:(struct CGRect)arg1;
- (struct NSEdgeInsets)alignmentRectInsets;
- (double)lastBaselineOffsetFromBottom;
- (double)firstBaselineOffsetFromTop;
- (double)baselineOffsetFromBottom;
- (void)_setLayoutIsClean:(BOOL)arg1;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)_informContainerThatSubviewsNeedLayout;
- (BOOL)needsLayout;
- (void)_layoutSubtreeIfNeededAndAllowTemporaryEngine:(BOOL)arg1;
- (BOOL)_updateConstraintsForLayoutCheckingDirtyBits:(BOOL)arg1 creatingEngine:(BOOL)arg2;
- (void)_layoutSubtreeIfNeededNoEngineCreation;
- (void)layoutSubtreeIfNeeded;
- (void)_logViewsThatNeedLayoutOrUpdateConstraints;
- (void)_collectDescendantsNeedingLayout:(id)arg1;
- (void)_collectDescendantsNeedingUpdateConstraints:(id)arg1;
- (void)_layoutSubtreeWithOldSize:(struct CGSize)arg1;
- (void)_doLayout;
- (BOOL)_layoutDescendsToSubviewsOnAllFrameSizeChanges;
- (void)_updateLayoutDependentMetricsIfNeeded;
- (void)_layoutAtSubtreeLevelIfNeeded;
- (void)_layoutAtWindowLevelIfNeeded;
- (void)_requestExtraUpdateConstraints;
- (void)setNeedsUpdateConstraints:(BOOL)arg1;
- (void)_informContainerThatSubviewsNeedUpdateConstraints;
- (void)_updateConstraintsFinished;
- (id)_collectedViewsWaitingForConstraintsFinished;
- (void)_requestUpdateConstraintsFinishedForView:(id)arg1;
- (BOOL)needsUpdateConstraints;
- (void)updateConstraintsForSubtreeIfNeeded;
- (void)_updateConstraintsForSubtreeIfNeededCollectingViewsWithInvalidBaselines:(id *)arg1;
- (void)updateConstraints;
- (struct CGSRegionObject *)_regionForOpaqueDescendants:(struct CGRect)arg1 forMove:(BOOL)arg2 forUnderTitlebar:(BOOL)arg3;
- (struct CGSRegionObject *)_regionForOpaqueDescendants:(struct CGRect)arg1 forMove:(BOOL)arg2;
- (BOOL)_shouldDetermineOpaqueRegionForMoves;
- (void)setGesturesEnabled:(BOOL)arg1;
- (BOOL)gesturesEnabled;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)removeAllGestureRecognizers;
- (void)removeGestureRecognizer:(id)arg1;
- (void)addGestureRecognizer:(id)arg1;
- (void)setGestureRecognizers:(id)arg1;
- (id)gestureRecognizers;
- (id)_gestureRecognizers;
@property BOOL wantsRestingTouches;
- (void)setAllowedTouchTypes:(unsigned long long)arg1;
- (unsigned long long)allowedTouchTypes;
@property BOOL acceptsTouchEvents;
@property(readonly) BOOL mouseDownCanMoveWindow;
- (void)_propagateDirtyRectsToOpaqueAncestors;
- (void)_recursiveTickleNeedsDisplay;
- (void)_oldDisplayRectIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3;
- (void)_displayRectIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3;
- (void)_sendSurfaceSyncNotificationAndFlushSurfacesWithRegionToDisplay:(id)arg1;
- (void)_syncAndDisplaySurfaceIfNecessary:(id)arg1;
- (void)drawOverlayRect:(struct CGRect)arg1;
- (struct CGRect)overlayBounds;
- (void)_recursiveDisplayRectIfNeededIgnoringOpacity:(struct CGRect)arg1 isVisibleRect:(BOOL)arg2 rectIsVisibleRectForView:(id)arg3 topView:(BOOL)arg4;
- (void)_dirtyAutomaticInclusiveLayersForRectsBeingDrawn;
- (void)_drawOverlayRectSet:(id)arg1;
- (void)_propagateDownNeedsDisplayInRect:(struct CGRect)arg1;
- (void)_recursiveDisplayAllDirtyWithLockFocus:(BOOL)arg1 visRect:(struct CGRect)arg2;
- (BOOL)_reallyCanDrawConcurrently;
- (void)_dirtyAutomaticInclusiveLayersInRect:(struct CGRect)arg1;
- (void)_recurseSublayersLookingForViewsWithDirtyRect:(struct CGRect)arg1;
- (void)_recursiveMarkInclusiveLayerDirtyInRect:(struct CGRect)arg1;
- (void)_setHasAutoSetWantsLayer:(BOOL)arg1 inclusive:(BOOL)arg2;
- (void)_didChangeAutoSetWantsLayer:(BOOL)arg1;
- (BOOL)_hasAutoSetWantsLayer;
- (BOOL)_displayingAllDirty;
- (struct CGRect)_dirtyRect;
- (void)_setDirtyRectIvar:(struct CGRect)arg1;
- (struct CGRect)_dirtyRectIvar;
- (void)_drawRect:(struct CGRect)arg1 clip:(BOOL)arg2;
- (BOOL)_drawRectIfEmptyWhenSubviewsCoverDirtyRect:(struct CGRect)arg1;
- (BOOL)_drawRectIfEmpty;
- (id)_getNextResizeEventInvalidatingLiveResizeCacheIfNecessary:(id)arg1;
- (id)_getNextResizeEventFromMask:(unsigned long long)arg1 invalidatingLiveResizeCacheIfNecessary:(id)arg2;
- (void)_endLiveResize;
- (void)_startLiveResize;
- (void)_startLiveResizeCacheOK:(BOOL)arg1;
- (void)_endLiveResizeAsTopLevel;
- (void)_startLiveResizeAsTopLevel;
- (void)_setLiveResize:(BOOL)arg1;
- (BOOL)_inLiveResize;
@property(readonly) BOOL inLiveResize;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (struct CGRect)_interactiveBounds;
- (struct CGRect)_visibleRectInWindowDisregardingHiddenViews;
- (struct CGRect)_visibleRectIgnoringViewsAbove:(id)arg1;
@property(readonly) struct CGRect visibleRect;
- (void)_invalidateFocus;
- (id)_invalidateGStatesForTree;
- (void)unlockFocus;
- (BOOL)lockFocusIfCanDrawInContext:(id)arg1;
- (BOOL)lockFocusIfCanDraw;
- (id)_contextForLockFocus:(BOOL)arg1;
- (void)lockFocus;
- (BOOL)_focusFromView:(id)arg1 withContext:(id)arg2;
- (id)_gatherFocusStateInto:(id)arg1 upTo:(id)arg2 withContext:(id)arg3;
- (id)_focusInto:(id)arg1 withClip:(BOOL)arg2;
- (void)renewGState;
- (void)setUpGState;
- (oneway void)releaseGState;
- (void)allocateGState;
- (long long)gState;
@property(readonly) BOOL canDraw;
@property BOOL canDrawConcurrently;
- (struct CGRect)convertRectFromBase:(struct CGRect)arg1;
- (struct CGRect)convertRectToBase:(struct CGRect)arg1;
- (struct CGSize)convertSizeFromBase:(struct CGSize)arg1;
- (struct CGSize)convertSizeToBase:(struct CGSize)arg1;
- (struct CGPoint)convertPointFromBase:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToBase:(struct CGPoint)arg1;
- (double)_baseScaleFactor;
- (struct CGRect)convertRectFromLayer:(struct CGRect)arg1;
- (struct CGRect)convertRectToLayer:(struct CGRect)arg1;
- (struct CGSize)convertSizeFromLayer:(struct CGSize)arg1;
- (struct CGSize)convertSizeToLayer:(struct CGSize)arg1;
- (struct CGPoint)convertPointFromLayer:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToLayer:(struct CGPoint)arg1;
- (struct CGRect)_convertRectFromIntegralizationSpace:(struct CGRect)arg1;
- (struct CGRect)_convertRectToIntegralizationSpace:(struct CGRect)arg1;
- (struct CGSize)_convertSizeFromIntegralizationSpace:(struct CGSize)arg1;
- (struct CGSize)_convertSizeToIntegralizationSpace:(struct CGSize)arg1;
- (struct CGPoint)_convertPointFromIntegralizationSpace:(struct CGPoint)arg1;
- (struct CGPoint)_convertPointToIntegralizationSpace:(struct CGPoint)arg1;
- (struct CGRect)convertRectFromBacking:(struct CGRect)arg1;
- (struct CGRect)convertRectToBacking:(struct CGRect)arg1;
- (struct CGSize)convertSizeFromBacking:(struct CGSize)arg1;
- (struct CGSize)convertSizeToBacking:(struct CGSize)arg1;
- (struct CGPoint)convertPointFromBacking:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToBacking:(struct CGPoint)arg1;
- (struct CGRect)_primitiveConvertRectFromBacking:(struct CGRect)arg1 useIntegralizationSpace:(BOOL)arg2;
- (struct CGRect)_primitiveConvertRectToBacking:(struct CGRect)arg1 useIntegralizationSpace:(BOOL)arg2;
- (struct CGSize)_primitiveConvertSizeFromBacking:(struct CGSize)arg1 useIntegralizationSpace:(BOOL)arg2;
- (struct CGSize)_primitiveConvertSizeToBacking:(struct CGSize)arg1 useIntegralizationSpace:(BOOL)arg2;
- (struct CGPoint)_primitiveConvertPointFromBacking:(struct CGPoint)arg1 useIntegralizationSpace:(BOOL)arg2;
- (struct CGPoint)_primitiveConvertPointToBacking:(struct CGPoint)arg1 useIntegralizationSpace:(BOOL)arg2;
- (struct CGAffineTransform)_backingTransform;
- (struct CGAffineTransform)_transformToBackingUsingIntegralizationSpace:(BOOL)arg1;
- (BOOL)_effectiveShouldUsePointIntegralizationForLayout;
- (void)_nsib_setUsesPointIntegralizationForLayout:(BOOL)arg1;
- (BOOL)_nsib_usesPointIntegralizationForLayout;
- (struct CGAffineTransform)_transformFromView:(id)arg1;
- (struct CGAffineTransform)_transformToView:(id)arg1;
- (struct CGRect)_effectiveLayerBoundsForTransforms;
- (struct CGRect)_integralizationSpaceAlignedRect:(struct CGRect)arg1 options:(unsigned long long)arg2;
- (struct CGRect)backingAlignedRect:(struct CGRect)arg1 options:(unsigned long long)arg2;
- (struct CGRect)_primitiveBackingAlignedRect:(struct CGRect)arg1 options:(unsigned long long)arg2 useIntegralizationSpace:(BOOL)arg3;
- (BOOL)_isPixelAlignedInWindow;
- (id)_crackSize:(struct CGSize *)arg1;
- (id)_crackPoint:(struct CGPoint *)arg1;
- (id)_crackRect:(struct CGRect *)arg1;
- (struct CGRect)centerScanRect:(struct CGRect)arg1;
- (struct CGRect)_convertRect:(struct CGRect)arg1 toAncestor:(id)arg2;
- (struct CGRect)_convertRect:(struct CGRect)arg1 fromAncestor:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toView:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromView:(id)arg2;
- (struct CGSize)convertSize:(struct CGSize)arg1 toView:(id)arg2;
- (struct CGSize)convertSize:(struct CGSize)arg1 fromView:(id)arg2;
- (struct CGPoint)_convertPoint:(struct CGPoint)arg1 toAncestor:(id)arg2;
- (struct CGPoint)_convertPoint:(struct CGPoint)arg1 fromAncestor:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toView:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(id)arg2;
- (struct CGRect)_convertRectToSuperview:(struct CGRect)arg1;
- (struct CGRect)_convertRectFromSuperview:(struct CGRect)arg1 test:(BOOL)arg2;
- (struct CGPoint)_convertPointToSuperview:(struct CGPoint)arg1;
- (BOOL)_convertPointFromSuperview:(struct CGPoint *)arg1 test:(BOOL)arg2;
- (void)_computeBounds;
- (id)_makeAndStoreDrawMatrix;
- (id)_getDrawMatrix;
@property(copy) NSShadow *shadow;
@property BOOL layerUsesCoreImageFilters;
@property(copy) NSArray *contentFilters;
- (unsigned long long)compositingOperation;
- (void)setCompositingOperation:(unsigned long long)arg1;
@property(retain) CIFilter *compositingFilter;
@property(copy) NSArray *backgroundFilters;
@property double alphaValue;
- (void)setOpaque:(BOOL)arg1;
@property(readonly, getter=isOpaque) BOOL opaque;
@property(readonly, getter=isRotatedOrScaledFromBase) BOOL rotatedOrScaledFromBase;
@property(readonly, getter=isRotatedFromBase) BOOL rotatedFromBase;
- (void)_setRotatedOrScaledFromBase:(BOOL)arg1;
- (void)_setRotatedFromBase:(BOOL)arg1;
- (void)setFlipped:(BOOL)arg1;
@property(readonly, getter=isFlipped) BOOL flipped;
@property double boundsRotation;
@property struct CGRect bounds;
- (void)rotateByAngle:(double)arg1;
- (void)scaleUnitSquareToSize:(struct CGSize)arg1;
- (void)translateOriginToPoint:(struct CGPoint)arg1;
- (void)setBoundsSize:(struct CGSize)arg1;
- (void)setBoundsOrigin:(struct CGPoint)arg1;
- (struct CGSize)boundsSize;
- (struct CGPoint)boundsOrigin;
@property double frameRotation;
- (void)_didMagnify;
- (void)_didEndMagnifying;
- (BOOL)_isMagnifying;
- (void)_willBeginMagnifying;
- (void)_scrollViewDidScrollBounds;
- (BOOL)_pullInExtraTilesForOverdraw;
- (void)_updateSuggestedContentRectForVisibleRectChange;
- (void)_updateSuggestedContentRect;
- (void)_updateSuggestedContentRectToValue:(struct CGRect)arg1;
- (void)_prepareContentInRectIfNeeded:(struct CGRect)arg1;
- (void)_invalidatePreparedContentRect;
- (void)_performWorkOnTilesFromRect:(struct CGRect)arg1 renderedContentRect:(struct CGRect)arg2 maximumRect:(struct CGRect)arg3 scrollVelocity:(struct CGPoint)arg4 handler:(CDUnknownBlockType)arg5;
- (struct CGRect)_expandAndConstrainRect:(struct CGRect)arg1 byAmount:(struct CGSize)arg2;
- (BOOL)_wantsToPrefetchContent;
- (BOOL)_wantsPrepareContentRect;
- (struct CGPoint)_currentScrollVelocity;
- (struct CGSize)_minimumFrameSize;
- (struct CGSize)frameSize;
- (struct CGPoint)frameOrigin;
@property struct CGRect frame;
@property double frameCenterRotation;
- (void)setFrameTransform:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)frameTransform;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)_resetThePreparedContentRectToTheVisibleRect;
- (void)_resetThePreparedContentRectKeepingAsMuchOverdrawAsPossible;
- (BOOL)_needsLayoutForAnimation;
- (BOOL)_hasDrawMatrix;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)getRectsExposedDuringLiveResize:(struct CGRect [4])arg1 count:(long long *)arg2;
@property(readonly) struct CGRect rectPreservedDuringLiveResize;
@property(readonly) BOOL preservesContentDuringLiveResize;
- (BOOL)_canCopyOnScroll;
@property unsigned long long autoresizingMask;
@property BOOL autoresizesSubviews;
- (void)_autoSizeView:(BOOL)arg1:(unsigned long long)arg2:(const struct CGRect *)arg3:(const struct CGRect *)arg4:(struct CGRect *)arg5;
- (void)resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)enableLayoutFlushing;
- (void)disableLayoutFlushing;
- (void)_verifyConstraintsForCurrentFrame;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)layout;
- (struct CGRect)nsis_rawAlignmentRect;
- (struct CGRect)nsis_unroundedFrame;
- (struct CGRect)nsis_frame;
- (struct CGRect)_layoutFrame;
- (void)_maybeCheckForAmbiguityForItem:(id)arg1;
- (struct CGRect)nsis_frameInEngine:(id)arg1 forLayoutGuide:(id)arg2 withRounding:(BOOL)arg3;
- (BOOL)_allowRoundingToChangeSize;
@property BOOL postsFrameChangedNotifications;
- (void)_postFrameChangeNotification;
- (id)_bindingAdaptor;
- (void)_setBindingAdaptor:(id)arg1;
- (id)_subviews;
- (void)_removeSubview:(id)arg1;
- (void)_addSubview:(id)arg1;
- (void)_setSuperview:(id)arg1;
- (void)_rootLayerBackWindowIfNeeded;
- (void)_insertMissingSubviewLayers;
- (void)_removeLayerFromSuperlayer;
- (void)replaceSubview:(id)arg1 with:(id)arg2;
- (void)replaceSubview:(id)arg1 with:(id)arg2 options:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_doSlideAnimation:(unsigned long long)arg1 fromView:(id)arg2 toView:(id)arg3;
- (void)_setupSlideAnimation:(unsigned long long)arg1 fromView:(id)arg2 toView:(id)arg3;
- (void)_doCrossFadeFromView:(id)arg1 toView:(id)arg2;
- (void)_setupCrossFadeFromView:(id)arg1 toView:(id)arg2;
- (void)_replaceSubview:(id)arg1 with:(id)arg2 rememberAndResetEditingFirstResponder:(BOOL)arg3 abortEditingIfNecessary:(BOOL)arg4;
- (int)_effectiveSemanticContext;
- (void)_setSemanticContext:(int)arg1;
- (int)_semanticContext;
- (void)_recursiveUpdateSemanticContextExplicitSomewhereInChain:(BOOL)arg1;
- (BOOL)_semanticContextExplicitSomewhereInChain;
- (void)_clearRememberedEditingFirstResponder;
- (void)_makeRememberedOrNewEditingSubviewBecomeFirstResponder;
- (id)_validRememberedEditingFirstResponder;
- (void)_markRememberedEditingFirstResponderIfIsASubview;
- (void)removeFromSuperviewWithoutNeedingDisplay;
- (void)removeFromSuperview;
- (void)_endEditingIfFirstResponderIsASubview;
- (void)_abortEditingIfFirstResponderIsASubview;
- (id)animationForKey:(id)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
@property(copy) NSDictionary *animations;
- (id)animator;
- (Class)_animatorClass;
- (void)_updateLayerBackedness;
@property BOOL wantsLayer;
@property long long layerContentsPlacement;
@property long long layerContentsRedrawPolicy;
- (BOOL)_hasAutoCanDrawSubviewsIntoLayer;
- (BOOL)_hasCanDrawSubviewsIntoLayerAncestor;
- (BOOL)_hasCanDrawSubviewsIntoLayerOrAncestor;
@property(readonly, getter=isHiddenOrHasHiddenAncestor) BOOL hiddenOrHasHiddenAncestor;
@property(getter=isHidden) BOOL hidden;
- (void)_setHidden:(BOOL)arg1;
- (void)viewDidUnhide;
- (void)viewDidHide;
- (void)_recursiveLostHiddenAncestor;
- (void)_recursiveViewDidDisappearBecauseHidden;
- (void)_recursiveViewWillDisappearBecauseHidden;
- (void)_recursiveViewDidAppearBecauseUnhidden;
- (void)_recursiveViewWillAppearBecauseUnhidden;
- (void)_recursiveOrderFrontSurfacesForNonHiddenViews;
- (void)_orderFrontSurfacesIfNotHidden;
- (void)_enableTrackingRectsIfNotHidden;
- (void)_recursiveGainedHiddenAncestor;
- (void)_disableTrackingRectsIfHidden;
- (void)_orderOutTheSurfaceIfHidden;
- (void)_recursiveGainedHiddenAncestorDuringUnarchiving;
- (void)_setBackgroundStyleForSubtree:(long long)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)sortSubviewsUsingFunction:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2;
@property(copy) NSArray *subviews;
- (void)addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (void)_copySubviewsArray;
- (void)addSubview:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)_updateLayerContentsGravityFromView;
- (void)_updateLayerCornerRadiusFromView;
- (void)_updateLayerBackgroundColorFromView;
- (void)_updateLayerMasksToBoundsFromView;
- (void)_setAutomaticFocusRingDisabled:(BOOL)arg1;
- (BOOL)_automaticFocusRingDisabled;
- (id)_enclosingScrollViewIfDocumentView;
- (void)didResignActiveFirstResponder;
- (void)didBecomeActiveFirstResponder;
- (BOOL)_willDrawFocusRingAroundEnclosingScrollView;
- (BOOL)_hasLegacyExternalFocusRingThatWasNormallyDrawnManually;
- (BOOL)_showingFocusRingAroundEnclosingScrollView:(id)arg1;
- (void)_drawScrollViewFocusRing:(id)arg1 clipRect:(struct CGRect)arg2 needsFullDisplay:(BOOL)arg3;
- (void)noteFocusRingMaskChanged;
- (struct CGRect)focusRingMaskBounds;
- (void)drawFocusRingMask;
- (unsigned long long)focusRingType;
- (void)setFocusRingType:(unsigned long long)arg1;
- (void)setKeyboardFocusRingNeedsDisplayInRect:(struct CGRect)arg1;
- (void)_setKeyboardFocusRingNeedsDisplayInRect:(struct CGRect)arg1 force:(BOOL)arg2;
- (void)_drawFocusRingDebugAroundRect:(struct CGRect)arg1;
- (void)_setKeyboardFocusRingNeedsDisplayAroundPerimeter;
- (id)_clipViewAncestor;
@property(readonly) NSView *opaqueAncestor;
- (id)ancestorSharedWithView:(id)arg1;
- (BOOL)isDescendantOf:(id)arg1;
@property(readonly) NSView *superview;
@property(readonly) NSWindow *window;
- (void)_setWindow:(id)arg1;
- (id)_accessibilityUIElementSpecifier;
- (void)_removeLayerIfOwnedByAppKit;
- (BOOL)_shouldDoLayerPerformanceUpdates;
- (void)_setShouldDoLayerPerformanceUpdates:(BOOL)arg1;
- (BOOL)_needsLayoutEngine;
- (id)_setUpViewBackingSurface;
- (void)_addToOrphanList;
- (void)dealloc;
- (void)_finalize;
- (void)_releaseBindingAdaptor;
- (BOOL)_allowsContextMenus;
- (BOOL)_hasEverHadInvalidRestorableState;
- (BOOL)_hasInvalidRestorableState;
- (void)_setHasInvalidRestorableState:(BOOL)arg1;
- (void)didChangeValueForKey:(id)arg1;
- (void)_commonAwake;
- (void)_checkForOverriddenIsFlipped;
- (BOOL)_autoDrawConcurrently;
- (void)_recursiveGainedDescendantThatOverridesNeedsDisplay;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (long long)_defaultLayerContentsRedrawPolicy;
- (struct CGRect)_focusRingVisibleRect;
- (void)_recursiveDisplaySelfAndDescendantsInRect:(struct CGRect)arg1;
- (void)_recursiveDisplayDescendantsInRect:(struct CGRect)arg1;
- (BOOL)_drawnByAncestor;
- (BOOL)_drawsOwnDescendants;
- (void)_setDrawsOwnDescendants:(BOOL)arg1;
- (void)_performAnimatedAction:(CDUnknownBlockType)arg1;
- (void)setAllowsVibrancy:(BOOL)arg1;
@property(readonly) BOOL allowsVibrancy;
- (BOOL)_isLayingOut;
- (id)_visibleDescendants;
@property(readonly) BOOL _managesOpenGLDrawable;
- (BOOL)_usingAlternateHighlightColorForCell:(id)arg1 withFrame:(struct CGRect)arg2;
- (id)_highlightColorForCell:(id)arg1;
@property(readonly, getter=isDrawingFindIndicator) BOOL drawingFindIndicator;
- (void)_sortSubviewsUsingComparator:(CDUnknownBlockType)arg1;
- (id)_subtreeDescriptionForTouchBarLogging;
- (id)_subtreeDescriptionForTouchBarLoggingWithDepth:(long long)arg1;
- (id)_descriptionForTouchBarLogging;
- (id)_lfld_description;
- (id)_lfld_minimalDescription;
- (void)_lfld_addVariableChangeRecordForVariable:(id)arg1 inLayoutEngine:(id)arg2;
@property(readonly, nonatomic) NSMutableArray *_lfld_variableChangeRecords;
- (void)_lfld_addSetNeedsLayoutCallStack:(id)arg1;
@property(readonly, nonatomic) NSMutableSet *_lfld_setNeedsLayoutCallStacks;
- (void)_lfld_addGeometryChangeRecordWithPropertyName:(id)arg1 value:(id)arg2;
@property(readonly, nonatomic) NSMutableArray *_lfld_geometryChangeRecords;
@property(readonly, nonatomic) NSString *_lfld_currentLayoutMethodName;
- (void)_lfld_discardLastCurrentLayoutMethodName;
- (void)_lfld_pushCurrentLayoutMethodName:(id)arg1;
- (void)_lfld_resetCount;
- (void)_lfld_prepareToResetCountIfNecessary;
- (void)_lfld_incrementCount;
@property(readonly, nonatomic) long long _lfld_count;
- (BOOL)_isContainedInMenu;
@property(readonly) NSMenuItem *enclosingMenuItem;
- (id)_enclosingMenuItem;
@property(retain) NSPressureConfiguration *pressureConfiguration;
- (void)_debug_showKeyboardUILoop;
- (void)_drawMetricsOverlays;
- (void)_updateLayerMetricsOverlays;
- (void)_showAllDrawingDrawRect:(struct CGRect)arg1;
- (id)loggingDescription;
- (id)_subtreeDescriptionForLogging:(BOOL)arg1;
- (id)_subtreeDescription;
- (id)_subtreeDescriptionWithDepth:(long long)arg1 forLogging:(BOOL)arg2;
- (id)_briefDescriptionForLogging:(BOOL)arg1;
- (id)_briefDescription;
- (id)_layerTreeDescription;
- (void)_setOpenGLContext:(id)arg1;
- (id)_openGLContext;
- (id)_openGLContextForCurrentLayerBackingState;
- (void)_setSurfaceBackedOpenGLContext:(id)arg1;
- (id)_surfaceBackedOpenGLContext;
- (void)_setLayerBackedOpenGLContext:(id)arg1;
- (id)_layerBackedOpenGLContext;
@property BOOL wantsExtendedDynamicRangeOpenGLSurface;
@property(setter=_setProxyLayer:) CAProxyLayer *_proxyLayer;
@property(setter=_setWindowBackdrop:) NSCGSWindowBackdrop *_windowBackdrop;
- (void)_removeVibrantBlendingMimicBackdropOrProxyLayerIfNeeded;
- (void)_updateVibrantBlendingMimicBackdropOrProxyLayerWithBlendMode:(int)arg1;
- (void)_setNeedsUpdateMimicBackdropLevel;
- (BOOL)_isDiagonallyRotatedOrScaledFromBase;
- (id)_buttonOfClass:(Class)arg1 action:(SEL)arg2;
- (void)heartBeat:(CDStruct_fadd2e06 *)arg1;
- (void)_recursiveThawLayersAfterTransplant;
- (void)_recursiveFreezeLayersBeforeTransplant;
- (unsigned int)_CAViewFlags;
- (id)_createLayer;
- (BOOL)canSmoothFontsInLayer;
- (BOOL)shouldSetFontSmoothingBackgroundColor;
- (void)_safeSubviewEnumerationWithHandler:(CDUnknownBlockType)arg1;
@property(copy) NSColor *fontSmoothingBackgroundColor;
- (BOOL)lockFocusIfCanDrawInFrame:(struct CGRect)arg1 flipped:(BOOL)arg2 clip:(BOOL)arg3;
- (void)_setNeedsPostponedSurfaceSync;
- (void)_clearPostponedSurfaceSync;
- (void)_syncSurfaceIfPostponed;
- (BOOL)_updateInheritedSurfaceColorSpace;
- (void)_updateSurfaceResolution;
- (void)_setEffectiveSurfaceColorSpace:(id)arg1;
- (void)_surfaceResized:(id)arg1;
- (void)_surfaceMoved:(id)arg1;
- (struct CGRect)_surfaceBounds;
@property(retain, setter=_setSurface:) NSSurface *_surface;
- (void)_viewSurfaceDidComeBack:(id)arg1;
- (void)_viewSurfaceWillGoAway:(id)arg1;
- (double)_desiredSurfaceResolution;
- (BOOL)_surfaceInheritsWindowOpaqueShape;
- (void)_setSurfaceBacked:(BOOL)arg1;
- (BOOL)_isSurfaceBacked;
- (BOOL)_allowDynamicContentSizeChangesWhileScrolling;
- (BOOL)_wantsTouchesForEvent:(id)arg1;
- (void)_dismissGestureRecognizers;
- (id)_revertGestureRecognizerPressureConfigurationForEvent:(id)arg1;
- (void)_synchronizeEffectivePressureConfiguration;
- (id)_pressureConfigurationTrackingAreaCreateIfNeeded:(BOOL)arg1;
- (void)_windowDidOrderOffScreen;
- (void)_windowWillOrderOffScreen;
- (void)_windowDidOrderOnScreen;
- (void)_windowWillOrderOnScreen;
- (BOOL)_shouldAutoFlattenLayerTree;
- (void)geometryInWindowDidChange;
- (void)disableGeometryInWindowDidChangeNotification;
- (void)enableGeometryInWindowDidChangeNotification;
- (void)setCornerRadius:(double)arg1;
- (double)cornerRadius;
- (void)setClipsToBounds:(BOOL)arg1;
- (BOOL)clipsToBounds;
- (id)_backgroundColorForFontSmoothing;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (void)_resetSupportsDirectLayerContentsCache;
- (void)_setSupportsDirectLayerContentsCache:(BOOL)arg1;
- (int)_supportsDirectLayerContentsCache;
- (BOOL)_hasRectangularFocusRingAroundFrame;
- (BOOL)_NSView_isWebClipView;
- (void)_setLayerNeedsDisplayInViewRect:(struct CGRect)arg1;
- (id)_rootmostLayerTreeHostAncestor;
- (struct CGRect)activeDrawingRect;
- (void)_recursive:(BOOL)arg1 displayRectIgnoringOpacity:(struct CGRect)arg2 inContext:(id)arg3 shouldChangeFontReferenceColor:(BOOL)arg4 stopAtLayerBackedViews:(BOOL)arg5;
- (void)_updateSurfaceWhenInAnInclusiveLayer;
- (void)_disableNeedsDisplayInRectNotifications;
- (void)_enableNeedsDisplayInRectNotifications;
- (BOOL)_setupFontSmoothingForLayerDrawingIntoContext:(struct CGContext *)arg1 previousColor:(struct CGColor **)arg2 previousFlag:(char *)arg3;
- (void)_setupFocusStateForDrawing;
- (void)_renderLayerInContext:(id)arg1;
- (double)_autoscrollScreenEdgeFactorFromPoint:(struct CGPoint)arg1;
- (BOOL)_shouldAutoscrollForEvent:(id)arg1;
- (struct CGPoint)_autoscrollAmountForWindowPoint:(struct CGPoint)arg1;
- (struct CGPoint)_autoscrollAmountForTouch:(id)arg1;
- (struct CGPoint)_autoscrollAmountForEvent:(id)arg1;
- (void)_removeTrackingRects:(long long *)arg1 count:(long long)arg2;
- (BOOL)_needsDisplayInRect:(struct CGRect)arg1;
- (void)_updateVibrancyIfNeededForHiddenStateChange;
- (void)_updateDragRegionForHiddenStateChange;
- (void)_setHidden:(BOOL)arg1 setNeedsDisplay:(BOOL)arg2;
- (void)_updateAllLayerPropertiesFromView;
- (BOOL)_appkitManagesLayer;
- (void)_createLayerAndInitialize;
- (void)_updateVibrancy;
- (BOOL)_needsVibrancy;
- (BOOL)_wantsLayerBasedVibrancy;
@property(setter=_setVibrantBlendingStyleForSubtree:) unsigned long long _vibrantBlendingStyleForSubtree;
- (void)_invalidateEffectiveVibrantBlendingStyle;
- (void)_removeVibrantBlendingCACompositingFilterIfNeeded;
- (void)_updateVibrantBlendingCACompositingFilterWithBlendMode:(int)arg1;
- (int)_vibrancyBlendMode;
- (void)_updateLayerGeometryFromView;
- (void)_updateInclusiveLayerSublayerViewPositions;
- (BOOL)_useCoreAnimationFrameOriginChanges;
- (BOOL)_useCoreAnimationFrameChanges;
- (void)_handleFrameChangeForSubview:(id)arg1;
- (void)_handleBoundsChangeForSubview:(id)arg1;
- (void)_compositeHiddenViewHighlight;
- (BOOL)_appearanceSensitiveIsOpaque;
- (struct CGRect)_opaqueRectForWindowMoveWhenInTitlebar;
- (struct CGRect)_opaqueRect;
- (BOOL)_impactsWindowMoving;
- (void)_setImpactsWindowMoving:(BOOL)arg1;
- (id)_dirtyRegion;
- (BOOL)_needsRedisplayOnFrameChange;
- (void)_recursiveSetNeedsDisplay:(BOOL)arg1;
- (unsigned long long)_effectiveFocusRingType;
- (void)_getDirtyRects:(struct CGRect **)arg1 clippedToRect:(struct CGRect)arg2 count:(unsigned long long *)arg3 boundingBox:(struct CGRect *)arg4;
- (void)_clearDirtyRectsForTree;
- (void)_clearDirtyRectsForLockedTree;
- (BOOL)_reallyNeedsDisplayForBounds;
- (void)_invalidateViewAreasThatOverlapRect:(struct CGRect)arg1 inFrontOfSubview:(id)arg2;
- (BOOL)_mayHaveVisibleDescendantsThatOverlapRect:(struct CGRect)arg1 inFrontOfSubview:(id)arg2;
- (BOOL)_enumerateVisibleDescendantsThatOverlapRect:(struct CGRect)arg1 inFrontOfSubview:(id)arg2 recurseUp:(BOOL)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)_ancestorForStartOfDisplayRecursion;
- (BOOL)_shouldPrintByCallingDrawRect;
- (void)_updateTrackingAreasWithInvalidCursorRects:(BOOL)arg1;
- (void)_updateTrackingAreas;
- (void)_updateTrackingLocation:(id)arg1;
- (void)_uninstallRemovedTrackingAreas;
- (void)_uninstallTrackingAreas;
- (void)_uninstallTrackingArea:(id)arg1;
- (void)_installTrackingAreas:(id)arg1;
- (void)_installTrackingArea:(id)arg1;
- (void)_enableTrackingArea:(id)arg1;
- (void)_disableTrackingArea:(id)arg1;
- (void)_invalidateCursorRects;
- (void)_setTrackingAreasDirty:(int)arg1;
- (void)_recursiveSetTrackingAreasDirty:(long long)arg1;
- (int)_trackingAreasDirty;
- (long long)_addTrackingRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3 assumeInside:(BOOL)arg4 useTrackingNum:(long long)arg5;
- (void)_enableOrDisableTrackingAreas;
- (void)_enableOrDisableTrackingArea:(id)arg1;
- (BOOL)_shouldUseTrackingAreasForToolTips;
- (BOOL)_uncachedShouldUseTrackingAreasForToolTips;
- (void)_addTrackingRects:(struct CGRect *)arg1 owner:(id)arg2 userDataList:(void **)arg3 assumeInsideList:(char *)arg4 trackingNums:(long long *)arg5 count:(long long)arg6;
- (void)_addTrackingTag:(long long)arg1;
- (id)_subviewsExcludingHiddenViews;
- (void)_trimRegionInvalidatedDuringDisplayToRectsJustDrawn;
- (void)_mergeRegionInvalidatedDuringDisplayIntoDirtyRegion;
- (void)_clearDirtyRectsForTreeInRect:(struct CGRect)arg1;
- (void)_performAnimated:(BOOL)arg1 actions:(CDUnknownBlockType)arg2;
- (long long)_frameAnimationCount;
- (void)_endAnimatingFrame;
- (void)_beginAnimatingFrame;
- (void)_setDontSuppressLayerAnimation:(BOOL)arg1;
- (BOOL)_dontSuppressLayerAnimation;
- (void)_setAnimatingFrameSize:(BOOL)arg1;
- (BOOL)_animatingFrameSize;
- (void)_updateDrawsNothing;
- (BOOL)_drawsNothing;
- (void)_endLiveAnimation;
- (void)_startLiveAnimation;
- (void)_setWindowNeedsDisplayInViewsDrawableRect;
- (void)_allocAuxiliary;
- (void)_gainedDescendantThatCanDrawConcurrently;
- (id)_copySubviewsInOrderOfDisplay;
- (BOOL)_attemptConcurrentViewDrawingForSelfAndDescendants;
- (void)_sendViewWillDraw;
- (BOOL)_viewDying;
- (id)_descendantsPassingTest:(CDUnknownBlockType)arg1;
- (BOOL)_isInclusiveLayerBacked;
- (BOOL)_isLayerBacked;
- (void)_setDrawsWithTintWhenHidden:(BOOL)arg1;
- (BOOL)_drawsWithTintWhenHidden;
@property(copy, setter=_setClipPath:) NSBezierPath *_clipPath;
- (BOOL)_needsDisplayOnClipPathChange;
- (void)hideActiveFirstResponderIndication;
- (void)showActiveFirstResponderIndication;
- (id)designatedFocusRingView;
- (BOOL)_clipViewShouldClipFocusRing;
- (id)_focusRingClipAncestor;
- (id)_focusRingBleedRegion;
- (void)_clipViewAncestorDidScroll:(id)arg1;
- (void)_clipViewAncestorWillScroll:(id)arg1;
- (void)_setHIViewIsDrawing:(BOOL)arg1;
- (BOOL)_drawingByHIView;
- (BOOL)_boundToHIView;
@property(retain, setter=_setSurfaceColorSpace:) NSColorSpace *_surfaceColorSpace;
- (void)_setUsesSpecialArchiving:(BOOL)arg1;
- (void)showDefinitionForAttributedString:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)showDefinitionForAttributedString:(id)arg1 range:(struct _NSRange)arg2 options:(id)arg3 baselineOriginProvider:(CDUnknownBlockType)arg4;
@property(setter=_setViewController:) NSViewController *_viewController;
- (struct CGRect)_insetVisibleRect;
- (void)_didMeasureMinSizeForFullscreen;
- (void)_willMeasureMinSizeForFullscreen;
@property(readonly) long long _presentationState;
@property(readonly) struct NSEdgeInsets touchBarHitTestInsets;
- (id)_singleCell;
- (id)accessibilityAuditContrast;
- (id)accessibilityAuditPotentialChildren;
- (id)deepestAccessibilityDescendants;
- (id)visibleAccessibleOrLeafSubviews;
- (BOOL)_isLeafNodeWithPotentialAccessibilityChildren;
- (id)_classSetToIgnoreForAuditing;
- (BOOL)_ignoreAudit;
- (id)accessibilityAuditLabel;
- (id)accessibilityAuditHierarchy;
- (id)accessibilityAuditParent;
- (id)accessibilityAuditIssuesAttribute;
- (double)accessibilityVisibleArea;
- (id)accessibilitySectionsAttribute;
- (BOOL)accessibilityShouldSendNotification:(id)arg1;
- (id)_accessibilityEnclosingTableRow;
- (BOOL)_accessibilityIsTableViewDescendant;
- (id)_accessibilityEnclosingTableView;
- (id)accessibilityVerticalUnitDescriptionAttribute;
- (id)accessibilityHorizontalUnitDescriptionAttribute;
- (void)accessibilityPopUpMenuClosed:(id)arg1 accessibilityParent:(id)arg2;
- (void)accessibilityPopUpMenuCreated:(id)arg1 returningAccessibilityParent:(id *)arg2;
- (void)accessibilityPopUpMenuCreated:(id)arg1 forSubview:(id)arg2 returningAccessibilityParent:(id *)arg3;
- (id)accessibilityPopUpMenuParent:(id)arg1;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (BOOL)accessibilityShouldUseUniqueId;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)_accessibilityBasicHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (void)_accessibilityShowMenu:(id)arg1;
- (struct CGPoint)accessibilityWindowPointForShowMenu;
- (void)accessibilityPerformAction:(id)arg1;
- (id)accessibilityActionDescription:(id)arg1;
- (id)accessibilityActionNames;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityChildrenInNavigationOrderAttribute;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityParentAttribute;
- (id)_accessibilityParentForSubview:(id)arg1;
- (BOOL)accessibilityIsHelpAttributeSettable;
- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleAttribute;
- (id)accessibilityAttributeNames;
- (BOOL)_wantsHeartBeat;
- (struct CGRect)_desiredLayerBounds;
- (id)_screenAtPoint:(struct CGPoint)arg1;
- (void)_forceUpdateLayerTreeRenderer;
- (void)_setLayerTreeRenderer:(struct _CAView *)arg1;
- (struct _CAView *)_layerTreeRenderer;
- (void)_drawRectAsLayerTree:(struct CGRect)arg1;
- (struct CGSize)_recommendedDrawableSize;
- (void)_registerForDraggedTypes:(id)arg1 later:(BOOL)arg2;
- (BOOL)dragPromisedFilesOfTypes:(id)arg1 fromRect:(struct CGRect)arg2 source:(id)arg3 slideBack:(BOOL)arg4 event:(id)arg5;
- (BOOL)dragFile:(id)arg1 fromRect:(struct CGRect)arg2 slideBack:(BOOL)arg3 event:(id)arg4;
- (BOOL)_treeHasDragTypes;
- (id)_hitTest:(struct CGPoint *)arg1 dragTypes:(id)arg2;
- (void)dragImage:(id)arg1 at:(struct CGPoint)arg2 offset:(struct CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(BOOL)arg7;
- (id)beginDraggingSessionWithItems:(id)arg1 event:(id)arg2 source:(id)arg3;
- (void)concludeDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
@property(readonly, copy) NSArray *registeredDraggedTypes;
- (id)_dragTypes;
- (void)unregisterDraggedTypes;
- (void)registerForDraggedTypes:(id)arg1;
- (id)pageFooter;
- (id)pageHeader;
- (id)_pageHeaderAndFooterTextAttributes;
- (void)drawPageBorderWithSize:(struct CGSize)arg1;
- (void)_getPageHeaderRect:(struct CGRect *)arg1 pageFooterRect:(struct CGRect *)arg2 forBorderSize:(struct CGSize)arg3;
- (void)drawSheetBorderWithSize:(struct CGSize)arg1;
- (struct CGPoint)locationOfPrintRect:(struct CGRect)arg1;
- (void)adjustPageHeightNew:(double *)arg1 top:(double)arg2 bottom:(double)arg3 limit:(double)arg4;
- (void)adjustPageWidthNew:(double *)arg1 left:(double)arg2 right:(double)arg3 limit:(double)arg4;
- (void)_calcHeightsWithMargin:(const struct CGSize *)arg1 operation:(id)arg2;
- (void)_calcWidthsWithMargin:(const struct CGSize *)arg1 operation:(id)arg2;
- (double)_calcMarginSize:(struct CGSize *)arg1 operation:(id)arg2;
- (double)_provideTotalScaleFactorForPrintOperation:(id)arg1;
- (BOOL)_knowsPagesFirst:(long long *)arg1 last:(long long *)arg2;
- (BOOL)knowsPagesFirst:(long long *)arg1 last:(long long *)arg2;
- (id)printJobTitle;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)_layoutSublayersOfLayer:(id)arg1;
- (void)_drawViewBackingLayer:(id)arg1 inContext:(struct CGContext *)arg2 drawingHandler:(CDUnknownBlockType)arg3;
- (void)_viewDidDrawInLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)_updateLayerCanDrawConcurrentlyFromView;
- (void)_updateLayerOpacityFromView;
- (void)_updateLayerMaskFromView;
- (void)_updateLayerCompositingFilterFromView;
- (void)_updateLayerBackgroundFiltersFromView;
- (void)_updateLayerFiltersFromView;
- (void)_updateLayerHiddenFromView;
- (void)_updateLayerShadowFromView;
- (void)_updateGeometryFlippedOnSelfAndSubviews;
- (void)_updateGeometryFlippedOnLayer;
- (id)_parentSuperviewWithLayer;
- (void)_updateContentsGravityBasedOnFlippedChange;
- (BOOL)_layerCoordinatesEqualViewCoordinates;
- (id)_dumpLayer;
- (void)_dumpLayerToFilename:(const char *)arg1;
- (void)endDocument;
- (void)endPage;
- (void)beginPageInRect:(struct CGRect)arg1 atPlacement:(struct CGPoint)arg2;
- (void)beginDocument;
- (double)widthAdjustLimit;
- (double)heightAdjustLimit;
- (struct CGRect)rectForPage:(long long)arg1;
- (BOOL)knowsPageRange:(struct _NSRange *)arg1;
- (void)print:(id)arg1;
- (id)dataWithEPSInsideRect:(struct CGRect)arg1;
- (void)writeEPSInsideRect:(struct CGRect)arg1 toPasteboard:(id)arg2;
- (id)dataWithPDFInsideRect:(struct CGRect)arg1;
- (void)writePDFInsideRect:(struct CGRect)arg1 toPasteboard:(id)arg2;
- (BOOL)_printForCurrentOperation;
- (BOOL)_copyForCurrentOperation;
- (void)_previewCurrentPageForPrintOperation:(id)arg1;
- (void)_renderCurrentPageForPrintOperation:(id)arg1;
- (void)endTrailer;
- (void)beginTrailer;
- (void)endPageSetup;
- (void)addToPageSetup;
- (void)beginPageSetupRect:(struct CGRect)arg1 placement:(struct CGPoint)arg2;
- (void)beginPage:(long long)arg1 label:(id)arg2 bBox:(struct CGRect)arg3 fonts:(id)arg4;
- (void)endSetup;
- (void)beginSetup;
- (void)endPrologue;
- (void)endHeaderComments;
- (void)beginPrologueBBox:(struct CGRect)arg1 creationDate:(id)arg2 createdBy:(id)arg3 fonts:(id)arg4 forWhom:(id)arg5 pages:(long long)arg6 title:(id)arg7;
@property(readonly, getter=isInFullScreenMode) BOOL inFullScreenMode;
- (void)exitFullScreenModeWithOptions:(id)arg1;
- (BOOL)enterFullScreenMode:(id)arg1 withOptions:(id)arg2;
- (void)_didRestoreUserActivity:(id)arg1;
- (BOOL)_allowImplicitInclusiveLayeringForResponsiveScrolling;
- (BOOL)_canSubtreeUseInclusiveLayersAutomatically;
@property(readonly) BOOL _wantsUnderTitlebarView;
- (void)_setHiddenForReuse:(BOOL)arg1;
- (BOOL)_isHiddenForReuse;
- (void)_invalidatePreferredAttributes;
- (BOOL)_arePreferredAttributesValid;
- (id)preferredLayoutAttributesFittingAttributes:(id)arg1;
- (id)_preferredLayoutAttributesFittingAttributes:(id)arg1;
- (void)_markAsDequeued;
- (BOOL)_wasDequeued;
- (void)_setCollectionViewReusableViewFlags:(unsigned long long)arg1;
- (unsigned long long)_collectionViewReusableViewFlags;
- (void)_setCollectionViewLayoutAttributes:(id)arg1;
- (void)_setBaseCollectionViewLayoutAttributes:(id)arg1;
- (id)_collectionViewLayoutAttributes;
- (void)_setReuseIdentifier:(id)arg1;
- (id)reuseIdentifier;
- (id)_generateDraggingImageComponentWithKey:(id)arg1 withMainDragView:(id)arg2;
@property(readonly) __weak NSFunctionRow *functionRow;
- (struct CGRect)_visibleRectExcludingTitlebarInCoordinateSystemForView:(id)arg1;
@property(readonly) NSCandidateListTouchBarItem *candidateListTouchBarItem;
- (id)_persistentUIIdentifier;
- (id)_persistentUIWindow;
- (id)_copyPersistentUIChildren;
@property(readonly, getter=isInTouchBar) BOOL inTouchBar;
- (long long)_depthFirstCompare:(id)arg1;
- (BOOL)_hasActiveDragTypes;
- (struct CGRect)_alignmentBoundsForPopover;
- (struct CGRect)_visibleRectForPopover;
- (id)ns_containerWidgetType;
- (id)ns_widgetType;
- (void)_removeIBGeneratedPrototypingConstraints;
- (void)invalidateIntrinsicContentSizeForCell:(id)arg1;
- (struct CGSize)fittingSize;
- (void)_populateEngineWithConstraintsForViewSubtree:(id)arg1 forComputingFittingSizeOfView:(id)arg2;
- (id)_rootView;
- (id)_autolayoutTrace;
- (id)_recursiveAutolayoutTraceAtLevel:(long long)arg1;
- (id)_descriptionForLayoutTrace;
- (id)_layoutDebuggingIdentifier;
- (id)_findControlWithStringValuePrefix:(id)arg1;
- (id)_findViewPassingTest:(CDUnknownBlockType)arg1;
- (void)exerciseAmbiguityInLayout;
- (id)_descendantWithAmbiguousLayout;
- (BOOL)hasAmbiguousLayout;
- (id)_layoutVariablesWithAmbiguousValue;
- (id)constraintsAffectingLayoutForOrientation:(long long)arg1;
- (id)constraintsAffectingLayoutForOrientation:(long long)arg1 ofItem:(id)arg2;
- (void)invalidateIntrinsicContentSize;
- (void)_intrinsicContentSizeInvalidatedForChildView:(id)arg1;
- (void)_setBaselineOffsetFromBottomMayBeReferenced:(BOOL)arg1;
- (id)_generateContentSizeConstraints;
- (void)_updateContentSizeConstraints;
- (struct CGSize)_intrinsicContentFrameSize;
- (struct CGSize)intrinsicContentSize;
- (void)_setContentSizeConstraints:(id)arg1;
- (id)_contentSizeConstraints;
- (void)setContentCompressionResistancePriority:(float)arg1 forOrientation:(long long)arg2;
- (float)contentCompressionResistancePriorityForOrientation:(long long)arg1;
- (struct CGSize)_defaultContentCompressionResistancePriorities;
- (void)_setContentCompressionResistancePriorities:(struct CGSize)arg1;
- (struct CGSize)_contentCompressionResistancePriorities;
- (void)_setPrimitiveContentCompressionResistancePrioritiesValue:(id)arg1;
- (id)_primitiveContentCompressionResistancePrioritiesValue;
- (void)setContentHuggingPriority:(float)arg1 forOrientation:(long long)arg2;
- (float)contentHuggingPriorityForOrientation:(long long)arg1;
- (struct CGSize)_defaultContentHuggingPriorities;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (BOOL)_contentHuggingDefault_isUsuallyFixedWidth;
- (void)_setContentHuggingPriorities:(struct CGSize)arg1;
- (struct CGSize)_contentHuggingPriorities;
- (void)_setPrimitiveContentHuggingPrioritiesValue:(id)arg1;
- (id)_primitiveContentHuggingPrioritiesValue;
- (void)_updateSimpleAutoresizingConstraintsInPlace:(id)arg1 forAutoresizingMask:(unsigned long long)arg2;
- (id)_constraintsEquivalentToAutoresizingMask;
- (void)_calculateSubviewAlignmentFrame:(struct CGRect *)arg1 superviewAlignmentBounds:(struct CGRect *)arg2 forAutoresizingMask:(unsigned long long)arg3;
- (unsigned long long)nsli_autoresizingMask;
- (unsigned long long)_effectiveAutoresizingMask;
- (BOOL)_allowAutoresizingMaskFixupDueToSuperOverridingResizeSubviews;
- (BOOL)_shouldFixupChildAutoresizingMaskOnResizeSubviewsOverride;
- (void)_invalidateEngineHostConstraints;
- (void)_updateEngineHostConstraints;
- (void)_updateEngineHostPreferredSizeConstraintsIfNeeded;
- (struct CGSize)_calculateEngineHostPreferredSize;
- (BOOL)_wantsPreferredSizeConstraintsWhenEngineHosting;
- (BOOL)_engineHostingPreferredSizeConstraintsNeedUpdating;
- (void)_invalidateEngineHostingPreferredSizeConstraints;
- (void)_setAllowsEngineHostPreferredSizeConstraints:(BOOL)arg1;
- (BOOL)_allowsEngineHostPreferredSizeConstraints;
- (void)_updateExistingEngineHostConstraints;
- (id)_makeEngineHostConstraints;
- (void)_updateAutoresizingConstraints;
- (void)_invalidateAutoresizingConstraints;
- (void)_effectiveAutoresizingMask_autoresizesSubviewsChanged;
- (void)_constraints_viewGeometryDidChange;
- (void)_constraints_subviewDidChangeSuperview:(id)arg1;
- (void)_constraints_subviewWillChangeSuperview:(id)arg1;
- (id)_engineHostConstraints;
- (void)_setEngineHostConstraints:(id)arg1;
- (id)_autoresizingConstraints;
- (void)solutionDidChangeInEngine:(id)arg1;
- (void)engine:(id)arg1 willBreakConstraint:(id)arg2 dueToMutuallyExclusiveConstraints:(id)arg3;
- (id)engine:(id)arg1 markerForConstraintToBreakAmongConstraints:(id)arg2;
- (void)constraintsDidChangeInEngine:(id)arg1;
- (id)constraintForIdentifier:(id)arg1;
- (void)removeConstraints:(id)arg1;
- (void)removeConstraint:(id)arg1;
- (void)addConstraints:(id)arg1;
- (void)addConstraint:(id)arg1;
- (BOOL)_tryToAddConstraint:(id)arg1 mutuallyExclusiveConstraints:(id *)arg2;
- (BOOL)_tryToAddConstraint:(id)arg1 integralizationAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id *)arg3;
- (BOOL)_tryToAddConstraint:(id)arg1 roundingAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id *)arg3;
- (id)_referencingConstraints;
- (id)_constraintsReferencingItem:(id)arg1;
- (id)constraints;
- (void)_layoutEngine_willRemoveLayoutConstraint:(id)arg1;
- (BOOL)_layoutEngine_didAddLayoutConstraint:(id)arg1 integralizationAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id *)arg3;
- (void)_withAutomaticEngineOptimizationDisabled:(CDUnknownBlockType)arg1;
- (void)_discardEngine:(id)arg1;
- (void)_layoutEngine_windowDidChange;
- (void)_snipConstraintsToAnchor:(id)arg1;
- (void)_constraints_snipDangliesWithForce:(BOOL)arg1;
- (void)_setPotentiallyHasDanglyConstraints:(BOOL)arg1;
- (BOOL)_potentiallyHasDanglyConstraints;
- (id)_engineHostingView;
- (void)_setHostsAutolayoutEngine:(BOOL)arg1;
- (BOOL)_usesEngineHostingConstraints;
- (BOOL)_hostsAutolayoutEngine;
- (BOOL)_encapsulatesSubtreeLayout;
- (BOOL)_tryToEncapsulateSubtreeLayout;
- (BOOL)_wantsToHostAutolayoutEngine;
- (void)_setWantsToHostAutolayoutEngine:(BOOL)arg1;
- (void)_viewWillBePiercedByConstraint:(id)arg1;
- (BOOL)_isResizingFromLayout;
- (void)_updateConstraintsAtWindowLevelIfNeeded;
- (id)_layoutEngine;
- (void)_setLayoutEngine:(id)arg1;
- (void)_parentalLayoutEngineDidChangeTo:(id)arg1;
- (id)_parentalLayoutEngine;
- (void)_engageAutolayout;
- (void)_rebuildLayoutFromScratch;
- (void)_adjustLayoutForResolutionChangeToRetina:(BOOL)arg1;
- (id)nsli_layoutEngine;
- (void)_updateHostedAutolayoutEngineForPossiblyNewEngineScalingCoefficients;
- (void)_didChangeHostsAutolayoutEngineTo:(BOOL)arg1;
- (void)_willChangeHostsAutolayoutEngineTo:(BOOL)arg1;
- (id)_hostedLayoutEngineOverride;
- (id)_replacementConstraintForConstraint:(id)arg1 whenReplacingView:(id)arg2 withView:(id)arg3;
- (id)_constraintsArray;
- (id)_nonTAMICConstraints;
- (double)_effectiveBackingScaleFactorForLayout;
- (void)_subview:(id)arg1 valueOfVariable:(id)arg2 didChangeInEngine:(id)arg3;
- (void)nsli_swapContainerForOutgoingConstraint:(id)arg1 toIncomingConstraint:(id)arg2;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (BOOL)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (BOOL)nsis_shouldIntegralizeVariable:(id)arg1;
- (int)nsis_orientationHintForVariable:(id)arg1;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (id)_heightVariable;
- (id)_widthVariable;
- (id)_minYVariable;
- (id)_minXVariable;
- (id)nsli_boundsHeightVariable;
- (id)nsli_boundsWidthVariable;
- (id)nsli_heightVariable;
- (id)nsli_widthVariable;
- (id)nsli_minYVariable;
- (id)nsli_minXVariable;
- (void)nsli_setPiercingToken:(unsigned long long)arg1;
- (unsigned long long)nsli_piercingToken;
- (BOOL)nsli_canHostIndependentVariableAnchor;
- (BOOL)nsli_isCollectingConstraintChangesForLaterCoordinatedFlush:(id)arg1;
- (BOOL)nsli_lowersExpressionRelativeToConstraintContainer;
- (BOOL)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 container:(id)arg4;
- (BOOL)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 forConstraint:(id)arg4;
- (BOOL)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 forConstraint:(id)arg4 onBehalfOfLayoutGuide:(id)arg5;
- (struct CGSize)nsli_convertSizeFromEngineSpace:(struct CGSize)arg1;
- (struct CGSize)nsli_convertSizeToEngineSpace:(struct CGSize)arg1;
- (struct CGSize)_preferredAutolayoutEngineToUserScalingCoefficients;
- (struct CGSize)nsli_engineToUserScalingCoefficients;
- (struct CGSize)nsli_engineToUserScalingCoefficientsInEngine:(id)arg1;
- (BOOL)nsli_descriptionIncludesPointer;
- (id)nsli_description;
- (id)_layoutDescriptionIfDifferentFromDefault;
- (id)_defaultLayoutDescription;
- (BOOL)nsli_resolvedValue:(double *)arg1 forSymbolicConstant:(id)arg2 inConstraint:(id)arg3 error:(id *)arg4;
- (id)nsli_installedConstraints;
- (BOOL)nsli_removeConstraint:(id)arg1;
- (void)nsli_addConstraint:(id)arg1 mutuallyExclusiveConstraints:(id *)arg2;
- (void)nsli_addConstraint:(id)arg1;
- (BOOL)nsli_isFlipped;
- (BOOL)nsli_isRTL;
- (id)nsli_itemDescribingLayoutDirectionForConstraint:(id)arg1 toItem:(id)arg2;
- (id)nsli_ancestorSharedWithItem:(id)arg1;
- (id)nsli_superitem;
- (id)nsli_layoutAnchorForAttribute:(long long)arg1;
- (id)centerYAnchor;
- (id)centerXAnchor;
- (id)lastBaselineAnchor;
- (id)firstBaselineAnchor;
- (id)heightAnchor;
- (id)widthAnchor;
- (id)bottomAnchor;
- (id)topAnchor;
- (id)rightAnchor;
- (id)leftAnchor;
- (id)trailingAnchor;
- (id)leadingAnchor;
- (void)removeLayoutGuide:(id)arg1;
- (void)addLayoutGuide:(id)arg1;
@property(readonly, copy) NSArray *layoutGuides;
- (id)recursiveConstraintIdentifierDescription;
- (void)_populateRecursiveConstraintIdentifiersWithMapping:(id)arg1;
- (id)recursiveConstraintDescription;
- (long long)_recursiveSubConstraintsCountIncludeEncapsulated:(BOOL)arg1;
- (id)_recursiveConstraintsWithDepth:(long long)arg1;
- (id)nsli_layoutRect;
- (id)layoutRect;
@property(readonly) NSLayoutRect *alignmentLayoutRect;
- (void)_setupViewLayoutInvalidatorIfNecessary;
- (void)invalidateConstraints;
- (void)_removeChildRuleNode:(id)arg1;
- (void)_addChildRuleNode:(id)arg1;
- (id)_childRuleNodes;
- (void)_updateDeclaredRules;
- (id)declaredLayoutRules;
- (void)_updateDeclaredConstraints;
- (void)_complainAboutImproperDeclaredConstraintInvalidation;
- (void)_noteDeclaredConstraintWasManuallyRemoved:(id)arg1;
- (id)_declaredConstraints;
- (void)_setDeclaredConstraints:(id)arg1;
- (id)declaredLayoutConstraints;
- (id)fontSmoothingBackgroundColorForTextLayer:(id)arg1;
- (BOOL)textLayerCanUseLinearMaskOverlay:(id)arg1;
- (BOOL)textLayerShouldDoSubpixelAntialiasing:(id)arg1;
@property(readonly) id <NSAppearanceCustomization> _effectiveAppearanceParent;
- (void)removeConstraintWithIdentifier:(id)arg1;

// Remaining properties
@property struct CGPoint accessibilityActivationPoint; // @dynamic accessibilityActivationPoint;
@property(copy) NSArray *accessibilityAllowedValues; // @dynamic accessibilityAllowedValues;
@property(getter=isAccessibilityAlternateUIVisible) BOOL accessibilityAlternateUIVisible; // @dynamic accessibilityAlternateUIVisible;
@property(retain) id accessibilityApplicationFocusedUIElement; // @dynamic accessibilityApplicationFocusedUIElement;
@property(retain) id accessibilityCancelButton; // @dynamic accessibilityCancelButton;
@property(copy) NSArray *accessibilityChildren; // @dynamic accessibilityChildren;
@property(copy) NSArray *accessibilityChildrenInNavigationOrder; // @dynamic accessibilityChildrenInNavigationOrder;
@property(retain) id accessibilityClearButton; // @dynamic accessibilityClearButton;
@property(retain) id accessibilityCloseButton; // @dynamic accessibilityCloseButton;
@property long long accessibilityColumnCount; // @dynamic accessibilityColumnCount;
@property(copy) NSArray *accessibilityColumnHeaderUIElements; // @dynamic accessibilityColumnHeaderUIElements;
@property struct _NSRange accessibilityColumnIndexRange; // @dynamic accessibilityColumnIndexRange;
@property(copy) NSArray *accessibilityColumnTitles; // @dynamic accessibilityColumnTitles;
@property(copy) NSArray *accessibilityColumns; // @dynamic accessibilityColumns;
@property(copy) NSArray *accessibilityContents; // @dynamic accessibilityContents;
@property(retain) id accessibilityCriticalValue; // @dynamic accessibilityCriticalValue;
@property(copy) NSArray *accessibilityCustomActions; // @dynamic accessibilityCustomActions;
@property(copy) NSArray *accessibilityCustomRotors; // @dynamic accessibilityCustomRotors;
@property(retain) id accessibilityDecrementButton; // @dynamic accessibilityDecrementButton;
@property(retain) id accessibilityDefaultButton; // @dynamic accessibilityDefaultButton;
@property(getter=isAccessibilityDisclosed) BOOL accessibilityDisclosed; // @dynamic accessibilityDisclosed;
@property __weak id accessibilityDisclosedByRow; // @dynamic accessibilityDisclosedByRow;
@property(retain) id accessibilityDisclosedRows; // @dynamic accessibilityDisclosedRows;
@property long long accessibilityDisclosureLevel; // @dynamic accessibilityDisclosureLevel;
@property(copy) NSString *accessibilityDocument; // @dynamic accessibilityDocument;
@property(getter=isAccessibilityEdited) BOOL accessibilityEdited; // @dynamic accessibilityEdited;
@property(getter=isAccessibilityElement) BOOL accessibilityElement; // @dynamic accessibilityElement;
@property(getter=isAccessibilityEnabled) BOOL accessibilityEnabled; // @dynamic accessibilityEnabled;
@property(getter=isAccessibilityExpanded) BOOL accessibilityExpanded; // @dynamic accessibilityExpanded;
@property __weak id accessibilityExtrasMenuBar; // @dynamic accessibilityExtrasMenuBar;
@property(copy) NSString *accessibilityFilename; // @dynamic accessibilityFilename;
@property(getter=isAccessibilityFocused) BOOL accessibilityFocused; // @dynamic accessibilityFocused;
@property(retain) id accessibilityFocusedWindow; // @dynamic accessibilityFocusedWindow;
@property(getter=isAccessibilityFrontmost) BOOL accessibilityFrontmost; // @dynamic accessibilityFrontmost;
@property(retain) id accessibilityFullScreenButton; // @dynamic accessibilityFullScreenButton;
@property(retain) id accessibilityGrowArea; // @dynamic accessibilityGrowArea;
@property(copy) NSArray *accessibilityHandles; // @dynamic accessibilityHandles;
@property(retain) id accessibilityHeader; // @dynamic accessibilityHeader;
@property(copy) NSString *accessibilityHelp; // @dynamic accessibilityHelp;
@property(getter=isAccessibilityHidden) BOOL accessibilityHidden; // @dynamic accessibilityHidden;
@property(retain) id accessibilityHorizontalScrollBar; // @dynamic accessibilityHorizontalScrollBar;
@property(copy) NSString *accessibilityHorizontalUnitDescription; // @dynamic accessibilityHorizontalUnitDescription;
@property long long accessibilityHorizontalUnits; // @dynamic accessibilityHorizontalUnits;
@property(copy) NSString *accessibilityIdentifier; // @dynamic accessibilityIdentifier;
@property(retain) id accessibilityIncrementButton; // @dynamic accessibilityIncrementButton;
@property long long accessibilityIndex; // @dynamic accessibilityIndex;
@property long long accessibilityInsertionPointLineNumber; // @dynamic accessibilityInsertionPointLineNumber;
@property(copy) NSString *accessibilityLabel; // @dynamic accessibilityLabel;
@property(copy) NSArray *accessibilityLabelUIElements; // @dynamic accessibilityLabelUIElements;
@property float accessibilityLabelValue; // @dynamic accessibilityLabelValue;
@property(copy) NSArray *accessibilityLinkedUIElements; // @dynamic accessibilityLinkedUIElements;
@property(getter=isAccessibilityMain) BOOL accessibilityMain; // @dynamic accessibilityMain;
@property(retain) id accessibilityMainWindow; // @dynamic accessibilityMainWindow;
@property(retain) id accessibilityMarkerGroupUIElement; // @dynamic accessibilityMarkerGroupUIElement;
@property(copy) NSString *accessibilityMarkerTypeDescription; // @dynamic accessibilityMarkerTypeDescription;
@property(copy) NSArray *accessibilityMarkerUIElements; // @dynamic accessibilityMarkerUIElements;
@property(retain) id accessibilityMarkerValues; // @dynamic accessibilityMarkerValues;
@property(retain) id accessibilityMaxValue; // @dynamic accessibilityMaxValue;
@property __weak id accessibilityMenuBar; // @dynamic accessibilityMenuBar;
@property(retain) id accessibilityMinValue; // @dynamic accessibilityMinValue;
@property(retain) id accessibilityMinimizeButton; // @dynamic accessibilityMinimizeButton;
@property(getter=isAccessibilityMinimized) BOOL accessibilityMinimized; // @dynamic accessibilityMinimized;
@property(getter=isAccessibilityModal) BOOL accessibilityModal; // @dynamic accessibilityModal;
@property(copy) NSArray *accessibilityNextContents; // @dynamic accessibilityNextContents;
@property long long accessibilityNumberOfCharacters; // @dynamic accessibilityNumberOfCharacters;
@property(getter=isAccessibilityOrderedByRow) BOOL accessibilityOrderedByRow; // @dynamic accessibilityOrderedByRow;
@property long long accessibilityOrientation; // @dynamic accessibilityOrientation;
@property(retain) id accessibilityOverflowButton; // @dynamic accessibilityOverflowButton;
@property(copy) NSString *accessibilityPlaceholderValue; // @dynamic accessibilityPlaceholderValue;
@property(copy) NSArray *accessibilityPreviousContents; // @dynamic accessibilityPreviousContents;
@property(getter=isAccessibilityProtectedContent) BOOL accessibilityProtectedContent; // @dynamic accessibilityProtectedContent;
@property(retain) id accessibilityProxy; // @dynamic accessibilityProxy;
@property(getter=isAccessibilityRequired) BOOL accessibilityRequired; // @dynamic accessibilityRequired;
@property(copy) NSString *accessibilityRole; // @dynamic accessibilityRole;
@property(copy) NSString *accessibilityRoleDescription; // @dynamic accessibilityRoleDescription;
@property long long accessibilityRowCount; // @dynamic accessibilityRowCount;
@property(copy) NSArray *accessibilityRowHeaderUIElements; // @dynamic accessibilityRowHeaderUIElements;
@property struct _NSRange accessibilityRowIndexRange; // @dynamic accessibilityRowIndexRange;
@property(copy) NSArray *accessibilityRows; // @dynamic accessibilityRows;
@property long long accessibilityRulerMarkerType; // @dynamic accessibilityRulerMarkerType;
@property(retain) id accessibilitySearchButton; // @dynamic accessibilitySearchButton;
@property(retain) id accessibilitySearchMenu; // @dynamic accessibilitySearchMenu;
@property(getter=isAccessibilitySelected) BOOL accessibilitySelected; // @dynamic accessibilitySelected;
@property(copy) NSArray *accessibilitySelectedCells; // @dynamic accessibilitySelectedCells;
@property(copy) NSArray *accessibilitySelectedChildren; // @dynamic accessibilitySelectedChildren;
@property(copy) NSArray *accessibilitySelectedColumns; // @dynamic accessibilitySelectedColumns;
@property(copy) NSArray *accessibilitySelectedRows; // @dynamic accessibilitySelectedRows;
@property(copy) NSString *accessibilitySelectedText; // @dynamic accessibilitySelectedText;
@property struct _NSRange accessibilitySelectedTextRange; // @dynamic accessibilitySelectedTextRange;
@property(copy) NSArray *accessibilitySelectedTextRanges; // @dynamic accessibilitySelectedTextRanges;
@property(copy) NSArray *accessibilityServesAsTitleForUIElements; // @dynamic accessibilityServesAsTitleForUIElements;
@property struct _NSRange accessibilitySharedCharacterRange; // @dynamic accessibilitySharedCharacterRange;
@property(copy) NSArray *accessibilitySharedFocusElements; // @dynamic accessibilitySharedFocusElements;
@property(copy) NSArray *accessibilitySharedTextUIElements; // @dynamic accessibilitySharedTextUIElements;
@property(retain) id accessibilityShownMenu; // @dynamic accessibilityShownMenu;
@property long long accessibilitySortDirection; // @dynamic accessibilitySortDirection;
@property(copy) NSArray *accessibilitySplitters; // @dynamic accessibilitySplitters;
@property(copy) NSString *accessibilitySubrole; // @dynamic accessibilitySubrole;
@property(copy) NSArray *accessibilityTabs; // @dynamic accessibilityTabs;
@property(copy) NSString *accessibilityTitle; // @dynamic accessibilityTitle;
@property __weak id accessibilityTitleUIElement; // @dynamic accessibilityTitleUIElement;
@property(retain) id accessibilityToolbarButton; // @dynamic accessibilityToolbarButton;
@property __weak id accessibilityTopLevelUIElement; // @dynamic accessibilityTopLevelUIElement;
@property(copy) NSURL *accessibilityURL; // @dynamic accessibilityURL;
@property(copy) NSString *accessibilityUnitDescription; // @dynamic accessibilityUnitDescription;
@property long long accessibilityUnits; // @dynamic accessibilityUnits;
@property(retain) id accessibilityValue; // @dynamic accessibilityValue;
@property(copy) NSString *accessibilityValueDescription; // @dynamic accessibilityValueDescription;
@property(retain) id accessibilityVerticalScrollBar; // @dynamic accessibilityVerticalScrollBar;
@property(copy) NSString *accessibilityVerticalUnitDescription; // @dynamic accessibilityVerticalUnitDescription;
@property long long accessibilityVerticalUnits; // @dynamic accessibilityVerticalUnits;
@property(copy) NSArray *accessibilityVisibleCells; // @dynamic accessibilityVisibleCells;
@property struct _NSRange accessibilityVisibleCharacterRange; // @dynamic accessibilityVisibleCharacterRange;
@property(copy) NSArray *accessibilityVisibleChildren; // @dynamic accessibilityVisibleChildren;
@property(copy) NSArray *accessibilityVisibleColumns; // @dynamic accessibilityVisibleColumns;
@property(copy) NSArray *accessibilityVisibleRows; // @dynamic accessibilityVisibleRows;
@property(retain) id accessibilityWarningValue; // @dynamic accessibilityWarningValue;
@property __weak id accessibilityWindow; // @dynamic accessibilityWindow;
@property(copy) NSArray *accessibilityWindows; // @dynamic accessibilityWindows;
@property(retain) id accessibilityZoomButton; // @dynamic accessibilityZoomButton;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

