//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSView.h>

#import <AppKit/NSAnimationDelegate-Protocol.h>
#import <AppKit/NSDetachedTabDraggingImageToWindowTransitionControllerDelegate-Protocol.h>
#import <AppKit/NSDraggingDestination-Protocol.h>
#import <AppKit/NSMorphingDragImageControllerDragSource-Protocol.h>
#import <AppKit/NSTabBarSyncedButtonDelegate-Protocol.h>
#import <AppKit/NSTabButtonDelegate-Protocol.h>
#import <AppKit/NSTabDraggingDestination-Protocol.h>

@class CABackdropLayer, NSArray, NSBackgroundColorView, NSMapTable, NSMutableArray, NSScrollView, NSString, NSTabBarEmptyRegionPlaceholderButton, NSTabButton, NSTitlebarSeparatorView, NSTrackingArea;
@protocol NSTabBarDelegate, NSTabBarSyncedButton;

@interface NSTabBar : NSView <NSDetachedTabDraggingImageToWindowTransitionControllerDelegate, NSMorphingDragImageControllerDragSource, NSAnimationDelegate, NSDraggingDestination, NSTabButtonDelegate, NSTabBarSyncedButtonDelegate, NSTabDraggingDestination>
{
    long long _numberOfGroupUpdates;
    NSTrackingArea *_trackingArea;
    NSTabButton *_tabButtonUnderMouse;
    NSScrollView *_scrollView;
    NSView *_scrollViewDocumentView;
    NSView *_selectedTabContainerView;
    NSView *_tabContainer;
    NSMutableArray *_tabBarViewItems;
    NSMutableArray *_tabButtons;
    NSMapTable *_tabBarViewItemsToTabButtons;
    unsigned long long _selectedTabButtonIndex;
    unsigned long long _firstInsertedTabButtonIndex;
    NSTabButton *_draggedTabButton;
    struct CGPoint _mouseOffsetOnSelectedTab;
    struct CGPoint _mouseLocationForDraggedTab;
    unsigned long long _dragSourceIndex;
    unsigned long long _dropIndex;
    unsigned long long _fallbackSelectedTabButtonIndex;
    struct CGRect _layoutBounds;
    struct CGRect _firstButtonFrame;
    double _remainingWidthInTabBarAfterDividingEvenlyAmongButtons;
    double _scrollViewContentWidth;
    unsigned long long _numberOfTabsForLayout;
    unsigned long long _stackingRegions;
    double _edgeScrollingFactor;
    double _titleScrollingFactor;
    double _selectedButtonSlowingFactor;
    double _slowingDistance;
    NSView *_backgroundView;
    NSView *_maskingContainerView;
    CABackdropLayer *_backdropLayer;
    NSBackgroundColorView *_backgroundColorView;
    NSTitlebarSeparatorView *_topBorderSeparatorView;
    NSView *_pinnedTabsContainer;
    unsigned long long _numberOfPinnedTabs;
    unsigned long long _numberOfPinnedTabsForLayout;
    double _timeOfLastHoveredIndexChange;
    unsigned long long _lastHoveredIndexWhileWaitingForReorderingToKickIn;
    NSTabBarEmptyRegionPlaceholderButton *_placeholderTabForEmptyUnpinnedRegion;
    NSView *_externalNextKeyView;
    NSView *_firstKeyView;
    NSView *_lastKeyView;
    id <NSTabBarDelegate> _delegate;
    id <NSTabBarSyncedButton> _buttonThatSyncsWithPlaceholderTabInEmptyUnpinnedRegion;
    NSView *_createTabButton;
    long long _springLoadingTargetIndex;
    unsigned int _shouldReduceTransparency:1;
    unsigned int _didLayOutAfterMovingToWindow:1;
    unsigned int _isDraggingInPinningRegion:1;
    unsigned int _mustDragExtraDistanceToReorder:1;
    unsigned int _needsWindowChangedKeyStateAfterMove:1;
    unsigned int _isDisabled:1;
    unsigned int _forcesActiveWindowState:1;
    unsigned int _shouldShowAddButton:1;
    unsigned int _isStackingButtons:1;
    unsigned int _selectedButtonIsDetached:1;
    unsigned int _hideWindowAfterDetachingOnlyTab:1;
    unsigned int _selectionIsChanging:1;
    unsigned int _isInteractivelyClosingTabs:1;
    unsigned int _isScrollingToRevealAddedTab:1;
    unsigned int _useModalCollapsedLayout:1;
}

+ (id)accessibilityLabelForNumberOfTabs:(unsigned long long)arg1 andNumberOfPinnedTabs:(unsigned long long)arg2;
+ (id)_tabBarColorNamed:(id)arg1;
@property(nonatomic) __weak id <NSTabBarSyncedButton> buttonThatSyncsWithPlaceholderTabInEmptyUnpinnedRegion; // @synthesize buttonThatSyncsWithPlaceholderTabInEmptyUnpinnedRegion=_buttonThatSyncsWithPlaceholderTabInEmptyUnpinnedRegion;
@property(nonatomic) __weak NSView *lastKeyView; // @synthesize lastKeyView=_lastKeyView;
@property(nonatomic) __weak NSView *firstKeyView; // @synthesize firstKeyView=_firstKeyView;
@property __weak id <NSTabBarDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) NSArray *tabButtons; // @synthesize tabButtons=_tabButtons;
- (void).cxx_destruct;
- (id)_getTabRectsForInsertingTabCount:(long long)arg1;
- (struct CGRect)_getFirstTabRectForInsertingTabCount:(long long)arg1;
- (struct CGRect)_defaultTabItemRectForTabCount:(long long)arg1;
- (void)_windowChangedKeyState;
- (void)button:(id)arg1 didSetHighlightStateToPressed:(BOOL)arg2 hovered:(BOOL)arg3;
- (void)_toggleTransparencyIfNecessary;
- (void)_accessibilityDisplayOptionsDidChange:(id)arg1;
- (id)accessibilityLabel;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)isAccessibilityElement;
- (void)springLoadingExited:(id)arg1;
- (void)springLoadingActivated:(BOOL)arg1 draggingInfo:(id)arg2;
- (void)springLoadingHighlightChanged:(id)arg1;
- (unsigned long long)springLoadingUpdated:(id)arg1;
- (unsigned long long)springLoadingEntered:(id)arg1;
- (BOOL)worksWhenModal;
- (unsigned long long)_doSpringLoadingSetupForDraggingInfo:(id)arg1;
- (unsigned long long)_dragOperationForDraggingInfo:(id)arg1;
- (void)_autoSelectIndex:(long long)arg1;
- (void)_setIsSpringLoadingFlashing:(BOOL)arg1 index:(long long)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (void)_setSpringLoadingTargetIndex:(long long)arg1 draggingInfo:(id)arg2;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)wantsPeriodicDraggingUpdates;
- (BOOL)willPinTabForTabDragOperation:(id)arg1;
- (unsigned long long)_updateDropIndexWithTabDraggingInfo:(id)arg1;
- (BOOL)performTabDragOperation:(id)arg1;
- (void)tabDraggingExited:(id)arg1;
- (unsigned long long)tabDraggingUpdated:(id)arg1;
- (unsigned long long)tabDraggingEntered:(id)arg1;
- (BOOL)wantsPeriodicTabDraggingUpdates;
- (void)detachedTabDraggingImageToWindowTransitionController:(id)arg1 didFinishTransitionAnimationForWindow:(id)arg2;
- (id)destinationWindowForDetachedTabDraggingImageToWindowTransitionController:(id)arg1;
- (BOOL)destinationWindowShouldMoveToDropPointInSpace:(unsigned long long)arg1 forDetachedTabDraggingImageToWindowTransitionController:(id)arg2;
- (id)dragDestinationWindowForMorphingDragImage:(id)arg1;
- (void)morphingDragImage:(id)arg1 wasDroppedAtPointOnScreen:(struct CGPoint)arg2;
- (id)_destinationWindowForDropOnScreenOperation;
- (id)_miniWindowDragImageForTabButton:(id)arg1;
- (id)_pinnedTabDragImageForTabButton:(id)arg1;
- (id)_tabDragImageForTabButton:(id)arg1;
- (double)_miniWindowDragImageWidth;
- (void)_detachTabAndPositionUnderCursor:(id)arg1;
- (struct CGPoint)_mouseLocationInDragImageForTabButton:(id)arg1;
- (BOOL)_shouldDetachTabForMouseEvent:(id)arg1;
- (BOOL)_canDetachTab;
- (void)_cancelReorderingRestrictionsAfterPinning;
- (void)_startReorderingRestrictionsAfterPinning;
- (void)_autoscrollButtonsForStackingRegion:(unsigned long long)arg1;
- (void)_updateDropIndexWithDraggingLocation:(struct CGPoint)arg1;
- (long long)_tabDragResultForEventTrackingWithStartEvent:(id)arg1;
- (long long)_tabDragResultForInitialDragWithStartEvent:(id)arg1;
- (struct CGSize)_currentEventOffsetFromEvent:(id)arg1;
- (void)_trackReorderingEventsWithStartEvent:(id)arg1 forTabButton:(id)arg2;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_setTabButtonUnderMouse:(id)arg1 shouldAnimateHighlight:(BOOL)arg2;
- (void)_setIndexOfTabUnderMouse:(unsigned long long)arg1 animated:(BOOL)arg2;
- (BOOL)_shouldShowCloseButtonForTabBarViewItem:(id)arg1;
- (BOOL)_shouldHighlightButtonOnHover;
- (void)_updateIndexOfTabUnderCurrentMouseLocation:(BOOL)arg1;
- (void)updateTrackingAreas;
- (void)_updateButtonStateAndKeyLoop;
- (void)_trackMouseEventsForEvent:(id)arg1 onTabAtIndex:(unsigned long long)arg2;
- (BOOL)_dragShouldBeginFromMouseDown:(id)arg1 withExpiration:(id)arg2 xHysteresis:(float)arg3 yHysteresis:(float)arg4;
- (BOOL)_canDragItems;
- (void)_trackMouseEventsForEvent:(id)arg1 inStackingRegion:(unsigned long long)arg2;
- (id)_trackMouseEventsUntilMouseUp:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)otherMouseUp:(id)arg1;
- (void)_animateTabBackgroundOnClickEventIfAppropriate:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)tabButtonDidBecomeFirstResponder:(id)arg1;
- (void)closeTabButton:(id)arg1;
- (void)selectTabButton:(id)arg1;
- (id)tabButton:(id)arg1 menuForEvent:(id)arg2;
- (void)_moveButton:(id)arg1 forTabBarViewItem:(id)arg2 toIndex:(unsigned long long)arg3;
- (void)updateCloseButtonVisibilityForTabBarViewItem:(id)arg1;
- (void)moveTabBarViewItem:(id)arg1 toIndex:(unsigned long long)arg2;
- (void)selectTabBarViewItem:(id)arg1 animated:(BOOL)arg2;
- (void)selectTabBarViewItem:(id)arg1;
- (void)removeTabBarViewItem:(id)arg1;
- (void)removeTabBarViewItemAtIndex:(unsigned long long)arg1;
- (void)insertTabBarViewItem:(id)arg1 atIndex:(unsigned long long)arg2 animated:(BOOL)arg3;
- (void)insertTabBarViewItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addTabBarViewItem:(id)arg1;
@property(copy) NSArray *tabBarViewItems;
@property BOOL forcesActiveWindowState; // @dynamic forcesActiveWindowState;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)_scrollToButtonAtIndex:(unsigned long long)arg1 canScrollSelectedButton:(BOOL)arg2;
- (struct CGRect)_rectWithUnstackedButtons;
- (struct NSEdgeInsets)_layoutBoundsEdgeInsetsForUnstackedButtons;
@property unsigned long long selectedTabButtonIndex;
- (void)_syncedScrollBoundsToOrigin:(struct CGPoint)arg1 animated:(BOOL)arg2;
- (void)_scrollAfterClickingOnStackingRegion:(unsigned long long)arg1;
- (struct CGPoint)_scrollTargetPointForStackingRegion:(unsigned long long)arg1;
- (double)_effectiveRightStackWidthForButtonAtIndex:(unsigned long long)arg1;
- (double)_effectiveLeftStackWidthForButtonAtIndex:(unsigned long long)arg1;
- (unsigned long long)_visibleTabIndexAtPoint:(struct CGPoint)arg1 stackingRegion:(unsigned long long *)arg2 ignorePointsOutsideOfLayoutBounds:(BOOL)arg3;
- (unsigned long long)_visibleTabIndexAtPoint:(struct CGPoint)arg1 stackingRegion:(unsigned long long *)arg2;
- (unsigned long long)_tabIndexAtPointWhenLayingOutButtonsToAlignWithWindowCenter:(struct CGPoint)arg1;
- (unsigned long long)_tabIndexAtPoint:(struct CGPoint)arg1 withButtonWidth:(double)arg2 supplementalWidth:(double)arg3;
- (unsigned long long)_tabIndexAtPoint:(struct CGPoint)arg1;
- (struct CGRect)_viewFrameForAdjustedButtonFrame:(struct CGRect)arg1;
- (double)_horizontalOffsetForButtonAtIndex:(unsigned long long)arg1 frontmostButtonIndex:(unsigned long long)arg2 slowingFactor:(double)arg3;
- (double)_titleCenterOffsetForButtonAtIndex:(unsigned long long)arg1 frontmostButtonIndex:(unsigned long long)arg2;
- (struct CGRect)_centeringFrameForButtonAtIndex:(unsigned long long)arg1;
- (struct CGRect)_adjustedFrameForButtonAtIndex:(unsigned long long)arg1 isHidden:(char *)arg2;
- (struct CGRect)_frameForButtonAtIndex:(unsigned long long)arg1 firstButtonOffset:(double)arg2 buttonWidth:(double)arg3 supplementalWidth:(double)arg4;
- (struct CGRect)_unstackedFrameForButtonAtIndex:(unsigned long long)arg1;
- (unsigned long long)_calculateStackingRegions;
- (double)_buttonWidthForNumberOfButtons:(unsigned long long)arg1 inWidth:(double)arg2 remainderWidth:(double *)arg3;
- (void)_updateButtonWidthAndRemainingWidthInTabBarToDivideAmongButtons;
- (void)_recalculateLayout;
- (double)_layoutBoundsWidth;
- (void)_updateNewTabButton;
- (void)_addNewTabButton;
- (void)_newTabWithinWindow:(id)arg1;
- (double)_pinningRegionWidth;
- (double)_pinnedTabsWidth;
- (double)currentButtonWidth;
- (BOOL)_shouldLayOutButtonsToAlignWithWindowCenter;
- (BOOL)_shouldAlignTabButtonTitleWithWindowCenter;
- (unsigned long long)_numberOfPinnedTabsForLayout;
- (unsigned long long)_numberOfTabsForLayout;
- (struct CGRect)tabButtonFrameForItem:(id)arg1;
- (void)_restackButtonViews;
- (unsigned long long)_frontmostButtonIndex;
- (void)_updatePinnedTabs;
- (struct CGRect)_placeholderTabForEmptyUnpinnedRegionButtonFrame;
- (void)_installPlaceholderTabForEmptyUnpinnedRegion;
- (void)_uninstallPlaceholderTabForEmptyUnpinnedRegion;
- (BOOL)_shouldCreatePlaceholderTabForEmptyUnpinnedRegion;
- (void)_insertTabButtonWithTabViewItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_layOutButtonsAnimated:(BOOL)arg1;
- (void)_animateButtonLayout:(id)arg1;
- (double)_titleCenterOffsetForButton:(id)arg1;
- (double)_windowCenterX;
- (void)_moveButtonToExpectedContainerView:(id)arg1;
- (void)_layOutDraggedButtonAnimated:(BOOL)arg1;
- (void)_recalculateLayoutAndUpdateContainerViewFrames;
- (double)_offsetFromLeftEdge;
- (void)_toggleBackdropLayerVisibilityIfNecessary;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)layout;
- (void)setNeedsLayout:(BOOL)arg1;
- (void)_layoutSublayersOfLayer:(id)arg1;
- (void)_reallyUpdateButtonsAndLayOutAnimated:(BOOL)arg1 isSelectingButton:(BOOL)arg2;
- (void)_updateButtonsAndLayOutAnimated:(BOOL)arg1 isSelectingButton:(BOOL)arg2;
- (void)_updateButtonsAndLayOutAnimated:(BOOL)arg1;
- (void)_endAnimationGrouping;
- (void)_beginAnimationGrouping;
- (BOOL)_shouldLayOutButtonsNow;
- (void)_clipViewBoundsChanged:(id)arg1;
- (struct CGRect)_contentBounds;
- (BOOL)isOpaque;
- (BOOL)allowsVibrancy;
- (BOOL)_isInFullscreenToolbarWindow;
- (void)endGroupUpdatesAnimated:(BOOL)arg1;
- (void)beginGroupUpdates;
- (void)setNextKeyView:(id)arg1;
- (void)dealloc;
@property BOOL useModalCollapsedLayout; // @dynamic useModalCollapsedLayout;
@property BOOL shouldShowAddButton; // @dynamic shouldShowAddButton;
@property(getter=isEnabled) BOOL enabled; // @dynamic enabled;
- (void)_commonTabBarViewInit;
- (BOOL)_shouldDoLayerPerformanceUpdates;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

