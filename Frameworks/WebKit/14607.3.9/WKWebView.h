//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSView.h>

#import <WebKit/NSDraggingSource-Protocol.h>
#import <WebKit/NSFilePromiseProviderDelegate-Protocol.h>
#import <WebKit/NSTextInputClient-Protocol.h>
#import <WebKit/NSTextInputClient_Async-Protocol.h>
#import <WebKit/NSTouchBarProvider-Protocol.h>
#import <WebKit/NSUserInterfaceValidations-Protocol.h>
#import <WebKit/WKShareSheetDelegate-Protocol.h>
#import <WebKit/WebViewImplDelegate-Protocol.h>

@class NSArray, NSColor, NSData, NSString, NSTouchBar, NSURL, WKBackForwardList, WKBrowsingContextHandle, WKWebViewConfiguration, _WKFrameHandle, _WKInspector, _WKSessionState, _WKThumbnailView;
@protocol WKHistoryDelegatePrivate, WKNavigationDelegate, WKUIDelegate, _WKDiagnosticLoggingDelegate, _WKFindDelegate, _WKFullscreenDelegate, _WKIconLoadingDelegate, _WKInputDelegate;

@interface WKWebView : NSView <NSUserInterfaceValidations, NSFilePromiseProviderDelegate, NSDraggingSource, NSTouchBarProvider, WebViewImplDelegate, NSTextInputClient, NSTextInputClient_Async, WKShareSheetDelegate>
{
    struct RetainPtr<WKWebViewConfiguration> _configuration;
    RefPtr_a805eeb8 _page;
    struct unique_ptr<WebKit::NavigationState, std::__1::default_delete<WebKit::NavigationState>> _navigationState;
    struct unique_ptr<WebKit::UIDelegate, std::__1::default_delete<WebKit::UIDelegate>> _uiDelegate;
    struct unique_ptr<WebKit::IconLoadingDelegate, std::__1::default_delete<WebKit::IconLoadingDelegate>> _iconLoadingDelegate;
    unsigned long long _observedRenderingProgressEvents;
    struct WeakObjCPtr<id<_WKInputDelegate>> _inputDelegate;
    Optional_bd583063 _resolutionForShareSheetImmediateCompletionForTesting;
    struct RetainPtr<WKSafeBrowsingWarning> _safeBrowsingWarning;
    struct unique_ptr<WebKit::WebViewImpl, std::__1::default_delete<WebKit::WebViewImpl>> _impl;
    struct RetainPtr<WKTextFinderClient> _textFinderClient;
    double _minimumEffectiveDeviceWidth;
}

+ (BOOL)handlesURLScheme:(id)arg1;
+ (id)_visitUnsafeWebsiteSentinel;
+ (id)_confirmMalwareSentinel;
+ (BOOL)_handlesSafeBrowsing;
+ (void)_setStringForFind:(id)arg1;
+ (id)_stringForFind;
- (id).cxx_construct;
- (void).cxx_destruct;
- (Optional_bd583063)_resolutionForShareSheetImmediateCompletionForTesting;
- (id)urlSchemeHandlerForURLScheme:(id)arg1;
- (void)_interactWithMediaControlsForTesting;
- (void)_web_didRemoveMediaControlsManager;
- (void)_web_didAddMediaControlsManager:(id)arg1;
- (id)candidateListTouchBarItem;
- (id)makeTouchBar;
- (void)draggingSession:(id)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)filePromiseProvider:(id)arg1 writePromiseToURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)filePromiseProvider:(id)arg1 fileNameForType:(id)arg2;
- (void)_web_gestureEventWasNotHandledByWebCore:(id)arg1;
- (void)_web_editorStateDidChange;
- (void)_web_dismissContentRelativeChildWindowsWithAnimation:(BOOL)arg1;
- (void)_web_dismissContentRelativeChildWindows;
- (void)_web_didPerformDragOperation:(BOOL)arg1;
- (unsigned long long)_web_dragDestinationActionForDraggingInfo:(id)arg1;
- (void)_web_didChangeContentSize:(struct CGSize)arg1;
- (void)_web_completeImmediateActionAnimation;
- (void)_web_cancelImmediateActionAnimation;
- (void)_web_prepareForImmediateActionAnimation;
- (id)_web_immediateActionAnimationControllerForHitTestResultInternal:(struct HitTestResult *)arg1 withType:(unsigned int)arg2 userData:(struct Object *)arg3;
- (id)_web_superHitTest:(struct CGPoint)arg1;
- (void)_web_superKeyDown:(id)arg1;
- (BOOL)_web_superPerformKeyEquivalent:(id)arg1;
- (void)_web_superDoCommandBySelector:(SEL)arg1;
- (id)_web_superAccessibilityAttributeValue:(id)arg1;
- (void)_web_superRemoveTrackingRect:(long long)arg1;
- (void)_web_superSmartMagnifyWithEvent:(id)arg1;
- (void)_web_superMagnifyWithEvent:(id)arg1;
- (void)_web_superSwipeWithEvent:(id)arg1;
- (void)_web_superQuickLookWithEvent:(id)arg1;
- (id)_web_superInputContext;
- (void)selectFindMatch:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getSelectedText:(CDUnknownBlockType)arg1;
- (id)documentContainerView;
- (void)replaceMatches:(id)arg1 withString:(id)arg2 inSelectionOnly:(BOOL)arg3 resultCollector:(CDUnknownBlockType)arg4;
- (void)findMatchesForString:(id)arg1 relativeToMatch:(id)arg2 findOptions:(unsigned long long)arg3 maxResults:(unsigned long long)arg4 resultCollector:(CDUnknownBlockType)arg5;
- (id)_ensureTextFinderClient;
- (void)rotateWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
@property(nonatomic) BOOL allowsMagnification;
@property(nonatomic) double magnification;
- (void)setMagnification:(double)arg1 centeredAtPoint:(struct CGPoint)arg2;
- (void)smartMagnifyWithEvent:(id)arg1;
@property(nonatomic) BOOL allowsBackForwardNavigationGestures;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (void)pasteboardChangedOwner:(id)arg1;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)_removeTrackingRects:(long long *)arg1 count:(int)arg2;
- (void)removeTrackingRect:(long long)arg1;
- (void)_addTrackingRects:(struct CGRect *)arg1 owner:(id)arg2 userDataList:(void **)arg3 assumeInsideList:(char *)arg4 trackingNums:(long long *)arg5 count:(int)arg6;
- (long long)_addTrackingRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3 assumeInside:(BOOL)arg4 useTrackingNum:(int)arg5;
- (long long)addTrackingRect:(struct CGRect)arg1 owner:(id)arg2 userData:(void *)arg3 assumeInside:(BOOL)arg4;
- (void)quickLookWithEvent:(id)arg1;
- (long long)conversationIdentifier;
- (id)hitTest:(struct CGPoint)arg1;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityFocusedUIElement;
- (void)_activeSpaceDidChange:(id)arg1;
- (void)viewDidChangeBackingProperties;
- (void)viewDidUnhide;
- (void)viewDidHide;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)_windowResizeMouseLocationIsInVisibleScrollerThumb:(struct CGPoint)arg1;
- (id)_hitTest:(struct CGPoint *)arg1 dragTypes:(id)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (id)validAttributesForMarkedText;
- (void)characterIndexForPoint:(struct CGPoint)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)firstRectForCharacterRange:(struct _NSRange)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)attributedSubstringForProposedRange:(struct _NSRange)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)hasMarkedTextWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)markedRangeWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)selectedRangeWithCompletionHandler:(CDUnknownBlockType)arg1;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (void)typingAttributesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (struct _NSRange)markedRange;
- (BOOL)hasMarkedText;
- (struct _NSRange)selectedRange;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)flagsChanged:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (id)inputContext;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (void)insertText:(id)arg1;
- (void)doCommandBySelector:(SEL)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)pressureChangeWithEvent:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (BOOL)_wantsKeyDownForEvent:(id)arg1;
- (void)capitalizeWord:(id)arg1;
- (void)lowercaseWord:(id)arg1;
- (void)uppercaseWord:(id)arg1;
- (void)toggleAutomaticTextReplacement:(id)arg1;
- (void)setAutomaticTextReplacementEnabled:(BOOL)arg1;
- (BOOL)isAutomaticTextReplacementEnabled;
- (void)toggleAutomaticLinkDetection:(id)arg1;
- (void)setAutomaticLinkDetectionEnabled:(BOOL)arg1;
- (BOOL)isAutomaticLinkDetectionEnabled;
- (void)toggleAutomaticDashSubstitution:(id)arg1;
- (void)setAutomaticDashSubstitutionEnabled:(BOOL)arg1;
- (BOOL)isAutomaticDashSubstitutionEnabled;
- (void)toggleAutomaticQuoteSubstitution:(id)arg1;
- (void)setAutomaticQuoteSubstitutionEnabled:(BOOL)arg1;
- (BOOL)isAutomaticQuoteSubstitutionEnabled;
- (void)toggleSmartInsertDelete:(id)arg1;
- (void)orderFrontSubstitutionsPanel:(id)arg1;
- (void)toggleAutomaticSpellingCorrection:(id)arg1;
- (void)toggleGrammarChecking:(id)arg1;
- (void)setGrammarCheckingEnabled:(BOOL)arg1;
- (BOOL)isGrammarCheckingEnabled;
- (void)toggleContinuousSpellChecking:(id)arg1;
- (void)changeSpelling:(id)arg1;
- (void)checkSpelling:(id)arg1;
- (void)showGuessPanel:(id)arg1;
- (void)stopSpeaking:(id)arg1;
- (void)startSpeaking:(id)arg1;
- (void)changeAttributes:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)changeFont:(id)arg1;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)centerSelectionInVisibleArea:(id)arg1;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (void)yankAndSelect:(id)arg1;
- (void)yank:(id)arg1;
- (void)unscript:(id)arg1;
- (void)underline:(id)arg1;
- (void)transpose:(id)arg1;
- (void)takeFindStringFromSelection:(id)arg1;
- (void)swapWithMark:(id)arg1;
- (void)superscript:(id)arg1;
- (void)subscript:(id)arg1;
- (void)setMark:(id)arg1;
- (void)selectWord:(id)arg1;
- (void)selectToMark:(id)arg1;
- (void)selectSentence:(id)arg1;
- (void)selectParagraph:(id)arg1;
- (void)selectLine:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)scrollToEndOfDocument:(id)arg1;
- (void)scrollToBeginningOfDocument:(id)arg1;
- (void)scrollLineUp:(id)arg1;
- (void)scrollLineDown:(id)arg1;
- (void)scrollPageUp:(id)arg1;
- (void)scrollPageDown:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)paste:(id)arg1;
- (void)pageUpAndModifySelection:(id)arg1;
- (void)pageUp:(id)arg1;
- (void)pageDownAndModifySelection:(id)arg1;
- (void)pageDown:(id)arg1;
- (void)outdent:(id)arg1;
- (void)moveWordRightAndModifySelection:(id)arg1;
- (void)moveWordRight:(id)arg1;
- (void)moveWordLeftAndModifySelection:(id)arg1;
- (void)moveWordLeft:(id)arg1;
- (void)moveWordForwardAndModifySelection:(id)arg1;
- (void)moveWordForward:(id)arg1;
- (void)moveWordBackwardAndModifySelection:(id)arg1;
- (void)moveWordBackward:(id)arg1;
- (void)moveUpAndModifySelection:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;
- (void)moveToRightEndOfLine:(id)arg1;
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;
- (void)moveToLeftEndOfLine:(id)arg1;
- (void)moveToEndOfSentenceAndModifySelection:(id)arg1;
- (void)moveToEndOfSentence:(id)arg1;
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;
- (void)moveToEndOfParagraph:(id)arg1;
- (void)moveToEndOfLineAndModifySelection:(id)arg1;
- (void)moveToEndOfLine:(id)arg1;
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;
- (void)moveToEndOfDocument:(id)arg1;
- (void)moveToBeginningOfSentenceAndModifySelection:(id)arg1;
- (void)moveToBeginningOfSentence:(id)arg1;
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;
- (void)moveToBeginningOfParagraph:(id)arg1;
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;
- (void)moveToBeginningOfLine:(id)arg1;
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;
- (void)moveToBeginningOfDocument:(id)arg1;
- (void)moveRightAndModifySelection:(id)arg1;
- (void)moveRight:(id)arg1;
- (void)moveParagraphForwardAndModifySelection:(id)arg1;
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;
- (void)moveLeftAndModifySelection:(id)arg1;
- (void)moveLeft:(id)arg1;
- (void)moveForwardAndModifySelection:(id)arg1;
- (void)moveForward:(id)arg1;
- (void)moveDownAndModifySelection:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveBackwardAndModifySelection:(id)arg1;
- (void)moveBackward:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)makeTextWritingDirectionNatural:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)insertTabIgnoringFieldEditor:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertParagraphSeparator:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertLineBreak:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)indent:(id)arg1;
- (void)ignoreSpelling:(id)arg1;
- (void)deleteWordForward:(id)arg1;
- (void)deleteWordBackward:(id)arg1;
- (void)deleteToMark:(id)arg1;
- (void)deleteToEndOfParagraph:(id)arg1;
- (void)deleteToEndOfLine:(id)arg1;
- (void)deleteToBeginningOfParagraph:(id)arg1;
- (void)deleteToBeginningOfLine:(id)arg1;
- (void)deleteForward:(id)arg1;
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;
- (void)deleteBackward:(id)arg1;
- (void)delete:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (void)alignRight:(id)arg1;
- (void)alignLeft:(id)arg1;
- (void)alignJustified:(id)arg1;
- (void)alignCenter:(id)arg1;
- (void)renewGState;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)prepareContentInRect:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (BOOL)isFlipped;
- (void)viewDidEndLiveResize;
- (void)viewWillStartLiveResize;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)_updateAccessibilityEventsEnabled;
- (void)_didInvalidateDataForAttachment:(struct Attachment *)arg1;
- (void)_didRemoveAttachment:(struct Attachment *)arg1;
- (void)_didInsertAttachment:(struct Attachment *)arg1 withSource:(id)arg2;
- (void)_clearSafeBrowsingWarningIfForMainFrameNavigation;
- (void)_clearSafeBrowsingWarning;
- (void)_showSafeBrowsingWarning:(const struct SafeBrowsingWarning *)arg1 completionHandler:(CompletionHandler_0810ae1c *)arg2;
- (void)_didChangeEditorState;
@property(nonatomic, setter=_setViewportSizeForCSSViewportUnits:) struct CGSize _viewportSizeForCSSViewportUnits;
@property(nonatomic) BOOL allowsLinkPreview;
- (struct WebPageProxy *)_page;
- (struct OpaqueWKPage *)_pageForTesting;
@property(copy, nonatomic) NSString *customUserAgent;
- (void)takeSnapshotWithConfiguration:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_evaluateJavaScript:(id)arg1 forceUserGesture:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)evaluateJavaScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)stopLoading;
- (id)reloadFromOrigin;
- (id)reload;
- (id)goForward;
- (id)goBack;
@property(readonly, nonatomic) BOOL canGoForward;
@property(readonly, nonatomic) BOOL canGoBack;
@property(readonly, nonatomic) struct __SecTrust *serverTrust;
@property(readonly, nonatomic) BOOL hasOnlySecureContent;
@property(readonly, nonatomic) double estimatedProgress;
@property(readonly, nonatomic, getter=isLoading) BOOL loading;
@property(readonly, copy, nonatomic) NSURL *URL;
@property(readonly, copy, nonatomic) NSString *title;
- (id)goToBackForwardListItem:(id)arg1;
- (id)loadData:(id)arg1 MIMEType:(id)arg2 characterEncodingName:(id)arg3 baseURL:(id)arg4;
- (id)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (id)loadFileURL:(id)arg1 allowingReadAccessToURL:(id)arg2;
- (id)loadRequest:(id)arg1;
@property(nonatomic, setter=_setIconLoadingDelegate:) __weak id <_WKIconLoadingDelegate> _iconLoadingDelegate;
@property(nonatomic) __weak id <WKUIDelegate> UIDelegate;
@property(nonatomic) __weak id <WKNavigationDelegate> navigationDelegate;
@property(readonly, nonatomic) WKBackForwardList *backForwardList;
@property(readonly, copy, nonatomic) WKWebViewConfiguration *configuration;
- (id)valueForUndefinedKey:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;
- (void)_setUpSQLiteDatabaseTrackerClient;
- (void)_initializeWithConfiguration:(id)arg1;
- (BOOL)_isValid;
- (id)initWithFrame:(struct CGRect)arg1;
@property(readonly, nonatomic) long long _spellCheckerDocumentTag;
@property(nonatomic, setter=_setIgnoresAllEvents:) BOOL _ignoresAllEvents;
@property(nonatomic, setter=_setThumbnailView:) _WKThumbnailView *_thumbnailView;
- (void)_prepareForMoveToWindow:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_removeMediaPlaybackControlsView;
- (void)_addMediaPlaybackControlsView:(id)arg1;
@property(readonly, nonatomic) id _mediaPlaybackControlsView;
@property(nonatomic, setter=_setWantsMediaPlaybackControlsView:) BOOL _wantsMediaPlaybackControlsView;
- (void)setUserInterfaceLayoutDirection:(long long)arg1;
- (id)_printOperationWithPrintInfo:(id)arg1 forFrame:(id)arg2;
- (id)_printOperationWithPrintInfo:(id)arg1;
@property(nonatomic, setter=_setAlwaysShowsVerticalScroller:) BOOL _alwaysShowsVerticalScroller;
@property(nonatomic, setter=_setAlwaysShowsHorizontalScroller:) BOOL _alwaysShowsHorizontalScroller;
@property(nonatomic, setter=_setShouldExpandContentToViewHeightForAutoLayout:) BOOL _shouldExpandContentToViewHeightForAutoLayout;
@property(nonatomic, setter=_setMinimumLayoutWidth:) double _minimumLayoutWidth;
@property(nonatomic, setter=_setAutomaticallyAdjustsContentInsets:) BOOL _automaticallyAdjustsContentInsets;
- (id)_immediateActionAnimationControllerForHitTestResult:(id)arg1 withType:(long long)arg2 userData:(id)arg3;
@property(nonatomic, setter=_setRubberBandingEnabled:) unsigned long long _rubberBandingEnabled;
@property(readonly, nonatomic) unsigned long long _pinnedState;
@property(readonly) NSColor *_pageExtendedBackgroundColor;
@property(nonatomic, setter=_setTopContentInset:) double _topContentInset;
@property(nonatomic, setter=_setOverrideDeviceScaleFactor:) double _overrideDeviceScaleFactor;
- (void)shareSheetDidDismiss:(id)arg1;
@property(nonatomic, setter=_setWindowOcclusionDetectionEnabled:) BOOL _windowOcclusionDetectionEnabled;
@property(nonatomic, setter=_setOverlayScrollbarStyle:) unsigned long long _overlayScrollbarStyle;
@property(retain, nonatomic, setter=_setInspectorAttachmentView:) NSView *_inspectorAttachmentView;
- (void)_setDrawsTransparentBackground:(BOOL)arg1;
@property(nonatomic, setter=_setBackgroundColor:) NSColor *_backgroundColor;
@property(nonatomic, setter=_setDrawsBackground:) BOOL _drawsBackground;
- (void)_removeDataDetectedLinks:(CDUnknownBlockType)arg1;
- (void)_setPageMuted:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long _mediaCaptureState;
@property(nonatomic, setter=_setMediaCaptureEnabled:) BOOL _mediaCaptureEnabled;
- (void)_muteMediaCapture;
@property(readonly, nonatomic) BOOL _isInFullscreen;
@property(nonatomic, setter=_setFullscreenDelegate:) id <_WKFullscreenDelegate> _fullscreenDelegate;
@property(readonly, nonatomic) BOOL _webProcessIsResponsive;
@property(nonatomic, getter=_allowsMediaDocumentInlinePlayback, setter=_setAllowsMediaDocumentInlinePlayback:) BOOL _allowsMediaDocumentInlinePlayback;
@property(readonly, nonatomic) NSArray *_scrollPerformanceData;
@property(nonatomic, setter=_setScrollPerformanceDataCollectionEnabled:) BOOL _scrollPerformanceDataCollectionEnabled;
@property(nonatomic, setter=_setMinimumEffectiveDeviceWidth:) double _minimumEffectiveDeviceWidth;
@property(nonatomic, setter=_setViewScale:) double _viewScale;
@property(nonatomic, setter=_setBackgroundExtendsBeyondPage:) BOOL _backgroundExtendsBeyondPage;
@property(nonatomic, setter=_setFixedLayoutSize:) struct CGSize _fixedLayoutSize;
@property(nonatomic, setter=_setLayoutMode:) unsigned long long _layoutMode;
@property(readonly, nonatomic, getter=_isShowingNavigationGestureSnapshot) BOOL _showingNavigationGestureSnapshot;
@property(readonly, nonatomic, getter=_isPlayingAudio) BOOL _playingAudio;
@property(readonly, nonatomic, getter=_isDisplayingStandaloneMediaDocument) BOOL _displayingStandaloneMediaDocument;
@property(readonly, nonatomic, getter=_isDisplayingStandaloneImageDocument) BOOL _displayingStandaloneImageDocument;
@property(nonatomic, setter=_setInputDelegate:) __weak id <_WKInputDelegate> _inputDelegate;
- (void)_saveBackForwardSnapshotForItem:(id)arg1;
- (void)_hideFindUI;
- (void)_findString:(id)arg1 options:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (void)_countStringMatches:(id)arg1 options:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
@property(nonatomic, setter=_setFindDelegate:) __weak id <_WKFindDelegate> _findDelegate;
@property(nonatomic, setter=_setDiagnosticLoggingDelegate:) __weak id <_WKDiagnosticLoggingDelegate> _diagnosticLoggingDelegate;
@property(nonatomic, setter=_setPageZoomFactor:) double _pageZoomFactor;
@property(nonatomic, setter=_setTextZoomFactor:) double _textZoomFactor;
@property(readonly, nonatomic) BOOL _supportsTextZoom;
@property(readonly) unsigned long long _pageCount;
@property(nonatomic, setter=_setPaginationLineGridEnabled:) BOOL _paginationLineGridEnabled;
@property(nonatomic, setter=_setGapBetweenPages:) double _gapBetweenPages;
@property(nonatomic, setter=_setPageLength:) double _pageLength;
@property(nonatomic, setter=_setPaginationBehavesLikeColumns:) BOOL _paginationBehavesLikeColumns;
@property(nonatomic, setter=_setPaginationMode:) long long _paginationMode;
- (void)_getApplicationManifestWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_getContentsAsStringWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_getWebArchiveDataWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_getMainResourceDataWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(nonatomic, setter=_setObservedRenderingProgressEvents:) unsigned long long _observedRenderingProgressEvents;
@property(readonly, nonatomic) BOOL _networkRequestsInProgress;
@property(nonatomic, setter=_setAddsVisitedLinks:) BOOL _addsVisitedLinks;
@property(copy, nonatomic, setter=_setRemoteInspectionNameOverride:) NSString *_remoteInspectionNameOverride;
@property(nonatomic, setter=_setAllowsRemoteInspection:) BOOL _allowsRemoteInspection;
- (void)_updateWebsitePolicies:(id)arg1;
- (void)_evaluateJavaScriptWithoutUserGesture:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_isJITEnabled:(CDUnknownBlockType)arg1;
- (void)_showSafeBrowsingWarningWithURL:(id)arg1 title:(id)arg2 warning:(id)arg3 details:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_showSafeBrowsingWarningWithTitle:(id)arg1 warning:(id)arg2 details:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_simulateDeviceOrientationChangeWithAlpha:(double)arg1 beta:(double)arg2 gamma:(double)arg3;
- (id)_attachmentForIdentifier:(id)arg1;
- (id)_insertAttachmentWithFileWrapper:(id)arg1 contentType:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)_insertAttachmentWithFileWrapper:(id)arg1 contentType:(id)arg2 options:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)_insertAttachmentWithFilename:(id)arg1 contentType:(id)arg2 data:(id)arg3 options:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_close;
- (id)_restoreSessionState:(id)arg1 andNavigate:(BOOL)arg2;
- (void)_restoreFromSessionStateData:(id)arg1;
- (id)_sessionStateWithFilter:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _WKSessionState *_sessionState;
@property(readonly, nonatomic) NSData *_sessionStateData;
- (void)_setShouldSuppressFirstResponderChanges:(BOOL)arg1;
- (void)_killWebContentProcessAndResetState;
- (id)_reloadExpiredOnly;
- (id)_reloadWithoutContentBlockers;
@property(readonly, nonatomic) NSView *_safeBrowsingWarning;
- (void)_killWebContentProcess;
@property(readonly, nonatomic) int _provisionalWebProcessIdentifier;
@property(readonly, nonatomic) int _webProcessIdentifier;
@property(nonatomic, setter=_setUserContentExtensionsEnabled:) BOOL _userContentExtensionsEnabled;
@property(copy, setter=_setCustomUserAgent:) NSString *_customUserAgent;
@property(copy, setter=_setApplicationNameForUserAgent:) NSString *_applicationNameForUserAgent;
@property(readonly, nonatomic) NSString *_userAgent;
@property(readonly, nonatomic) NSString *_MIMEType;
@property(readonly, nonatomic) NSURL *_committedURL;
@property(readonly, nonatomic) NSArray *_certificateChain;
- (id)_loadRequest:(id)arg1 shouldOpenExternalURLs:(BOOL)arg2;
- (id)_loadData:(id)arg1 MIMEType:(id)arg2 characterEncodingName:(id)arg3 baseURL:(id)arg4 userData:(id)arg5;
- (void)_loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3;
@property(readonly, nonatomic) NSURL *_unreachableURL;
- (void)_resumeAllMediaPlayback;
- (void)_suspendAllMediaPlayback;
- (void)_stopAllMediaPlayback;
- (void)_togglePictureInPicture;
@property(readonly, nonatomic) BOOL _isPictureInPictureActive;
@property(readonly, nonatomic) BOOL _canTogglePictureInPicture;
- (void)_updateMediaPlaybackControlsManager;
@property(nonatomic, setter=_setHistoryDelegate:) __weak id <WKHistoryDelegatePrivate> _historyDelegate;
@property(readonly, nonatomic) WKBrowsingContextHandle *_handle;
@property(readonly, nonatomic) id _remoteObjectRegistry;
- (void)_takeFindStringFromSelection:(id)arg1;
@property(nonatomic, getter=_isEditable, setter=_setEditable:) BOOL _editable;
- (void)_changeListType:(id)arg1;
- (void)_decreaseListLevel:(id)arg1;
- (void)_increaseListLevel:(id)arg1;
- (void)_toggleStrikeThrough:(id)arg1;
- (void)_pasteAndMatchStyle:(id)arg1;
- (void)_pasteAsQuotation:(id)arg1;
- (void)_outdent:(id)arg1;
- (void)_indent:(id)arg1;
- (void)_insertNestedUnorderedList:(id)arg1;
- (void)_insertNestedOrderedList:(id)arg1;
- (void)_insertUnorderedList:(id)arg1;
- (void)_insertOrderedList:(id)arg1;
- (void)_alignRight:(id)arg1;
- (void)_alignLeft:(id)arg1;
- (void)_alignJustified:(id)arg1;
- (void)_alignCenter:(id)arg1;
- (void)_denyNextUserMediaRequest;
@property(readonly, nonatomic) _WKFrameHandle *_mainFrame;
@property(readonly, nonatomic) _WKInspector *_inspector;
@property(readonly, nonatomic) BOOL _hasInspectorFrontend;
- (void)_setShareSheetCompletesImmediatelyWithResolutionForTesting:(BOOL)arg1;
- (void)_setDefersLoadingForTesting:(BOOL)arg1;
- (BOOL)_completeBackSwipeForTesting;
- (BOOL)_beginBackSwipeForTesting;
- (void)_executeEditCommand:(id)arg1 argument:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_disableBackForwardSnapshotVolatilityForTesting;
- (void)_doAfterNextVisibleContentRectUpdate:(CDUnknownBlockType)arg1;
- (void)_doAfterNextPresentationUpdateWithoutWaitingForPainting:(CDUnknownBlockType)arg1;
- (void)_doAfterNextPresentationUpdateWithoutWaitingForAnimatedResizeForTesting:(CDUnknownBlockType)arg1;
- (void)_doAfterNextPresentationUpdate:(CDUnknownBlockType)arg1;
- (void)_internalDoAfterNextPresentationUpdate:(CDUnknownBlockType)arg1 withoutWaitingForPainting:(BOOL)arg2 withoutWaitingForAnimatedResize:(BOOL)arg3;
- (double)_pageScale;
- (void)_setPageScale:(double)arg1 withOrigin:(struct CGPoint)arg2;
- (void)_requestActiveNowPlayingSessionInfo:(CDUnknownBlockType)arg1;
- (void)_doAfterProcessingAllPendingMouseEvents:(CDUnknownBlockType)arg1;
- (void)_setFooterBannerHeight:(int)arg1;
- (void)_setHeaderBannerHeight:(int)arg1;
- (void)viewDidChangeEffectiveAppearance;
@property(nonatomic, setter=_setUseSystemAppearance:) BOOL _useSystemAppearance;
- (struct CGRect)_candidateRect;
- (void)_insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
@property(readonly, nonatomic) BOOL _shouldRequestCandidates;
- (void)_forceRequestCandidates;
- (void)_didUpdateCandidateListVisibility:(BOOL)arg1;
- (void)_didHandleAcceptedCandidate;
- (void)_handleAcceptedCandidate:(id)arg1;
- (void)_handleControlledElementIDResponse:(id)arg1;
- (void)_requestControlledElementID;
@property(readonly, nonatomic) BOOL _hasActiveVideoForControlsManager;
@property(copy, nonatomic, setter=_setUnderlayColor:) NSColor *_underlayColor;
- (BOOL)_canChangeFrameLayout:(id)arg1;
- (void)_completeImmediateActionAnimation;
- (void)_cancelImmediateActionAnimation;
- (void)_prepareForImmediateActionAnimation;
- (void)_enableFrameSizeUpdates;
- (void)_disableFrameSizeUpdates;
- (id)_fullScreenWindow;
- (id)_fullScreenPlaceholderView;
- (void)_setDidMoveSwipeSnapshotCallback:(CDUnknownBlockType)arg1;
- (BOOL)_tryToSwipeWithEvent:(id)arg1 ignoringPinnedState:(BOOL)arg2;
- (void)_setCustomSwipeViewsTopContentInset:(float)arg1;
- (void)_setCustomSwipeViews:(id)arg1;
@property(nonatomic, setter=_setIgnoresNonWheelEvents:) BOOL _ignoresNonWheelEvents;
- (void)_gestureEventWasNotHandledByWebCore:(id)arg1;
- (void)_endDeferringViewInWindowChangesSync;
- (void)_endDeferringViewInWindowChanges;
- (void)_beginDeferringViewInWindowChanges;
@property(nonatomic, setter=_setTotalHeightOfBanners:) double _totalHeightOfBanners;
- (void)_setFrame:(struct CGRect)arg1 andScrollBy:(struct CGSize)arg2;
- (void)_dismissContentRelativeChildWindows;
@property(readonly, nonatomic) struct OpaqueWKPage *_pageRefForTransitionToWKWebView;
- (id)_contentsOfUserInterfaceItem:(id)arg1;
- (void)stopLoading:(id)arg1;
- (void)reloadFromOrigin:(id)arg1;
- (void)reload:(id)arg1;
- (void)goForward:(id)arg1;
- (void)goBack:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *certificateChain;
- (void)_setFormDelegate:(id)arg1;
- (id)_formDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly) NSTouchBar *touchBar; // @dynamic touchBar;

@end

