//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <EventKit/EKCalendarItem.h>

#import <EventKit/EKJunkInvitationProtocol_Private-Protocol.h>
#import <EventKit/EKMutableEventOccurrenceProtocol-Protocol.h>

@class EKEventStore, EKParticipant, EKStructuredLocation, EKSuggestedEventInfo, NSArray, NSData, NSDate, NSDictionary, NSManagedObjectID, NSNumber, NSString, NSTimeZone, NSURL;
@protocol CalendarModelProtocol, EKProtocolParticipant, EKProtocolStructuredLocation;

@interface EKEvent : EKCalendarItem <EKMutableEventOccurrenceProtocol, EKJunkInvitationProtocol_Private>
{
    BOOL isYearlessBirthday;
    BOOL isYearlessLeapMonthBirthday;
    BOOL _isPhantom;
    NSString *lunarCalendarString;
    unsigned long long participantsStatus;
    NSString *sliceParentID;
    NSString *birthdayTitle;
    NSString *nameForBirthday;
    long long _birthdayPersonID;
    NSDate *_sliceDate;
    NSString *_futureLocalUidForSliceChild;
}

+ (id)knownSummaryKeys;
+ (id)_stringForEventStatus:(long long)arg1;
+ (id)eventFromICSEvent:(id)arg1 inStore:(id)arg2;
+ (id)eventFromICSEvent:(id)arg1 withDocument:(id)arg2 inStore:(id)arg3;
+ (id)itemWithIdentifier:(id)arg1 inStore:(id)arg2;
+ (id)multiValueDiffKeys;
+ (id)singleValueDiffKeys;
+ (BOOL)_eventsFromSameSeriesAreOutOfOrderForEvent:(id)arg1 otherEvent:(id)arg2;
+ (BOOL)isMultiDayTimedEventWithStartDate:(id)arg1 endDate:(id)arg2 allDay:(BOOL)arg3 inCalendar:(id)arg4;
+ (id)_relatedCachedTimeKeys;
+ (id)_eventWithOriginalOccurrence:(id)arg1 forRecurrenceDate:(id)arg2 createPartialBackingObject:(BOOL)arg3 eventStore:(id)arg4;
+ (id)_eventWithOriginalOccurrence:(id)arg1 forRecurrenceDate:(id)arg2 store:(id)arg3;
+ (id)_eventWithMasterEvent:(id)arg1 forRecurrenceDate:(id)arg2;
+ (BOOL)_isValidRecurrenceDate:(id)arg1 event:(id)arg2 master:(id)arg3;
+ (BOOL)_isValidRecurrenceDate:(id)arg1 inSeries:(id)arg2;
+ (id)_changesAffectingRecurrenceDate;
+ (BOOL)canonicalizedEqualityTestValue1:(id)arg1 value2:(id)arg2 key:(id)arg3 object1:(id)arg4 object2:(id)arg5;
+ (id)_additionalChangesRecommendingSpanAll;
+ (id)_basicChangesRequiringSpanAll;
+ (id)batchChangeNotificationName;
+ (id)knownKeysToUseForFutureChanges;
+ (id)knownKeysToSkipForFutureChanges;
+ (id)_knownSkipValidationKeys;
+ (id)knownSingleValueKeys;
+ (id)knownRelationshipSingleValueKeys;
+ (id)knownDerivedRelationshipKeys;
+ (id)knownImmutableKeys;
+ (unsigned long long)hashForObject:(id)arg1;
+ (Class)frozenClass;
+ (id)eventWithEventStore:(id)arg1;
+ (id)actionStringsPluralDisplayName;
+ (id)actionStringsDisplayName;
+ (id)_locationStringForLocations:(id)arg1;
@property(nonatomic) BOOL isPhantom; // @synthesize isPhantom=_isPhantom;
@property(retain) NSString *futureLocalUidForSliceChild; // @synthesize futureLocalUidForSliceChild=_futureLocalUidForSliceChild;
@property(retain, nonatomic) NSDate *sliceDate; // @synthesize sliceDate=_sliceDate;
@property(readonly, nonatomic) long long birthdayPersonID; // @synthesize birthdayPersonID=_birthdayPersonID;
@property(readonly, nonatomic) BOOL isYearlessLeapMonthBirthday; // @synthesize isYearlessLeapMonthBirthday;
@property(readonly, nonatomic) BOOL isYearlessBirthday; // @synthesize isYearlessBirthday;
@property(readonly, nonatomic) NSString *nameForBirthday; // @synthesize nameForBirthday;
- (void)setBirthdayTitle:(id)arg1;
@property(readonly, copy, nonatomic) NSString *birthdayTitle;
- (void)setSliceParentID:(id)arg1;
@property(readonly, copy, nonatomic) NSString *sliceParentID;
@property(readonly, nonatomic) unsigned long long participantsStatus; // @synthesize participantsStatus;
@property(readonly, nonatomic) NSString *lunarCalendarString; // @synthesize lunarCalendarString;
- (void).cxx_destruct;
- (void)willSave;
- (BOOL)_reset;
- (BOOL)isRedetached;
- (BOOL)isUndetached;
- (BOOL)isUnexcepted;
- (BOOL)_validatePrivacyForDeletion:(id *)arg1;
- (BOOL)_validateDeletable:(id *)arg1;
- (BOOL)_needsAttendeePartStatReset;
- (BOOL)_validateTravelTimeEditable:(id *)arg1 requiresFurtherValidation:(char *)arg2 keysAlreadyValidated:(id)arg3;
- (BOOL)_validateResponseCommentEditable:(id *)arg1 requiresFurtherValidation:(char *)arg2 keysAlreadyValidated:(id)arg3;
- (BOOL)_validateAvailability:(id *)arg1 requiresFurtherValidation:(char *)arg2 keysAlreadyValidated:(id)arg3;
- (BOOL)_validateAllDayEditable:(id *)arg1 requiresFurtherValidation:(char *)arg2 keysAlreadyValidated:(id)arg3;
- (BOOL)updateWithGeocodedMapItemAndSaveWithCommit:(id)arg1 eventStore:(id)arg2 error:(id *)arg3;
- (BOOL)_hasChangesForOtherAttendees;
- (BOOL)_hasAlternateTimeProposalChanges;
- (BOOL)_validateAttendeePropertiesEditable:(id *)arg1 requiresFurtherValidation:(char *)arg2 keysAlreadyValidated:(id)arg3;
- (BOOL)_validateCalendarEditable:(id *)arg1 requiresFurtherValidation:(char *)arg2 keysAlreadyValidated:(id)arg3;
- (BOOL)_validateAlarmsEditable:(id *)arg1 requiresFurtherValidation:(char *)arg2 keysAlreadyValidated:(id)arg3;
- (BOOL)_validateAttendeesEditable:(id *)arg1 requiresFurtherValidation:(char *)arg2 keysAlreadyValidated:(id)arg3;
- (BOOL)_validateEditableHelperBasedOnChangesToKey:(id)arg1 checkBoolProperty:(id)arg2 propertyValue:(BOOL)arg3 error:(id *)arg4 errorCode:(long long)arg5 requiresFurtherValidation:(char *)arg6 keysAlreadyValidated:(id)arg7;
- (BOOL)_validateEditableHelperBasedOnChangesToKey:(id)arg1 checkBoolPropertiesAndValues:(id)arg2 error:(id *)arg3 errorCode:(long long)arg4 requiresFurtherValidation:(char *)arg5 keysAlreadyValidated:(id)arg6;
- (BOOL)_validateEditable:(id *)arg1;
- (BOOL)_validateRecurrence:(id *)arg1;
- (BOOL)_validateEntityTypeIsSupported:(id *)arg1;
- (void)markAsSaved;
- (BOOL)_requirementsToMoveToCalendarHelperRemoveAttendeesRequiredToMoveEventFromCalendar:(id)arg1 toCalendar:(id)arg2;
- (BOOL)_requirementsToMoveToCalendarHelperReinviteAttendeesRequiredToMoveEventFromCalendar:(id)arg1 toCalendar:(id)arg2;
- (BOOL)_requirementsToMoveToCalendarHelperNeedToRemoveOriginalToMoveEventFromCalendar:(id)arg1 toCalendar:(id)arg2;
- (BOOL)_requirementsToMoveToCalendarHelperDuplicationRequiredToMoveEventFromCalendar:(id)arg1 toCalendar:(id)arg2;
- (BOOL)_requirementsToMoveToCalendarHelperAlterationsRequiredToMoveEventFromCalendar:(id)arg1 toCalendar:(id)arg2;
- (BOOL)_requirementsToMoveOrCopyToCalendarHelperAllowedToMoveOrCopyEventFromCalendar:(id)arg1 toCalendar:(id)arg2;
- (BOOL)_canMoveOrCopyFromCalendar:(id)arg1 toCalendar:(id)arg2 allowedRequirements:(long long)arg3 error:(id *)arg4;
- (BOOL)_allowsAnyModificationsByAttendeesAndBeStrict:(BOOL)arg1;
- (BOOL)shouldBeIncluded:(long long)arg1;
- (BOOL)shouldBeIncludedIfIntersectsRange:(id)arg1 exclusionOptions:(long long)arg2;
- (id)occurrenceForDate:(id)arg1;
- (id)scanForConflicts;
- (id)_preferredStructuredLocation;
- (BOOL)needsResponse;
- (void)_downloadAttachments;
- (BOOL)canBeReRepliedTo;
- (BOOL)isOnlyOccurrence;
- (BOOL)isLastOccurrence;
- (BOOL)isFirstOccurrence;
- (BOOL)isMainOccurrence;
- (BOOL)_isSignificantlyDetachedForMaster:(id)arg1;
- (BOOL)isBackingObjectSignificantlyDetachedIgnoringParticipation;
@property(readonly, nonatomic) BOOL isSignificantlyDetachedIgnoringParticipation;
- (BOOL)isBackingObjectSignificantlyDetached;
@property(readonly, nonatomic) BOOL isSignificantlyDetached;
- (BOOL)isDifferentAndModifiedAttendeesWithDiff:(id)arg1;
- (BOOL)isDifferentAndHasForwardedAttendeesWithDiff:(id)arg1;
- (BOOL)isDifferentAndHasOnlyUnscheduledAttendeesWithDiff:(id)arg1;
- (BOOL)isDifferentAndHasUnscheduledAttendeesWithDiff:(id)arg1;
- (BOOL)isDifferentExceptingPerUserPropertiesWithDiff:(id)arg1;
- (BOOL)_diff:(id)arg1 isDifferentFromCommittedEventHelperRequiresReschedule:(BOOL)arg2;
- (BOOL)isDifferentAndRequiresRSVPWithDiff:(id)arg1;
- (BOOL)isDifferentAndRequiresRescheduleWithDiff:(id)arg1;
- (BOOL)isDifferentFromCommittedEventAndHasForwardedAttendees;
- (BOOL)isDifferentFromCommittedEventExceptingPerUserProperties;
- (BOOL)isDifferentFromCommittedEventAndHasOnlyUnscheduledAttendees;
- (BOOL)isDifferentFromCommittedEventAndHasUnscheduledAttendees;
- (BOOL)isDifferentFromCommittedEventAndRequiresRSVP;
- (BOOL)isDifferentFromCommittedEventAndRequiresReschedule;
- (BOOL)isDifferentAndHasNewProposedTimeWithDiff:(id)arg1;
- (BOOL)isDifferentFromCommittedEventAndHasNewProposedTime;
- (BOOL)isDifferentWithDiff:(id)arg1;
- (id)diffFromCommitted;
@property(retain, nonatomic) NSDate *proposedEndDate;
@property(readonly, copy, nonatomic) NSDate *proposedEndDateUnadjustedFromUTCForMe;
@property(retain, nonatomic) NSDate *proposedStartDate;
@property(readonly, copy, nonatomic) NSDate *proposedStartDateUnadjustedFromUTCForMe;
- (id)detachedEventOccurrences;
- (id)detachedEvents;
- (id)exceptionDates;
- (id)masterEventOccurrence;
- (id)masterEvent;
- (id)commitedItemIgnoringPotentialSlice:(BOOL)arg1;
- (id)commitedItem;
@property(readonly, nonatomic) BOOL eligibleForTravelAdvisories;
- (id)timeToLeaveAlarm;
- (id)lastRecurrenceDate;
- (id)_occurrenceDatesForCount:(unsigned long long)arg1;
- (void)makeRecurrenceEndDateBased;
- (void)makeRecurrenceEndCountBased;
- (long long)compareTimeEndingRecently:(id)arg1;
- (BOOL)hasFieldsIncompatibleWithMoveToCalendar:(id)arg1;
- (BOOL)durationOverlapsRecurrenceInterval;
- (BOOL)seriesHasOverlappingAlarms;
- (BOOL)seriesHasOverlappingOrOnSameDayOrOutOfOrderEvents;
- (BOOL)seriesHasOutOfOrderEvents;
- (BOOL)alarmOverlapsWithEventInSeries;
- (BOOL)isOutOfOrderWithEventInSeries;
- (id)_sortedExpandedEventsForSeriesTilLatestRelevantDateHelperEarlyDate:(id)arg1 laterDate:(id)arg2;
- (BOOL)overlapsWithOrIsSameDayAsEventInSeries;
- (id)_previousEndDateUnadjustedFromUTC;
- (BOOL)_hasOrHadRecurrenceRule;
- (long long)daysSpannedInCalendar:(id)arg1;
- (BOOL)isMultiDayTimedEventInCalendar:(id)arg1;
- (id)startOfDayForEndDateInCalendar:(id)arg1;
- (id)startOfDayForStartDateInCalendar:(id)arg1;
- (void)clearCachedTimeValues;
- (id)_detachedEventForDetachedOccurrence:(id)arg1 forRecurrenceDate:(id)arg2;
- (id)_newDetachedEventWithDetachedOccurrence:(id)arg1 forRecurrenceDate:(id)arg2;
- (id)durationComponents;
@property(readonly, nonatomic) double duration;
- (void)_updateSliceDate:(id)arg1;
- (void)_updateDatesForStartDate:(id)arg1;
- (void)_updateDatesForRecurrenceDate:(id)arg1;
- (id)dropBoxLocation;
- (BOOL)isValidRecurrenceDate:(id)arg1;
@property(readonly, nonatomic) NSDate *occurrenceDate;
- (id)eventOccurrenceID;
- (id)occurrenceIdentifier;
- (id)backingOccurrenceIdentifier;
- (id)_chosenLocalUIDForDuplicate;
- (BOOL)refresh;
- (void)_addLikenessDataIfNeeded;
- (void)_handleResponseCommentChange;
- (void)_handlePartStatChange:(id)arg1;
- (BOOL)_validateAttendees:(id *)arg1;
- (BOOL)_validateSuggestionInfoWithError:(id *)arg1;
- (BOOL)_validateSpan:(long long)arg1 error:(id *)arg2;
- (BOOL)_validatePrivacyWithError:(id *)arg1;
- (BOOL)_validateDatesWithError:(id *)arg1;
- (BOOL)validateWithSpan:(long long)arg1 error:(id *)arg2;
- (BOOL)validate:(id *)arg1;
- (id)copyToCalendar:(id)arg1 withOptions:(long long)arg2;
- (BOOL)requiresCopyToMoveFromCalendar:(id)arg1 toCalendar:(id)arg2;
- (BOOL)canMoveOrCopyToCalendar:(id)arg1 fromCalendar:(id)arg2 error:(id *)arg3;
- (BOOL)canMoveToCalendar:(id)arg1 fromCalendar:(id)arg2 allowedRequirements:(long long)arg3 error:(id *)arg4;
- (BOOL)canMoveToCalendar:(id)arg1 fromCalendar:(id)arg2 error:(id *)arg3;
- (long long)requirementsToMoveToCalendar:(id)arg1;
- (long long)requirementsToMoveFromCalendar:(id)arg1 toCalendar:(id)arg2;
- (BOOL)updateEventToEvent:(id)arg1 commit:(BOOL)arg2;
- (BOOL)updateEventToEvent:(id)arg1;
- (id)_dateUnadjustedFromUTCForNextOccurrenceAfterDate:(id)arg1;
- (id)_dateForNextOccurrenceAfterDate:(id)arg1;
- (id)_dateForNextOccurrence;
- (long long)_eventAvailabilityForParticipantStatus:(long long)arg1;
- (BOOL)isEditable;
- (BOOL)_travelTimeModificationIsOK;
@property(readonly, nonatomic) BOOL allowsTravelTimeModifications;
@property(readonly, nonatomic) BOOL allowsProposedTimeModifications;
- (BOOL)allowsResponseCommentModifications;
@property(readonly, nonatomic) BOOL allowsPrivateModifications;
@property(readonly, nonatomic) BOOL allowsParticipantStatusModifications;
@property(readonly, nonatomic) BOOL allowsAvailabilityModifications;
- (BOOL)allowsAttendeeRemoval:(id)arg1;
- (BOOL)_currentUserInvitedButNotOrganizer;
- (BOOL)_validAttendeeModifications;
- (BOOL)_validAttendeeRemoval:(id)arg1;
- (BOOL)allowsAttendeesModifications;
- (BOOL)allowsAttachmentModifications;
@property(readonly, nonatomic) BOOL allowsAllDayModifications;
- (BOOL)internalAllowsAlarmModifications;
@property(readonly, nonatomic) BOOL allowsAlarmModifications;
- (void)setStructuredLocation:(id)arg1 preserveConferenceRooms:(BOOL)arg2;
- (void)removeConferenceRooms:(id)arg1;
- (void)addConferenceRooms:(id)arg1;
- (id)_conferenceRoomDisplayStrings;
- (BOOL)hasResponseCommentChange;
- (void)setResponseComment:(id)arg1;
- (void)setAutoGeneratedResponseCommentForProposedStartDate:(id)arg1;
- (id)responseCommentForDisplay;
@property(readonly, copy, nonatomic) NSString *responseComment;
- (id)externalURI;
@property(readonly, nonatomic) NSString *eventIdentifier;
- (BOOL)isBirthday;
@property(readonly, nonatomic) NSString *birthdayPersonUniqueID;
@property(readonly, nonatomic) NSString *birthdayContactIdentifier;
- (long long)compareStartDateWithEvent:(id)arg1;
- (BOOL)isEvent;
@property(readonly, nonatomic) EKParticipant *organizer;
@property(nonatomic, getter=isAllDay) BOOL allDay; // @dynamic allDay;
- (id)defaultAlarms;
@property(copy, nonatomic) NSDate *endDate;
@property(copy, nonatomic) NSDate *startDate; // @dynamic startDate;
- (id)_updatedEndDateForNewTimeZone:(id)arg1;
- (void)_updateEndTimeZoneForNewTimeZone:(id)arg1;
- (void)_updateAllDayForNewTimeZone:(id)arg1;
- (void)setTimeZoneObject:(id)arg1;
@property(nonatomic) long long availability;
- (void)setAvailabilityEnum:(int)arg1;
@property(readonly, nonatomic) int availabilityEnum;
@property(readonly, nonatomic) BOOL automaticLocationGeocodingAllowed;
@property(readonly, nonatomic) BOOL travelAdvisoryBehaviorIsEffectivelyEnabled;
@property(nonatomic) long long travelAdvisoryBehavior;
- (void)setTravelAdvisoryBehaviorString:(id)arg1;
@property(readonly, copy, nonatomic) NSString *travelAdvisoryBehaviorString;
- (BOOL)couldBeJunk;
@property(readonly, nonatomic) BOOL supportsJunkReporting;
@property(readonly, nonatomic) NSString *sendersPhoneNumber;
@property(readonly, nonatomic) NSString *sendersEmail;
- (void)setJunkStatus:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long junkStatus;
@property(readonly, nonatomic) BOOL isEndDateDirty;
@property(readonly, nonatomic) BOOL isStartDateDirty;
- (BOOL)hasUnsavedChangesToEndDate;
- (BOOL)hasUnsavedChangesToStartDate;
- (BOOL)hasChangesAffectingRecurrenceDate;
- (BOOL)_hasRecurrenceRuleChangeHelperIncludeAddition:(BOOL)arg1 includeRemoval:(BOOL)arg2;
- (BOOL)_hasRecurrenceRuleChangeRequiringSpanAll;
- (BOOL)_hasBasicChangesRequiringSpanAll:(BOOL)arg1;
- (BOOL)_hasChangesForSpanAllHelper:(BOOL)arg1;
- (BOOL)hasChangesRecommendingSpanAll;
- (BOOL)hasChangesRequiringSpanAll;
- (id)singleChangedValueForKey:(id)arg1;
- (void)setIsDetached:(BOOL)arg1;
@property(readonly, nonatomic) BOOL isDetached;
- (void)setEkStructuredEndLocation:(id)arg1;
@property(retain, nonatomic) EKStructuredLocation *endLocation;
- (void)setEkStructuredStartLocation:(id)arg1;
@property(retain, nonatomic) EKStructuredLocation *travelStartLocation;
@property(readonly, copy, nonatomic) id <EKProtocolStructuredLocation> ekStructuredEndLocation;
@property(readonly, copy, nonatomic) id <EKProtocolStructuredLocation> ekStructuredStartLocation;
@property(copy, nonatomic) EKStructuredLocation *structuredLocation;
@property(copy, nonatomic) NSURL *URL;
@property(copy, nonatomic) NSString *notes;
@property(readonly, nonatomic) BOOL locationIsAConferenceRoom;
@property(readonly, nonatomic) long long status;
@property(readonly, nonatomic) long long participationStatus;
- (int)attendeesStatus;
@property(retain, nonatomic) EKSuggestedEventInfo *suggestionInfo;
- (void)setSuggestionInfoUniqueKey:(id)arg1;
@property(readonly, nonatomic) NSString *suggestionInfoUniqueKey;
- (void)setSuggestionInfoTimestamp:(id)arg1;
@property(readonly, nonatomic) NSDate *suggestionInfoTimestamp;
- (void)setSuggestionInfoOpaqueKey:(id)arg1;
@property(readonly, nonatomic) NSString *suggestionInfoOpaqueKey;
- (void)setSuggestionInfoChangedFields:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long suggestionInfoChangedFields;
@property(nonatomic) BOOL suggestionInfoAcknowledged;
- (void)_reconcileCachedSuggestionInfo;
- (void)setStatusString:(id)arg1;
@property(readonly, copy, nonatomic) NSString *statusString;
@property(readonly, nonatomic) NSDate *startDateIncludingTravel;
- (id)startDateIncludingTravelUnadjustedFromUTC;
- (void)setTravelDuration:(double)arg1;
@property(readonly, nonatomic) double travelDuration;
- (BOOL)intersectsRangeIfFloating:(id)arg1 normalRange:(id)arg2 checkProposed:(BOOL)arg3;
- (BOOL)intersectsRangeIfFloating:(id)arg1 normalRange:(id)arg2;
- (void)setDontSendNotificationForChanges:(BOOL)arg1;
@property(readonly, nonatomic) BOOL dontSendNotificationForChanges;
@property(copy, nonatomic) NSString *title;
@property(nonatomic) double travelTime;
@property(copy, nonatomic) NSTimeZone *endTimeZone;
- (void)setNeedsGeocoding:(BOOL)arg1;
@property(readonly, nonatomic) BOOL needsGeocoding;
- (void)setEndTimeZoneObject:(id)arg1;
@property(readonly, copy, nonatomic) NSTimeZone *endTimeZoneObject;
- (void)setEndDateUnadjustedFromUTC:(id)arg1;
@property(readonly, copy, nonatomic) NSDate *endDateUnadjustedFromUTC;
- (BOOL)_isNonDetachedOccurrenceInSeries;
- (id)frozenObject;
- (id)_keysToChangeForDuplicateWithOptions:(long long)arg1;
- (id)_singleRelationshipKeysToCheckForChanges;
- (void)_applyKnownImmutableValuesFrom:(id)arg1;
@property(readonly, nonatomic) EKStructuredLocation *preferredLocationWithoutPrediction;
@property(readonly, nonatomic) NSString *locationWithoutPrediction;
- (BOOL)_startDateIsOnSameDayAsOtherEventInSeries;
- (void)setConferenceURL:(id)arg1;
@property(readonly, nonatomic) NSURL *conferenceURL;
- (void)setPrivacyLevelString:(id)arg1;
@property(readonly, copy, nonatomic) NSString *privacyLevelString;
- (id)notificationsForSeriesIncludingPast:(BOOL)arg1;
@property(readonly, copy, nonatomic) NSArray *notificationsForSeries;
- (id)notificationsIncludingPast:(BOOL)arg1;
@property(readonly, copy, nonatomic) NSArray *notifications;
@property(readonly, nonatomic) BOOL supportsParticipationStatusModificationsWithoutNotification;
@property(nonatomic) long long privacyLevel;
- (BOOL)_isPrivacySetInDelegateOrSharedToMeCalendar:(id)arg1;
@property(readonly, nonatomic, getter=isPrivacySetInDelegateOrSharedToMeCalendar) BOOL privacySetInDelegateOrSharedToMeCalendar;
@property(readonly, nonatomic, getter=isPrivacySet) BOOL privacySet;
- (unsigned long long)entityType;
- (id)actionStringsDisplayTitle;
- (BOOL)removeWithSpan:(long long)arg1 error:(id *)arg2;
- (BOOL)saveWithSpan:(long long)arg1 error:(id *)arg2;
- (BOOL)_canWriteConferenceURL;
- (void)_updateConferenceURL;
- (BOOL)_hasChangesForConferenceURLDetection;
- (void)updateConferenceURLIfNeeded;
- (id)_prioritizedConferencesSources;
- (id)_detectConferenceURL;
- (id)conferenceURLDetected;
- (void)clearDetectedConferenceURL;
- (id)conferenceURLForDisplay;
- (void)setURLCommon:(id)arg1;
- (void)setNotesCommon:(id)arg1;
@property(readonly, nonatomic) NSArray *locationsWithoutPrediction;
@property(retain, nonatomic) NSArray *locations;
- (BOOL)_couldBeJunkCommon;
@property(nonatomic) unsigned long long cachedJunkStatus; // @dynamic cachedJunkStatus;
- (void)setIsJunk:(BOOL)arg1 shouldSave:(BOOL)arg2;

// Remaining properties
@property(readonly, nonatomic) BOOL cachedHasAlarm; // @dynamic cachedHasAlarm;
@property(readonly, nonatomic) BOOL cachedHasAttachment; // @dynamic cachedHasAttachment;
@property(readonly, nonatomic) BOOL cachedHasAttendee; // @dynamic cachedHasAttendee;
@property(readonly, nonatomic) BOOL cachedIsCalendarOwnerInvitedAttendee; // @dynamic cachedIsCalendarOwnerInvitedAttendee;
@property(readonly, nonatomic) BOOL cachedIsCurrentUserInvitedAttendee; // @dynamic cachedIsCurrentUserInvitedAttendee;
@property(readonly, nonatomic) NSNumber *calendarItemPermissionNumber; // @dynamic calendarItemPermissionNumber;
@property(readonly, nonatomic) BOOL canBeConvertedToFullObject;
@property(readonly, copy, nonatomic) NSString *contactIdentifiersString;
@property(readonly, retain, nonatomic) id <CalendarModelProtocol> container;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) BOOL defaultAlarmWasDeleted; // @dynamic defaultAlarmWasDeleted;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) id <EKProtocolStructuredLocation> ekStructuredLocation;
@property(readonly, nonatomic) EKEventStore *eventStore; // @dynamic eventStore;
@property(readonly, nonatomic) BOOL hasAttendees;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) BOOL isPartialObject;
@property(readonly, nonatomic) BOOL isScheduled; // @dynamic isScheduled;
@property(readonly, copy, nonatomic) NSData *localStructuredData;
@property(readonly, nonatomic) NSManagedObjectID *managedObjectID;
@property(readonly, nonatomic) BOOL organizedByMe; // @dynamic organizedByMe;
@property(readonly, copy, nonatomic) NSString *organizerEmail; // @dynamic organizerEmail;
@property(readonly, copy, nonatomic) NSString *organizerEncodedLikenessData; // @dynamic organizerEncodedLikenessData;
@property(readonly, copy, nonatomic) NSString *organizerName; // @dynamic organizerName;
@property(readonly, copy, nonatomic) NSString *organizerPhoneNumber; // @dynamic organizerPhoneNumber;
@property(readonly, copy, nonatomic) NSURL *organizerURL; // @dynamic organizerURL;
@property(readonly, copy, nonatomic) id <EKProtocolParticipant> participantForMe; // @dynamic participantForMe;
@property(readonly, nonatomic) NSDictionary *preFrozenRelationshipObjects;
@property(copy, nonatomic) NSNumber *priorityNumber; // @dynamic priorityNumber;
@property(readonly, retain, nonatomic) NSDate *recurrenceDateUnadjustedFromUTC;
@property(readonly, copy, nonatomic) NSString *recurrenceRuleString;
@property(readonly, copy, nonatomic) NSString *recurrenceSetID;
@property(readonly, copy, nonatomic) NSString *relatedExternalID;
@property(readonly, copy, nonatomic) NSString *scheduleAgentString;
@property(readonly, copy, nonatomic) NSDate *startDateUnadjustedFromUTC;
@property(readonly, copy, nonatomic) NSData *structuredData;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) NSTimeZone *timeZoneObject;

@end

