//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <EventKit/EKObject.h>

#import <EventKit/NSCopying-Protocol.h>

@class EKCalendarItem, EKFrozenRecurrenceRule, EKRecurrenceEnd, NSArray, NSDate, NSString;

@interface EKRecurrenceRule : EKObject <NSCopying>
{
    BOOL _usesEndDate;
    BOOL _dirtyStateMayAffectExceptionDates;
    EKRecurrenceEnd *_cachedEnd;
    EKFrozenRecurrenceRule *backingRule;
    EKCalendarItem *_item;
    NSString *_UUID;
}

+ (long long)daysTypeForDayArray:(id)arg1;
+ (id)_customDayCombinationDescription:(id)arg1;
+ (id)_orDaysOfWeekString:(id)arg1;
+ (id)_weekDayPositionAsString:(long long)arg1;
+ (id)_dayOfMonthAsString:(long long)arg1;
+ (id)_daysOfWeek;
+ (id)_numberedWeekDayString:(id)arg1;
+ (id)_andDaysOfWeekString:(id)arg1;
+ (id)_stringValueForRecurrenceRule:(id)arg1;
+ (id)adjustDateIntoUTC:(id)arg1 forRecurrenceRule:(id)arg2;
+ (id)iCalendarValueFromDate:(id)arg1 allDay:(BOOL)arg2 floating:(BOOL)arg3;
+ (id)iCalendarValueFromDate:(id)arg1;
+ (id)iCalendarValueFromDayOfTheWeek:(unsigned long long)arg1;
+ (id)iCalendarValueFromRecurrenceType:(long long)arg1;
+ (id)_acceptableStartDateRangeForYearlyRecurrenceWithCurrentStartDate:(id)arg1;
+ (id)_acceptableStartDateRangeForMonthlyRecurrenceWithCurrentStartDate:(id)arg1;
+ (id)_acceptableStartDateRangeForWeeklyRecurrenceWithCurrentStartDate:(id)arg1;
+ (id)_acceptableStartDateRangeForDailyRecurrenceWithCurrentStartDate:(id)arg1;
+ (id)uniqueIdentifierForObject:(id)arg1;
+ (id)knownIdentityKeys;
+ (Class)frozenClass;
+ (BOOL)isDerivedRelationship;
+ (id)ruleWithBackingRule:(id)arg1;
+ (id)recurrenceRuleWithType:(long long)arg1 interval:(unsigned long long)arg2 end:(id)arg3;
@property(readonly, nonatomic) BOOL dirtyStateMayAffectExceptionDates; // @synthesize dirtyStateMayAffectExceptionDates=_dirtyStateMayAffectExceptionDates;
@property(readonly, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(readonly) BOOL usesEndDate; // @synthesize usesEndDate=_usesEndDate;
@property(nonatomic) __weak EKCalendarItem *item; // @synthesize item=_item;
@property(readonly, nonatomic) EKFrozenRecurrenceRule *backingRule; // @synthesize backingRule;
@property(retain, nonatomic) EKRecurrenceEnd *cachedEnd; // @synthesize cachedEnd=_cachedEnd;
- (void).cxx_destruct;
- (id)humanReadableDescriptionWithStartDate:(id)arg1;
- (BOOL)ruleIsForFloatingItem;
- (BOOL)ruleIsForAllDayItem;
- (id)stringValueAsDate;
- (void)reset;
- (void)setSetPositions:(id)arg1;
@property(readonly, nonatomic) NSArray *setPositions;
- (void)setMonthsOfTheYear:(id)arg1;
@property(readonly, nonatomic) NSArray *monthsOfTheYear;
- (void)setWeeksOfTheYear:(id)arg1;
@property(readonly, nonatomic) NSArray *weeksOfTheYear;
- (void)setDaysOfTheYear:(id)arg1;
@property(readonly, nonatomic) NSArray *daysOfTheYear;
- (void)setDaysOfTheMonth:(id)arg1;
@property(readonly, nonatomic) NSArray *daysOfTheMonth;
- (void)setDaysOfTheWeek:(id)arg1;
@property(readonly, nonatomic) NSArray *daysOfTheWeek;
- (void)setFirstDayOfTheWeek:(unsigned long long)arg1;
@property(readonly, nonatomic) long long firstDayOfTheWeek;
- (id)firstDayOfTheWeekNumber;
- (void)updateItem:(id)arg1;
- (void)setEndDate:(id)arg1;
- (id)endDate;
- (void)setCountNumber:(id)arg1;
- (id)countNumber;
@property(readonly, nonatomic) NSDate *cachedEndDate;
@property(copy, nonatomic) EKRecurrenceEnd *recurrenceEnd;
- (void)setInterval:(unsigned long long)arg1;
@property(readonly, nonatomic) long long interval;
- (id)intervalNumber;
- (void)setFrequency:(long long)arg1;
@property(readonly, nonatomic) long long frequency;
- (id)frequencyNumber;
@property(readonly, nonatomic) NSString *calendarIdentifier;
- (id)_acceptableStartDateRangeWithCurrentStartDate:(id)arg1;
- (BOOL)newStartDateIsInvalid:(id)arg1 currentStartDate:(id)arg2;
- (BOOL)newStartDateIsValid:(id)arg1 currentStartDate:(id)arg2;
- (BOOL)hasDuplicateMonthsOfYear;
- (id)_initializeArrayWithCapacity:(int)arg1 withValue:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (BOOL)shouldPinMonthDays;
- (id)backingObject;
- (id)initWithBackingRule:(id)arg1;
- (id)initRecurrenceWithFrequency:(long long)arg1 interval:(long long)arg2 end:(id)arg3;
- (id)initRecurrenceWithFrequency:(long long)arg1 interval:(long long)arg2 daysOfTheWeek:(id)arg3 daysOfTheMonth:(id)arg4 monthsOfTheYear:(id)arg5 weeksOfTheYear:(id)arg6 daysOfTheYear:(id)arg7 setPositions:(id)arg8 end:(id)arg9;
- (id)init;

@end

