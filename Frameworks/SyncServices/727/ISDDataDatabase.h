//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <SyncServices/ISDDatabase.h>

@interface ISDDataDatabase : ISDDatabase
{
    struct sqlite3_stmt *_addRecordStatement;
    struct sqlite3_stmt *_addRelationshipTupleStatement;
    struct sqlite3_stmt *_addUnformattedRelationshipTupleStatement;
    struct sqlite3_stmt *_containsRecordStatement;
    struct sqlite3_stmt *_getRecordCountsStatement;
    struct sqlite3_stmt *_getAddCountsStatement;
    struct sqlite3_stmt *_getDeleteCountsStatement;
    struct sqlite3_stmt *_getEntitiesInTruthStatement;
    struct sqlite3_stmt *_getEntitiesForRecordIdsStatement;
    struct sqlite3_stmt *_getRecordIdsStatement;
    struct sqlite3_stmt *_getRecordIdsAddedAfterGenerationStatement;
    struct sqlite3_stmt *_getRowidsAddedAfterGenerationStatement;
    struct sqlite3_stmt *_getRowidsForRecordIdsStatement;
    struct sqlite3_stmt *_getRecordIdsFromRowidsStatement;
    struct sqlite3_stmt *_getRecordIdsToBeAppliedWithEntityNumberStatement;
    struct sqlite3_stmt *_getToBeAppliedCountWithEntityNumberStatement;
    struct sqlite3_stmt *_getRecordIdsWithEntityNumberStatement;
    struct sqlite3_stmt *_getRecordIdsOfRecordsWithStatesAndWithEntityNumbersStatement;
    struct sqlite3_stmt *_getRecordIdsOfRecordsWithoutStatesAndWithEntityNumbersStatement;
    struct sqlite3_stmt *_getRecordIdsThatHaveDataRefsWithEntityNumberStatement;
    struct sqlite3_stmt *_getRecordIdsUnappliedStatement;
    struct sqlite3_stmt *_getRecordIdsThatExist;
    struct sqlite3_stmt *_getRecordIdsThatExistIncludeDeleted;
    struct sqlite3_stmt *_getRecordPropertiesStatement;
    struct sqlite3_stmt *_getRecordPropertiesForEntityStatement;
    struct sqlite3_stmt *_getRecordsAlteredSinceGenerationStatement;
    struct sqlite3_stmt *_getRecordsWithPropertiesStatement;
    struct sqlite3_stmt *_getRecordsWithoutPropertiesStatement;
    struct sqlite3_stmt *_getRelationshipTuplesStatement;
    struct sqlite3_stmt *_getUndeletedRecordIdsWithEntityNumberStatement;
    struct sqlite3_stmt *_getUnformattedTuplesStatement;
    struct sqlite3_stmt *_removeAllTuplesStatement;
    struct sqlite3_stmt *_removeAllUnformattedTuplesStatement;
    struct sqlite3_stmt *_removePropertiesStatement;
    struct sqlite3_stmt *_removeRecordsStatement;
    struct sqlite3_stmt *_removeSelectedTuplesStatement;
    struct sqlite3_stmt *_removeSelectedUnformattedTuplesStatement;
    struct sqlite3_stmt *_removeTupleReferencesStatement;
    struct sqlite3_stmt *_removeTuplesStatement;
    struct sqlite3_stmt *_removeUnformattedTupleReferencesStatement;
    struct sqlite3_stmt *_removeUnformattedTuplesStatement;
    struct sqlite3_stmt *_replaceRecordIdInRecordStatement;
    struct sqlite3_stmt *_replaceRecordIdInRelationshipFromStatement;
    struct sqlite3_stmt *_replaceRecordIdInRelationshipToStatement;
    struct sqlite3_stmt *_replaceRecordIdInUnformattedFromStatement;
    struct sqlite3_stmt *_replaceRecordIdInUnformattedToStatement;
    struct sqlite3_stmt *_replaceTupleIdInRelationshipStatement;
    struct sqlite3_stmt *_replaceTupleIdInUnformattedStatement;
    struct sqlite3_stmt *_setDeletedStatement;
    struct sqlite3_stmt *_setDeletedTupleStatement;
    struct sqlite3_stmt *_setLastChangedGenerationStatement;
    struct sqlite3_stmt *_setRecordStateStatement;
    struct sqlite3_stmt *_setRecordStateToBeAppliedStatement;
    struct sqlite3_stmt *_setToBeAppliedStatement;
    struct sqlite3_stmt *_setToBeAppliedByEntityStatement;
    struct sqlite3_stmt *_updateRecordStatement;
    struct sqlite3_stmt *_updateRecordPropertiesStatement;
    struct sqlite3_stmt *_lastGenerationForEntitiesStatement;
    struct sqlite3_stmt *_fastSourceEnumerateStatement;
    struct sqlite3_stmt *_fastTargetEnumerateStatement;
    struct sqlite3_stmt *_addRecordDataReferenceStatement;
    struct sqlite3_stmt *_removeRecordDataReferencesForRecordIdWithPropertyStatement;
    struct sqlite3_stmt *_removeRecordDataReferencesForRecordIdsStatement;
    struct sqlite3_stmt *_getRecordDataReferencesForRecordIdsStatement;
    struct sqlite3_stmt *_getRecordDataReferencesForRecordIdAndPropertyStatement;
    struct sqlite3_stmt *_getAllRecordDataReferencesStatement;
    struct sqlite3_stmt *_getAllRecordIdsThatHaveDataRefsStatement;
    struct sqlite3_stmt *_setRecordIdsHaveDataReferencesStatement;
    struct sqlite3_stmt *_replaceRecordIdInDataReferencesStatement;
    struct sqlite3_stmt *_addGlobalEquivalents;
    struct sqlite3_stmt *_removeGlobalEquivalents;
    struct sqlite3_stmt *_getNativeRecordId;
    struct sqlite3_stmt *_getEquivalentIds;
    struct sqlite3_stmt *_getRecordIdsToPurge;
    struct sqlite3_stmt *_getTupleRowsToPurge;
    struct sqlite3_stmt *_deleteRecordsByRowid;
    struct sqlite3_stmt *_deleteTuplesByRowid;
    struct sqlite3_stmt *_deleteGlobalEquivalentsByNativeId;
    struct sqlite3_stmt *_deleteStillBornRecords;
}

+ (id)defaultDatabasePath:(id)arg1;
+ (BOOL)createDatabaseAtPath:(id)arg1;
- (void)_updateRelationshipsInRecord:(id)arg1 ignoreDeletedRelationshipTuples:(BOOL)arg2 removeTuplesFirst:(BOOL)arg3;
- (void)_updateUnformattedRelationshipsInRecord:(id)arg1 ignoreDeletedRelationshipTuples:(BOOL)arg2 removeTuplesFirst:(BOOL)arg3;
- (void)purgeRecordsForEntitiesNamed:(id)arg1 inGenerationsLessThan:(unsigned int)arg2;
- (void)deleteStillBornRecords;
- (id)globalIdEquivalentsForNativeRecordId:(id)arg1;
- (id)nativeGlobalIdForEquivalentId:(id)arg1;
- (void)removeEquivalentGlobalsIdsForNativeGlobalId:(id)arg1;
- (void)addEquivalentGlobalIds:(id)arg1 forNativeGlobalId:(id)arg2;
- (unsigned int)latestGenerationForEntitiesNamed:(id)arg1;
- (unsigned long long)toBeAppliedRecordCountForEntityNames:(id)arg1;
- (id)toBeAppliedRecordIdentifiersForEntityNames:(id)arg1;
- (id)unappliedRecordIdentifiers;
- (id)allRecordIdentifiers;
- (void)deleteTuple:(id)arg1 inGeneration:(unsigned int)arg2;
- (void)enumerateRecordHeadersForRecordsWithIds:(id)arg1 asArgumentsToFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (void)enumerateRecordIdsForRecordsWithMatchingAttributes:(id)arg1 asArgumentsToFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 matchAll:(BOOL)arg4;
- (void)enumerateRecordIdsForRecordsWithMatchingAttributes:(id)arg1 asArgumentsToFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (BOOL)haveAllMatchingAttributes:(id)arg1 inPropertyValues:(id)arg2;
- (BOOL)haveAnyMatchingAttributes:(id)arg1 inPropertyValues:(id)arg2;
- (void)setLastChangedGeneration:(unsigned int)arg1 forRecordIds:(id)arg2;
- (void)fastEnumerateTargetsOfRelationshipNames:(id)arg1 fromRecordIds:(id)arg2 asArgumentsToFunction:(CDUnknownFunctionPointerType)arg3 context:(void *)arg4;
- (void)fastEnumerateSourcesOfRelationshipNames:(id)arg1 toRecordIds:(id)arg2 asArgumentsToFunction:(CDUnknownFunctionPointerType)arg3 context:(void *)arg4;
- (id)recordsWithRowids:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (id)recordsWithIdentifiers:(id)arg1;
- (id)createDictionaryWithRecordsWithIdentifiers:(id)arg1;
- (id)createArrayWithRecordsWithIdentifiers:(id)arg1 constructRelationshipMap:(BOOL)arg2;
- (id)createDictionaryWithRecordsWithIdentifiers:(id)arg1 constructRelationshipMap:(BOOL)arg2;
- (id)createDictionaryAndArray:(id *)arg1 withRecordsWithIdentifiers:(id)arg2 constructRelationshipMap:(BOOL)arg3;
- (void)updateRelationshipsForRecordsInDictionary:(id)arg1 withRecordIds:(id)arg2 stringTable:(id)arg3 constructRelationshipMap:(BOOL)arg4;
- (void)enumerateRecordHeadersForRecordsAlteredSinceLastSyncedGenerations:(id)arg1 asArgumentsToFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (void)enumerateRecordsForRecordIds:(id)arg1 includeProperties:(BOOL)arg2 asArgumentsToFunction:(CDUnknownFunctionPointerType)arg3 context:(void *)arg4;
- (id)recordIdentifiersOfRecordsInStates:(int *)arg1 count:(unsigned long long)arg2 entityNames:(id)arg3;
- (void)replaceRelationshipTupleId:(id)arg1 withRelationshipTupleId:(id)arg2;
- (void)replaceRecordId:(id)arg1 withRecordId:(id)arg2;
- (id)createArrayOfEntityNamesEntityNamesWithUndeletedRecords:(id)arg1 lessThanGeneration:(unsigned int)arg2;
- (id)deleteCountsForEntityNames:(id)arg1 generation:(unsigned int)arg2;
- (id)entityNumbersForRecords:(id)arg1;
- (id)addCountsForEntityNames:(id)arg1 generation:(unsigned int)arg2;
- (id)recordCountsForEntityNames:(id)arg1;
- (id)recordIdsWithDataReferencesForEntityNames:(id)arg1;
- (id)recordIdsForEntityNames:(id)arg1;
- (id)deletedRecordIdsInTruth:(id)arg1;
- (id)recordIdsInTruth:(id)arg1;
- (id)recordIdsInTruth:(id)arg1 includeDeletedRecords:(BOOL)arg2;
- (void)enumerateRecordIdsWithDataReferencesForEntityNames:(id)arg1 asArgumentsToFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (void)enumerateRecordIdsForEntityNames:(id)arg1 ignoreDeletedRecords:(BOOL)arg2 asArgumentsToFunction:(CDUnknownFunctionPointerType)arg3 context:(void *)arg4;
- (id)recordIdsAddedAfterGeneration:(unsigned int)arg1 forEntityWithName:(id)arg2 fromAnyClientsExceptClientWithId:(id)arg3;
- (id)createRecordIdsForRowids:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (void)addRowidsToIndexSet:(id)arg1 forRecordsWithIds:(id)arg2;
- (void)rowids:(id)arg1 addedAfterGeneration:(unsigned int)arg2 forEntityWithName:(id)arg3 fromAnyClientsExceptClientWithId:(id)arg4;
- (id)getRecordDataReferencesForRecordWithIdentifiers:(id)arg1;
- (void)enumerateRecordDataReferencesForRecordIds:(id)arg1 asArgumentsToFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (id)getRecordDataReferencesForRecordId:(id)arg1 forPropertyName:(id)arg2;
- (void)setToBeApplied:(BOOL)arg1 forRecordsWithEntityNames:(id)arg2;
- (void)setToBeApplied:(BOOL)arg1 forRecordIds:(id)arg2;
- (void)setRecordState:(int)arg1 toBeAppliedFlag:(BOOL)arg2 forRecordIds:(id)arg3 removeProperties:(BOOL)arg4;
- (void)setRecordState:(int)arg1 forRecordIds:(id)arg2;
- (void)setRecordHasDataReferences:(BOOL)arg1 forRecordIds:(id)arg2;
- (void)removeAttributes:(id)arg1 andRelationships:(id)arg2 forRecordsWithIdentifiers:(id)arg3;
- (void)removePropertiesForRecordsWithIdentifiers:(id)arg1;
- (void)setPropertyValueNamed:(id)arg1 toValue:(id)arg2 forClient:(id)arg3 inGeneration:(unsigned int)arg4 forRecordsWithIdentifiers:(id)arg5;
- (void)removeRecordsWithIds:(id)arg1 nullifyReferencesToRemovedRecords:(BOOL)arg2;
- (void)removeTuplesForRecordsWithIds:(id)arg1 nullifyReferencesToRemovedRecords:(BOOL)arg2;
- (void)removeAllRecords;
- (void)removeAllRecordDataReferences;
- (void)removeDataReferencesWithRecordId:(id)arg1 forPropertyName:(id)arg2 updateRecord:(BOOL)arg3;
- (void)removeDataReferencesWithRecordIds:(id)arg1;
- (void)setDeleted:(BOOL)arg1 forRecord:(id)arg2 inGeneration:(unsigned int)arg3 lastChangedByClientId:(id)arg4;
- (void)updateRecord:(id)arg1 inGeneration:(unsigned int)arg2 lastChangedByClientId:(id)arg3 ignoreDeletedRelationshipTuples:(BOOL)arg4;
- (void)addRecord:(id)arg1 state:(int)arg2 toBeAppliedFlag:(BOOL)arg3 ignoreDeletedRelationshipTuples:(BOOL)arg4;
- (void)addDataReference:(id)arg1 withRecordId:(id)arg2 forPropertyName:(id)arg3;
- (id)createDataFromDataWrapperForSqlite:(id)arg1;
- (id)newDataWithPropertiesEncodedForSqlite:(id)arg1;
- (BOOL)containsRecordWithId:(id)arg1;
- (void)recreateIndexes;
- (void)dropIndexes;
- (void)finalize;
- (void)dealloc;
- (void)closeDatabase;
- (void)finalizeStatements;
- (id)initWithDatabaseInDirectory:(id)arg1;
- (id)initWithDatabaseInDirectory:(id)arg1 delegate:(id)arg2;

@end

