//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <MapKit/_MKUIViewController.h>

#import <MapKit/_MKAnimationStackViewDelegate-Protocol.h>
#import <MapKit/_MKStackViewDelegate-Protocol.h>

@class NSArray, NSHashTable, NSLayoutConstraint, NSMapTable, NSScrollView, NSString, NSView, _MKStackView, _MKStackingContentView;
@protocol MKStackingViewControllerDelegate;

@interface MKStackingViewController : _MKUIViewController <_MKStackViewDelegate, _MKAnimationStackViewDelegate>
{
    _MKStackView *_stackView;
    _MKStackingContentView *_contentView;
    NSLayoutConstraint *_heightCompressionResistanceConstraint;
    NSLayoutConstraint *_heightHuggingConstraint;
    NSLayoutConstraint *_widthConstraint;
    NSLayoutConstraint *_stackViewWidthConstraint;
    BOOL _isScrollDisabled;
    unsigned long long _countOfCurrentLayoutInvocations;
    NSScrollView *_scrollView;
    NSLayoutConstraint *_titleViewLeadingConstraint;
    BOOL _hasRegisteredForPreferredScrollerStyleNotifications;
    BOOL _currentlyScrolling;
    NSMapTable *_viewsToViewControllers;
    NSArray *_titleViewConstraints;
    BOOL _willRelayoutForPreferredContentSizeChange;
    BOOL _isSettingStackedViews;
    BOOL _contentViewConstraintsAdded;
    NSHashTable *_minimallyVisibleViews;
    BOOL _needsToPerformLayout;
    NSView *_overlayView;
    double _overlayViewOriginY;
    BOOL _mayWantSpearators;
    BOOL _needToCallViewControllerLayoutDelegate;
    NSView *_titleView;
    NSArray *_viewControllers;
    id <MKStackingViewControllerDelegate> _stackingDelegate;
}

@property(nonatomic) __weak id <MKStackingViewControllerDelegate> stackingDelegate; // @synthesize stackingDelegate=_stackingDelegate;
@property(copy, nonatomic) NSArray *viewControllers; // @synthesize viewControllers=_viewControllers;
@property(retain, nonatomic) NSView *titleView; // @synthesize titleView=_titleView;
- (void).cxx_destruct;
- (void)_preferredScrollerStyleDidChange;
- (BOOL)isViewVisbile:(id)arg1 percentageTreshold:(double)arg2;
- (void)_updateViewControllerVisibilityAfterPositionChange;
- (void)_didScroll;
- (void)_didScrollFromBoundsDidChangeNotification:(id)arg1;
- (void)scrollToTopAnimated:(BOOL)arg1;
- (void)_scrollViewDidEndScroll:(id)arg1;
- (void)_scrollViewWillStartScroll:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)_updateScrollerInsetWithPhase:(long long)arg1;
- (void)_updateScrollerInsetFromFrameChange;
- (void)setVerticalScrollerInset:(double)arg1;
@property(readonly, nonatomic) double verticalScrollerInset;
@property(retain, nonatomic) NSLayoutConstraint *titleViewLeadingConstraint;
- (void)updateViewConstraints;
- (void)_removePreferredHeightConstraintFromViewController:(id)arg1;
- (void)_addPreferredHeightConstraintForViewControllerIfNeeded:(id)arg1;
- (void)_setOverlayViewFrame;
- (void)removeOverlayViewAnimated:(BOOL)arg1;
- (void)setOverlayView:(id)arg1 withOriginY:(double)arg2;
- (void)_tearDownExitingViewController:(id)arg1;
- (void)_setUpEnteringViewController:(id)arg1;
- (double)stackView:(id)arg1 distanceBetweenUpperView:(id)arg2 andLowerView:(id)arg3;
- (void)_callViewControllersLayoutDelegateIfNeeded;
- (void)_updateStackViewSubviewsAndChildVCsEntering:(id)arg1 exiting:(id)arg2;
- (void)stackViewNeedsLayout:(id)arg1;
- (void)_updateFixedHeightAwareControllers;
- (void)setWidthConstraintConstant:(double)arg1;
- (double)currentHeight;
- (double)_fittingHeightForView:(id)arg1;
@property(nonatomic, getter=isScrollEnabled) BOOL scrollEnabled;
- (void)_setScrollEnabled:(BOOL)arg1 forcedUpdate:(BOOL)arg2;
- (double)_titleHeight;
- (void)_addTitleViewToHierarchyIfPossible;
- (BOOL)_isSafeToPerformLayout;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

