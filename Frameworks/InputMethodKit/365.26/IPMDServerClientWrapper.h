//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <InputMethodKit/IMKTextInput-Protocol.h>
#import <InputMethodKit/IMKUnicodeTextInput-Protocol.h>
#import <InputMethodKit/IMTSMSupport-Protocol.h>

@class NSAppearance, NSMutableDictionary, NSString, NSXPCConnection;
@protocol NSObject><IMKTextInput><IMKUnicodeTextInput><IMTSMSupport;

@interface IPMDServerClientWrapper : NSObject <IMKTextInput, IMKUnicodeTextInput, IMTSMSupport>
{
    id <NSObject><IMKTextInput><IMKUnicodeTextInput><IMTSMSupport> _clientDOProxy;
    NSXPCConnection *_xpcConnection;
    BOOL _usesXPC;
    BOOL _inserting;
    unsigned long long _markedCharacterCount;
    NSString *_markedTextCache;
    BOOL _currentAttributesCacheValid;
    BOOL _currentIndexZeroAttributeCacheValid;
    long long _keyboardType;
    NSMutableDictionary *_validEvents;
    double _replyTimeout;
    BOOL _isForcedSilentCommitComposition;
    int _windowLevel_Cache;
    NSString *_bundleIdentifier_Cache;
    NSAppearance *_viewEffectiveAppearance_Cache;
    NSMutableDictionary *_attributes_Cache;
}

+ (void)terminateForClientXPCConn:(id)arg1;
+ (void)terminateForClientDOProxy:(id)arg1;
+ (id)clientWrapperWithClientDOProxy:(id)arg1;
+ (id)clientWrapperWithClientXPCConn:(id)arg1;
+ (id)_validateClientWrapper:(id)arg1;
+ (void)invalidateConnectionsAsNecessary:(id)arg1;
@property(nonatomic) BOOL currentIndexZeroAttributeCacheValid; // @synthesize currentIndexZeroAttributeCacheValid=_currentIndexZeroAttributeCacheValid;
@property(nonatomic) BOOL currentAttributesCacheValid; // @synthesize currentAttributesCacheValid=_currentAttributesCacheValid;
@property(readonly, nonatomic) NSMutableDictionary *attributes_Cache; // @synthesize attributes_Cache=_attributes_Cache;
- (void)invalidateAttributesCacheForAllIndex:(BOOL)arg1;
- (void)setAttributes_Cache:(id)arg1 forIndex:(unsigned long long)arg2;
- (id)attributesForCharacterIndex_Cache:(unsigned long long)arg1;
@property(retain, nonatomic) NSAppearance *viewEffectiveAppearance_Cache; // @synthesize viewEffectiveAppearance_Cache=_viewEffectiveAppearance_Cache;
@property(copy, nonatomic) NSString *bundleIdentifier_Cache; // @synthesize bundleIdentifier_Cache=_bundleIdentifier_Cache;
@property(nonatomic) int windowLevel_Cache; // @synthesize windowLevel_Cache=_windowLevel_Cache;
- (void)invalidateClientCacheOnActivateServer;
- (BOOL)isAutomaticPeriodSubstitutionEnabled_WithAvailability:(char *)arg1;
- (BOOL)isAutomaticCapitalizationEnabled_WithAvailability:(char *)arg1;
- (BOOL)isSmartInsertDeleteEnabled_WithAvailability:(char *)arg1;
- (BOOL)isAutomaticQuoteSubstitutionEnabled_WithAvailability:(char *)arg1;
- (BOOL)isAutomaticDashSubstitutionEnabled_WithAvailability:(char *)arg1;
- (BOOL)isAutomaticSpellingCorrectionEnabled_WithAvailability:(char *)arg1;
- (BOOL)isAutomaticTextReplacementEnabled_WithAvailability:(char *)arg1;
- (BOOL)isAutomaticTextCompletionEnabled_WithAvailability:(char *)arg1;
- (BOOL)isGrammarCheckingEnabled_WithAvailability:(char *)arg1;
- (BOOL)isContinuousSpellCheckingEnabled_WithAvailability:(char *)arg1;
- (id)windowEffectiveAppearance;
- (id)viewEffectiveAppearance;
- (void)dismissFunctionRowItemTextInputView;
- (void)presentFunctionRowItemTextInputView;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (id)stringFromRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (id)uniqueClientIdentifierString;
- (void)commitPendingInlineSession;
- (void)hidePalettesAtInsertionPoint;
- (BOOL)isDictationHiliteCapableInputContext;
- (BOOL)isTextPlaceholderAwareInputContext;
- (BOOL)isBottomLineInputContext;
- (void)inputSessionDoneSleep;
- (void)terminatePalette:(id)arg1;
- (BOOL)isPaletteTerminated:(id)arg1;
- (void)setReplyTimeout:(double)arg1;
- (double)replyTimeout;
- (void)invalidateAllEvents;
- (void)addValidEvent:(id)arg1 withClientUniqueNum:(unsigned long long)arg2;
- (void)setKeyboardType:(long long)arg1;
- (unsigned long long)keyboardType;
- (BOOL)supportsTextAttachmentInsertion;
- (BOOL)supportsChromaticMarkedText;
- (unsigned long long)incrementalSearchClientGeometry;
- (BOOL)isIncrementalSearchInputContext;
- (BOOL)wouldHandleEvent:(id)arg1;
- (unsigned int)deadKeyState;
- (void)insertText:(id)arg1;
- (id)currentInputSourceBundleID;
- (void)selectInputMode:(id)arg1;
- (id)bundleIdentifier;
- (BOOL)supportsUnicode;
- (int)windowLevel;
- (void)overrideKeyboardWithKeyboardNamed:(id)arg1;
- (BOOL)supportsProperty:(unsigned int)arg1;
- (id)validAttributesForMarkedText;
- (void)setMarkedText:(id)arg1 selectionRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)setMarkedText:(id)arg1 selectionRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3 validFlags:(unsigned long long)arg4;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2 validFlags:(unsigned long long)arg3;
- (long long)length;
- (void)commit;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (long long)characterIndexForPoint:(struct CGPoint)arg1 tracking:(long long)arg2 inMarkedRange:(char *)arg3;
- (id)attributesForCharacterIndex:(unsigned long long)arg1 lineHeightRectangle:(struct CGRect *)arg2;
- (id)attributesForCharacterIndex:(unsigned long long)arg1;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)markedRange;
- (id)markedRangeValue;
- (struct _NSRange)selectedRange;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (BOOL)_clientTryRespondsToSelector:(SEL)arg1;
- (void)dealloc;
- (void)setForcedSilentCommitComposition:(BOOL)arg1;
- (BOOL)isForcedSilentCommitComposition;
- (void)setMarkedText_Cache:(id)arg1;
- (unsigned long long)markedCharacterCount;
- (BOOL)inserting;
- (void)replyWaitCount_decrementWithLocking;
- (void)replyWaitCount_incrementWithLocking;
- (void)replyWaitCount_unlock;
- (void)replyWaitCount_lockDecrement;
- (void)replyWaitCount_lockIncrement;
- (int)replyWaitCount_testWithLocking;
- (BOOL)usesXPC;
- (id)initWithClientXPCConn:(id)arg1;
- (id)initWithClientDOProxy:(id)arg1;
- (void)clientException;
- (void)resetState;
- (id)_xpcConnection;
- (id)_clientDOProxy;

@end

