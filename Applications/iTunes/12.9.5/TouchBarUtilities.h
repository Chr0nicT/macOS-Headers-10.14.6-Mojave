//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface TouchBarUtilities : NSObject
{
}

+ (void)setAppLaunched:(BOOL)arg1;
+ (BOOL)hasAppLaunched;
+ (BOOL)isFrontWindowBrowserWindow;
+ (BOOL)allSelectedTracksInSameArtist;
+ (BOOL)allSelectedTracksInSameAlbum;
+ (BOOL)currentItemHasVideo;
+ (BOOL)isMixedForNavBarMediaType:(unsigned char)arg1;
+ (BOOL)isPodcastPlaying;
+ (BOOL)isPodcastSelected;
+ (BOOL)isPodcastITItem:(shared_ptr_6c9e05ba)arg1;
+ (BOOL)isTVShowPlaying;
+ (BOOL)isTVShowSelected;
+ (BOOL)isTVShowITItem:(shared_ptr_6c9e05ba)arg1;
+ (BOOL)isMoviePlaying;
+ (BOOL)isMovieSelected;
+ (BOOL)isMovieITItem:(shared_ptr_6c9e05ba)arg1;
+ (BOOL)isMusicPlaying;
+ (BOOL)isMusicSelected;
+ (BOOL)isMusicITItem:(shared_ptr_6c9e05ba)arg1;
+ (BOOL)isPlayingEqualMediaKind:(unsigned int)arg1 isMask:(BOOL)arg2;
+ (BOOL)isSelectedEqualMediaKind:(unsigned int)arg1 isMask:(BOOL)arg2;
+ (BOOL)isEqualMediaKind:(unsigned int)arg1 itItem:(shared_ptr_6c9e05ba)arg2 isMask:(BOOL)arg3;
+ (BOOL)arePlayingOrQueuedTrack;
+ (BOOL)areTracksQueued;
+ (BOOL)isTrackPlaying;
+ (shared_ptr_6c9e05ba)copySelectedCollectionITItem;
+ (unsigned char)currentMediaViewMode;
+ (_Bool)hasAvailableAlternateTracks;
+ (shared_ptr_48d2d79c)currentPlayer;
+ (BOOL)isMiniPlayerInFront;
+ (void)resetTouchBar;
+ (long long)numberOfPlaylistsInCurrentSource;
+ (unsigned char)effectiveCurrentNavBarMediaType;
+ (unsigned char)effectiveCurrentNavBarMediaTypeForITWindow:(shared_ptr_421cc4c7)arg1;
+ (unsigned char)effectiveCurrentNavBarMediaTypeForITView:(shared_ptr_d213862f)arg1;
+ (unsigned char)navBarMediaTypeFromMediaKind:(unsigned int)arg1;
+ (unsigned char)mainBrowserWindowCurrentNavBarMediaType;
+ (id)timeStringForTimeDisplayMode:(unsigned char)arg1;
+ (BOOL)shouldShowAddToLibraryButton;
+ (BOOL)canAddToCloudMusicLibrary;
+ (BOOL)isAccountEnrolledInSubscriptions;
+ (BOOL)addToLibraryAllowedUseSelection:(BOOL)arg1;
+ (void)removeFromLibraryUseSelection:(BOOL)arg1;
+ (void)addToLibraryUseSelection:(BOOL)arg1;
+ (id)recentPlaylistsWithLimitCount:(long long)arg1 useSelection:(BOOL)arg2;
+ (void)addToPlaylist:(struct Playlist *)arg1 useSelection:(BOOL)arg2;
+ (void)withCurrentObjectList:(CDUnknownBlockType)arg1;
+ (void)withPlaylistsOfSourcePlaylist:(struct Playlist *)arg1 perform:(CDUnknownBlockType)arg2;
+ (void)withRecentPlaylistsOfSourcePlaylist:(struct Playlist *)arg1 perform:(CDUnknownBlockType)arg2;
+ (struct TrackData *)trackDataForSourcePlaylist:(struct Playlist *)arg1;
+ (void)withSelectedTracksExpandList:(BOOL)arg1 perform:(CDUnknownBlockType)arg2;
+ (void)withSelectedItemsReversedPerform:(CDUnknownBlockType)arg1;
+ (void)withSelectedItemsPerform:(CDUnknownBlockType)arg1;
+ (void)withSelectedExpandedTrackList:(CDUnknownBlockType)arg1;
+ (long long)numberOfSelectedTracks;
+ (id)currentPlayQueueItemLineAtIndex:(int)arg1;
+ (struct Playlist *)selectedSourcePlaylist;
+ (struct Playlist *)currentSourcePlaylist;
+ (shared_ptr_6c9e05ba)copySelectedPlayableITItem;
+ (shared_ptr_6c9e05ba)copySelectedITItem;
+ (shared_ptr_6c9e05ba)copySelectedITItemAtIndex:(long long)arg1;
+ (shared_ptr_6c9e05ba)currentITItem;
+ (shared_ptr_54ca22dc)currentPlayQueueItem;
+ (shared_ptr_01829c7f)currentPlayQueue;
+ (id)buttonWithTemplateImageNamed:(id)arg1 target:(id)arg2 action:(SEL)arg3;

@end

