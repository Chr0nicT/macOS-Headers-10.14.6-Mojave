//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "IPXDebugMemoryRelatedSnapshotSupport-Protocol.h"
#import "IPXObjectsControllerChangeReceiver-Protocol.h"
#import "IPXSelectionProviderContainer-Protocol.h"
#import "RDLibraryMessagesReceiver-Protocol.h"

@class CALayer, IPXCreateMemoryAction, IPXDatabaseObjectsController, IPXModelDestination, IPXRelatedModelContext, NSArray, NSDate, NSDictionary, NSNumber, NSString, NSValue, PHPhotoLibrary, PXDisplayTitleInfo, RDAlbum, RDDatabase, RDVersion;
@protocol OS_dispatch_queue;

@interface IPXEditorialModel : NSObject <IPXSelectionProviderContainer, RDLibraryMessagesReceiver, IPXObjectsControllerChangeReceiver, IPXDebugMemoryRelatedSnapshotSupport>
{
    struct PFAsyncDispatchMulticaster *_changeMulticaster;
    IPXDatabaseObjectsController *_allVersionsController;
    IPXRelatedModelContext *_relatedModelContext;
    IPXCreateMemoryAction *_createMemoryAction;
    NSNumber *_shouldShowHeader;
    NSString *_titleFontName;
    BOOL _monitoringChanges;
    BOOL _curatedVersionsNeedReload;
    BOOL _curatedVersionsNeedRefresh;
    NSObject<OS_dispatch_queue> *_curationSerializer;
    BOOL _hasContentForCurrentInput;
    BOOL _canSetKeyFaceAndRejectFacesInVersions;
    BOOL _faceModeEnabled;
    BOOL _navigationDestinationIsTransitory;
    BOOL _shouldLoadTitleAndSubtitleAsynchronously;
    PXDisplayTitleInfo *_displayTitleInfo;
    RDAlbum *_originatingAlbum;
    CALayer *_viewerSnapshotLayer;
    RDVersion *_posterVersion;
    NSArray *_curatedVersions;
    NSDictionary *_facesRectsByVersionId;
    long long _titleSubtitleLoadingState;
    NSString *_loadedTitle;
    NSString *_loadedSubtitle;
    long long _loadedTitleCategory;
    struct CGRect _viewerSnapshotFrame;
}

+ (id)versionQueryOptionsForDatabase:(id)arg1;
+ (id)representativeVersionsFromAssetCollection:(id)arg1 fetchLimit:(unsigned long long)arg2;
@property(readonly) BOOL shouldLoadTitleAndSubtitleAsynchronously; // @synthesize shouldLoadTitleAndSubtitleAsynchronously=_shouldLoadTitleAndSubtitleAsynchronously;
@property long long loadedTitleCategory; // @synthesize loadedTitleCategory=_loadedTitleCategory;
@property(retain) NSString *loadedSubtitle; // @synthesize loadedSubtitle=_loadedSubtitle;
@property(retain) NSString *loadedTitle; // @synthesize loadedTitle=_loadedTitle;
@property long long titleSubtitleLoadingState; // @synthesize titleSubtitleLoadingState=_titleSubtitleLoadingState;
@property(nonatomic) BOOL navigationDestinationIsTransitory; // @synthesize navigationDestinationIsTransitory=_navigationDestinationIsTransitory;
@property(nonatomic) BOOL faceModeEnabled; // @synthesize faceModeEnabled=_faceModeEnabled;
@property(readonly, nonatomic) BOOL canSetKeyFaceAndRejectFacesInVersions; // @synthesize canSetKeyFaceAndRejectFacesInVersions=_canSetKeyFaceAndRejectFacesInVersions;
@property(retain) NSDictionary *facesRectsByVersionId; // @synthesize facesRectsByVersionId=_facesRectsByVersionId;
@property(retain) NSArray *curatedVersions; // @synthesize curatedVersions=_curatedVersions;
@property(retain) RDVersion *posterVersion; // @synthesize posterVersion=_posterVersion;
@property(readonly, nonatomic) struct CGRect viewerSnapshotFrame; // @synthesize viewerSnapshotFrame=_viewerSnapshotFrame;
@property(readonly, nonatomic) CALayer *viewerSnapshotLayer; // @synthesize viewerSnapshotLayer=_viewerSnapshotLayer;
@property(readonly, nonatomic) RDAlbum *originatingAlbum; // @synthesize originatingAlbum=_originatingAlbum;
@property(readonly, nonatomic) BOOL hasContentForCurrentInput; // @synthesize hasContentForCurrentInput=_hasContentForCurrentInput;
- (void).cxx_destruct;
- (void)objectsControllerObjectsCollectionChanged:(id)arg1;
- (id)metadataDescriptionSummaryForModels:(id)arg1;
- (void)snapshotRelatedResultsWithModels:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)snapshotCurationResultsForDatabaseModelWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)snapshotGraphStateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)snapshotCollectionMetadataWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *sourceIdentifier;
- (void)libraryUpdatedVersion:(id)arg1 forKeyPaths:(id)arg2;
- (void)libraryUpdatedMemory:(id)arg1 forKeyPaths:(id)arg2;
@property(readonly, nonatomic) unsigned long long userEventSourceType;
@property(readonly, nonatomic) NSArray *browserToolbarItems;
@property(readonly, nonatomic) IPXModelDestination *navigationDestination;
@property(readonly, nonatomic) BOOL canBlacklistMemory;
- (void)deleteMemoryWithUndoManager:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) BOOL canDeleteMemory;
- (void)createMemoryWithUndoManager:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_createMemoryAction;
@property(readonly, nonatomic, getter=isMemoryCreated) BOOL memoryCreated;
@property(readonly, nonatomic) BOOL canCreateMemory;
- (void)toggleFavoriteWithUndoManager:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isFavorite) BOOL favorite;
@property(readonly, nonatomic) BOOL canFavorite;
@property(readonly, nonatomic) BOOL showLocationAddress;
@property(readonly, nonatomic) NSString *locationTitle;
@property(readonly, nonatomic) BOOL hasLocation;
@property(readonly, nonatomic) BOOL needsFaceRectsForAllVersions;
@property(readonly, nonatomic) BOOL canShowSocialGroups;
- (void)toggleAddToPeopleHome:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setKeyFaceUsingVersion:(id)arg1 undoManager:(id)arg2;
- (BOOL)canSetKeyFace;
- (void)rejectFacesInVersions:(id)arg1 undoManager:(id)arg2;
- (BOOL)canRejectFacesInVersions;
@property(readonly, nonatomic) NSArray *representedPersons;
@property(readonly, nonatomic) NSArray *personsInVersions;
@property(readonly, nonatomic) unsigned long long personCountInVersions;
@property(readonly, nonatomic) BOOL canHaveFaceSuggestionResults;
@property(readonly, nonatomic) BOOL canAddRemoveFromPeopleHome;
- (void)enumerateRelatedModelsWithFetchLimit:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)_relatedCollectionListWithOptions:(id)arg1;
@property(readonly) NSArray *representativeVersions;
@property(readonly) BOOL shouldShowHeaderTitle;
@property(readonly) BOOL shouldShowHeader;
- (BOOL)curatedVersionsNeedRefresh;
- (void)setCuratedVersionsNeedRefresh;
- (void)refreshCuratedVersionsIfNecessary;
- (BOOL)curatedVersionsNeedReload;
- (void)setCuratedVersionsNeedReload;
@property(readonly) NSValue *posterFacesRectValue;
- (void)loadCuratedVersionsIfNecessary;
- (void)loadPosterVersionIfNecessary;
@property(readonly) BOOL canLoadPosterVersion;
- (id)_curatedVersionsWithFetchLimit:(unsigned long long)arg1;
- (id)_fetchCuratedAssetsInAssetCollection:(id)arg1 options:(id)arg2;
- (id)_fetchKeyCuratedAssetInAssetCollection:(id)arg1 options:(id)arg2;
- (void)_updateFacesRectsWithVersions:(id)arg1;
- (id)_faceRectsVersions;
- (id)_allVersions;
- (id)_allCuratedVersions;
- (id)personsForVersionsQuery:(id)arg1 context:(long long)arg2;
- (unsigned long long)personCountInVersionsQuery:(id)arg1 context:(long long)arg2;
@property(readonly) NSDate *titleFontNameHashDate;
@property(readonly) unsigned long long titleFontNameHash;
- (void)_invalidateTitleFontName;
@property(readonly, nonatomic) NSString *titleFontName;
@property(readonly, nonatomic) NSString *singleLineTitle;
- (void)_invalidateLoadedTitleAndSubtitle;
- (void)_handleLoadedTitle:(id)arg1 subtitle:(id)arg2 titleCategory:(long long)arg3;
- (void)_loadTitleAndSubtitleInBackground;
- (void)_loadTitleAndSubtitleIfNecessary;
- (void)_loadTitleAndSubtitleWithPreferredAttributedPromise:(CDUnknownBlockType)arg1 defaultTitle:(id)arg2 defaultSubtitle:(id)arg3 defaultTitleCategory:(long long)arg4 resultHandler:(CDUnknownBlockType)arg5;
- (void)loadTitleAndSubtitleWithResultHandler:(CDUnknownBlockType)arg1;
- (void)_updateDisplayTitleInfo;
@property(readonly, nonatomic) PXDisplayTitleInfo *displayTitleInfo; // @synthesize displayTitleInfo=_displayTitleInfo;
@property(readonly) long long titleCategory;
@property(readonly, nonatomic) NSString *windowTitle;
@property(readonly, nonatomic) NSString *subtitle;
@property(readonly, nonatomic) NSString *title;
- (id)additionalMenuItemsForVersions:(id)arg1;
- (unsigned long long)prefetchedAssetCountWithLimit:(unsigned long long)arg1;
- (BOOL)supportsPrefetchedAssetCount;
- (id)newAsset;
- (id)newAssetCollection;
@property(readonly, nonatomic) BOOL canHaveAssetCollection;
- (id)newAllVersionsController;
- (void)removeChangeReceiver:(id)arg1;
- (void)addChangeReceiver:(id)arg1;
- (struct PFAsyncDispatchMulticaster *)_changeMulticasterAllowingCreation:(BOOL)arg1;
- (void)stopMonitoringChanges;
- (void)startMonitoringChanges;
- (void)reload;
@property(readonly, nonatomic) NSString *uuid;
@property(readonly, nonatomic) unsigned long long modelId;
@property(readonly) PHPhotoLibrary *photoLibrary;
@property(readonly, nonatomic) RDDatabase *database;
@property(readonly, nonatomic) IPXRelatedModelContext *relatedModelContext;
@property(readonly, nonatomic) NSArray *allVersionIds;
@property(readonly, nonatomic) IPXDatabaseObjectsController *allVersionsController;
- (void)dealloc;
- (id)_initWithPosterVersion:(id)arg1 posterFacesRectValue:(id)arg2;
- (id)initWithPersons:(id)arg1;
- (id)initWithRelatedCollection:(id)arg1 posterVersion:(id)arg2 posterFacesRectValue:(id)arg3;
- (id)initWithDatabaseVersion:(id)arg1 viewerDelegate:(id)arg2;
- (id)initWithDatabaseSparseAlbumController:(id)arg1 posterVersion:(id)arg2;
- (id)initWithDatabaseMemory:(id)arg1 posterVersion:(id)arg2;
- (id)initWithDatabaseMoment:(id)arg1 posterVersion:(id)arg2;
- (id)initWithDatabaseMomentYear:(id)arg1 posterVersion:(id)arg2;
- (id)initWithDatabaseMomentCollection:(id)arg1 posterVersion:(id)arg2;
- (id)selectedContainerTitle;
- (unsigned long long)containerType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

