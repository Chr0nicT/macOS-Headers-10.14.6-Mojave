//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "MGDocument.h"

#import "AVCaptureFileOutputDelegate-Protocol.h"
#import "AVCaptureFileOutputRecordingDelegate-Protocol.h"
#import "AVTouchBarRecordingControlsControlling-Protocol.h"

@class AVCaptureFileOutput, AVCaptureSession, AVTouchBarCaptureInputSourceItem, MGCaptureCompressionPreset, MGCaptureDeviceAndInputSourceSelectionController, MGCaptureDeviceSelectionController, MGFormatDescription, NSArray, NSError, NSNumber, NSObject, NSString, NSURL;
@protocol OS_dispatch_source;

@interface MGRecordingDocument : MGDocument <AVCaptureFileOutputDelegate, AVCaptureFileOutputRecordingDelegate, AVTouchBarRecordingControlsControlling>
{
    NSURL *_outputDirectory;
    unsigned int _videoFormatFourCC;
    unsigned int _audioFormatFourCC;
    struct opaqueCMFormatDescription *_lastOutputVideoFormat;
    struct opaqueCMFormatDescription *_lastOutputAudioFormat;
    unsigned int _flags;
    NSArray *_tagNamesFromLastRunSavePanel;
    unsigned long long _recordingType;
    NSObject<OS_dispatch_source> *_recordingTimeAndSizeTimer;
    NSNumber *_previouslyRecordedFileSize;
    double _previouslyRecordedTime;
    BOOL _hasCaptureConnection;
    AVCaptureSession *_captureSession;
    AVCaptureFileOutput *_captureFileOutput;
    MGCaptureDeviceSelectionController *_captureDeviceSelectionController;
    MGCaptureDeviceAndInputSourceSelectionController *_captureDeviceAndInputSourceSelectionController;
    NSURL *_outputFile;
    double _recordedTime;
    NSNumber *_recordedFileSize;
    NSError *_recordingError;
    MGFormatDescription *_outputVideoFormat;
    MGFormatDescription *_outputAudioFormat;
    MGCaptureCompressionPreset *_compressionPreset;
    CDUnknownBlockType _closeAfterRecordingHandler;
}

+ (id)keyPathsForValuesAffectingSelectedAudioTouchBarInputSourceItem;
+ (id)keyPathsForValuesAffectingAudioTouchBarInputSourceItems;
+ (BOOL)autosavesDrafts;
+ (BOOL)autosavesInPlace;
+ (id)keyPathsForValuesAffectingCanResumeRecording;
+ (id)keyPathsForValuesAffectingCanPauseRecording;
+ (id)keyPathsForValuesAffectingPaused;
+ (id)keyPathsForValuesAffectingCanStopRecording;
+ (id)keyPathsForValuesAffectingCanStartRecording;
+ (id)modifiedFormatDescriptionFromFormatDescription:(struct opaqueCMFormatDescription *)arg1 formatFourCC:(unsigned int)arg2;
@property(copy) CDUnknownBlockType closeAfterRecordingHandler; // @synthesize closeAfterRecordingHandler=_closeAfterRecordingHandler;
@property BOOL hasCaptureConnection; // @synthesize hasCaptureConnection=_hasCaptureConnection;
@property(retain, nonatomic) MGCaptureCompressionPreset *compressionPreset; // @synthesize compressionPreset=_compressionPreset;
@property(retain, nonatomic) MGFormatDescription *outputAudioFormat; // @synthesize outputAudioFormat=_outputAudioFormat;
@property(retain, nonatomic) MGFormatDescription *outputVideoFormat; // @synthesize outputVideoFormat=_outputVideoFormat;
@property(copy, nonatomic) NSError *recordingError; // @synthesize recordingError=_recordingError;
@property(retain) NSNumber *recordedFileSize; // @synthesize recordedFileSize=_recordedFileSize;
@property double recordedTime; // @synthesize recordedTime=_recordedTime;
@property(readonly, nonatomic) NSURL *outputFile; // @synthesize outputFile=_outputFile;
@property(readonly, nonatomic) MGCaptureDeviceAndInputSourceSelectionController *captureDeviceAndInputSourceSelectionController; // @synthesize captureDeviceAndInputSourceSelectionController=_captureDeviceAndInputSourceSelectionController;
@property(readonly, nonatomic) MGCaptureDeviceSelectionController *captureDeviceSelectionController; // @synthesize captureDeviceSelectionController=_captureDeviceSelectionController;
@property(readonly, nonatomic) AVCaptureFileOutput *captureFileOutput; // @synthesize captureFileOutput=_captureFileOutput;
@property(readonly, nonatomic) AVCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
- (void).cxx_destruct;
- (void)selectTouchBarInputSourceItem:(id)arg1;
@property(readonly) AVTouchBarCaptureInputSourceItem *selectedAudioTouchBarInputSourceItem;
@property(readonly) NSArray *audioTouchBarInputSourceItems;
- (id)makeTouchBarCaptureInputSourceItem:(id)arg1;
- (BOOL)_shouldShowAutosaveButtonForWindow:(id)arg1;
- (id)tagNamesFromLastRunSavePanel;
- (void)document:(id)arg1 didSave:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)commitEditingWithDelegate:(id)arg1 didCommitSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (id)writableTypesForSaveOperation:(unsigned long long)arg1;
- (BOOL)canAsynchronouslyWriteToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3;
- (void)runModalSavePanelForSaveOperation:(unsigned long long)arg1 delegate:(id)arg2 didSaveSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)saveDocumentWithDelegate:(id)arg1 didSaveSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)recordingDocumentWorkspaceWillSleep:(id)arg1;
- (void)recordingDocumentWorkspaceSessionDidResignActive:(id)arg1;
- (void)captureSessionRuntimeErrorDidOccur:(id)arg1;
- (void)canCloseDocumentAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (void)recordingDidFinish;
- (void)finishRecordingAndOpenDocumentWithURL:(id)arg1;
- (id)willPresentError:(id)arg1;
- (void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4;
- (void)fileOutputWillFinishRecording;
- (void)captureOutput:(id)arg1 willFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4;
- (BOOL)captureOutputShouldProvideSampleAccurateRecordingStart:(id)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)captureFileOutputDidOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 fromConnection:(id)arg2;
- (void)recordingTimeAndSizeTimerTask;
- (void)stopRecordingTimeAndSizeTimer;
- (void)startRecordingTimeAndSizeTimer;
- (void)updateRecordingTimeAndSize;
- (void)stopWritingData;
- (BOOL)startWritingDataToURL:(id)arg1 error:(id *)arg2;
- (void)resumeRecording;
@property(readonly) BOOL canResumeRecording;
- (void)pauseRecording;
@property(readonly) BOOL canPauseRecording;
@property(readonly, getter=isPaused) BOOL paused;
- (void)stopRecording;
@property(readonly) BOOL canStopRecording;
- (void)startRecording;
@property(readonly) BOOL canStartRecording;
@property(readonly, getter=isFinishingRecording) BOOL finishingRecording;
@property(readonly, getter=isRecording) BOOL recording;
@property(readonly, getter=isReady) BOOL ready;
- (void)applyCompressionOptionsToCaptureSession;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)outputFileType;
- (id)baseOutputFileName;
@property(copy, nonatomic) NSURL *outputDirectory;
- (id)displayName;
- (void)close;
- (void)dealloc;
- (id)initWithRecordingType:(unsigned long long)arg1;
- (id)init;
- (void)handleStopCommand:(id)arg1;
- (void)applyDocumentErrorsToScriptCommand:(id)arg1;
- (void)handleStartCommand:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) NSArray *screenTouchBarInputSourceItems;
@property(readonly) AVTouchBarCaptureInputSourceItem *selectedScreenTouchBarInputSourceItem;
@property(readonly) AVTouchBarCaptureInputSourceItem *selectedVideoTouchBarInputSourceItem;
@property(readonly) Class superclass;
@property(readonly) NSArray *videoTouchBarInputSourceItems;

@end

