//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSView.h>

#import "NSAccessibilityImage-Protocol.h"
#import "NSDraggingSource-Protocol.h"
#import "NSSharingServiceDelegate-Protocol.h"
#import "NSSharingServicePickerDelegate-Protocol.h"
#import "ServicesRolloverViewDelegate-Protocol.h"

@class AttachmentViewController, NSImageView, NSSharingServicePicker, NSString, NSURL, ServicesRolloverView;
@protocol AttachmentView;

@interface AttachmentView : NSView <NSSharingServicePickerDelegate, ServicesRolloverViewDelegate, NSAccessibilityImage, NSDraggingSource, NSSharingServiceDelegate>
{
    AttachmentViewController *_controller;
    NSView<AttachmentView> *_registeredViewer;
    NSSharingServicePicker *_servicesPicker;
    long long _fixedWidth;
    NSString *_elementID;
    BOOL _invisible;
    BOOL _isSelected;
    BOOL _webViewIsEditable;
    BOOL _needsToAdjustWebFrame;
    BOOL _drawWithBorder;
    BOOL _initializedImage;
    NSURL *_URL;
    double _documentMargin;
    long long _fixedHeight;
    NSString *_firstLineLabel;
    NSString *_secondLineLabel;
    NSString *_sizeLabel;
    NSImageView *_imageView;
    double _timeOfFirstDisplay;
    ServicesRolloverView *_servicesRolloverView;
    struct CGRect _downloadImageRect;
}

@property(readonly, nonatomic) ServicesRolloverView *servicesRolloverView; // @synthesize servicesRolloverView=_servicesRolloverView;
@property(nonatomic) double timeOfFirstDisplay; // @synthesize timeOfFirstDisplay=_timeOfFirstDisplay;
@property(nonatomic) BOOL initializedImage; // @synthesize initializedImage=_initializedImage;
@property(retain, nonatomic) NSImageView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) struct CGRect downloadImageRect; // @synthesize downloadImageRect=_downloadImageRect;
@property(nonatomic) BOOL drawWithBorder; // @synthesize drawWithBorder=_drawWithBorder;
@property(nonatomic) BOOL needsToAdjustWebFrame; // @synthesize needsToAdjustWebFrame=_needsToAdjustWebFrame;
@property(nonatomic) BOOL webViewIsEditable; // @synthesize webViewIsEditable=_webViewIsEditable;
@property(nonatomic) BOOL isSelected; // @synthesize isSelected=_isSelected;
@property(copy, nonatomic) NSString *sizeLabel; // @synthesize sizeLabel=_sizeLabel;
@property(copy, nonatomic) NSString *secondLineLabel; // @synthesize secondLineLabel=_secondLineLabel;
@property(copy, nonatomic) NSString *firstLineLabel; // @synthesize firstLineLabel=_firstLineLabel;
@property(nonatomic) long long fixedHeight; // @synthesize fixedHeight=_fixedHeight;
@property(nonatomic) double documentMargin; // @synthesize documentMargin=_documentMargin;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (BOOL)_accessibilityIsTableViewDescendant;
- (BOOL)accessibilityShouldUseUniqueId;
- (void)_accessibilityShowMenu;
- (BOOL)accessibilityPerformShowMenu;
- (id)accessibilityLabel;
- (id)accessibilityTitle;
- (id)accessibilitySubrole;
- (void)sharingService:(id)arg1 didShareItems:(id)arg2;
- (id)sharingService:(id)arg1 sourceWindowForShareItems:(id)arg2 sharingContentScope:(long long *)arg3;
- (id)sharingService:(id)arg1 transitionImageForShareItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)sharingService:(id)arg1 sourceFrameOnScreenForShareItem:(id)arg2;
- (id)sharingServicePicker:(id)arg1 sharingServicesForItems:(id)arg2 mask:(unsigned long long)arg3 proposedSharingServices:(id)arg4;
- (id)sharingServicePicker:(id)arg1 delegateForSharingService:(id)arg2;
- (id)pickerForRolloverCalloutView:(id)arg1;
@property(readonly, nonatomic) NSSharingServicePicker *servicesPicker;
- (void)_retrieveAttachmentFromSharedItem:(id)arg1 attachmentFilename:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)_updateServicesRolloverBounds;
- (id)quickLookTransitionImage;
- (struct CGRect)quickLookRectForFrame:(struct CGRect)arg1;
- (struct CGRect)_rectForImage;
- (struct CGSize)_sizeInViewCoordinatesOfImage:(id)arg1;
- (void)_drawIcon:(id)arg1;
- (id)sizeLabelAttributes;
- (id)labelAttributes;
- (id)_image;
- (id)_labelColor;
- (id)sizeLabelColor;
- (id)sizeLabelFont;
- (id)_labelFont;
@property(nonatomic) BOOL invisible;
- (void)_updateElementVisbility;
- (void)viewDidMoveToWindow;
- (void)viewDidMoveToSuperview;
- (id)menuForEvent:(id)arg1;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)webPlugInSetIsSelected:(BOOL)arg1;
- (void)webPlugInDestroy;
- (void)webPlugInStop;
- (void)webPlugInStart;
- (void)webPlugInInitialize;
- (void)mouseDragged:(id)arg1;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (id)_imageForDrag;
- (id)view:(id)arg1 stringForToolTip:(long long)arg2 point:(struct CGPoint)arg3 userData:(void *)arg4;
- (void)resetCursorRects;
- (void)_backingScaleFactorChanged:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
@property(copy, nonatomic) NSString *elementID;
@property(nonatomic) __weak AttachmentViewController *controller;
- (struct CGSize)_sizeOfContentsRespectingMaxWidth:(double)arg1;
@property(nonatomic) long long fixedWidth;
- (void)sizeToFit;
@property(readonly, nonatomic) BOOL displaying2PixelPerPointImage;
- (void)refreshView;
- (void)downloadDidFinish;
- (void)didChangeViewingMode;
- (void)drawRect:(struct CGRect)arg1;
- (void)_refreshImage;
@property(retain, nonatomic) NSView<AttachmentView> *registeredViewer;
@property(readonly, nonatomic) BOOL hasRegisteredViewer;
- (id)makeBackingLayer;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)dealloc;
- (void)_attachmentViewCommonInitForEditing:(BOOL)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 isForEditing:(BOOL)arg2;
- (struct CGSize)_computeSizeAndLabels;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

