//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSView.h>

#import "CalUIOccurrenceContainer-Protocol.h"

@class CalDateRange, CalUIOccurrenceCollector, CalUIViewController, NSArray, NSString;

@interface CalUIOccurrenceContainerView : NSView <CalUIOccurrenceContainer>
{
    BOOL _needsUpdateOccurrenceConstraints;
    BOOL _pendingLayoutAfterOccurrenceDrag;
    CalUIViewController *_viewController;
    CalDateRange *_dateRange;
    CalUIOccurrenceCollector *_occurrenceCollector;
    CalUIOccurrenceCollector *_proposedOccurrenceCollector;
    CalUIOccurrenceCollector *_ephemeralOccurrenceCollector;
    NSArray *_cachedPermanentOccurrenceArray;
    NSArray *_cachedAllOccurrenceArray;
}

@property(retain) NSArray *cachedAllOccurrenceArray; // @synthesize cachedAllOccurrenceArray=_cachedAllOccurrenceArray;
@property(retain) NSArray *cachedPermanentOccurrenceArray; // @synthesize cachedPermanentOccurrenceArray=_cachedPermanentOccurrenceArray;
@property BOOL pendingLayoutAfterOccurrenceDrag; // @synthesize pendingLayoutAfterOccurrenceDrag=_pendingLayoutAfterOccurrenceDrag;
@property(retain) CalUIOccurrenceCollector *ephemeralOccurrenceCollector; // @synthesize ephemeralOccurrenceCollector=_ephemeralOccurrenceCollector;
@property(retain) CalUIOccurrenceCollector *proposedOccurrenceCollector; // @synthesize proposedOccurrenceCollector=_proposedOccurrenceCollector;
@property(retain) CalUIOccurrenceCollector *occurrenceCollector; // @synthesize occurrenceCollector=_occurrenceCollector;
@property(retain) CalDateRange *dateRange; // @synthesize dateRange=_dateRange;
@property BOOL needsUpdateOccurrenceConstraints; // @synthesize needsUpdateOccurrenceConstraints=_needsUpdateOccurrenceConstraints;
@property __weak CalUIViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (void)clearCachedOccurrenceArray;
- (void)clearSortedOccurrencesCache;
- (void)layoutOccurrences;
- (void)occurrencesRequireRelayout:(id)arg1;
- (Class)occurrenceClass;
- (id)filteredEventsToDisplay:(id)arg1;
- (BOOL)eventBelongsInThisContainer:(id)arg1;
- (void)removeOccurrence:(id)arg1;
- (id)makeOccurrenceWithEvent:(id)arg1 isEphemeral:(BOOL)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)_addUIOccurrenceWithEvent:(id)arg1 isEphemeral:(BOOL)arg2 isProposal:(BOOL)arg3;
- (id)addUIOccurrenceWithEvent:(id)arg1 isEphemeral:(BOOL)arg2;
- (void)cleanupOccurrence:(id)arg1;
- (void)removeAllOccurrences;
- (void)removeEventOccurrenceID:(id)arg1 fromCollectors:(id)arg2;
- (void)removeEventOccurrenceID:(id)arg1;
- (void)clearEphemeralOccurrences;
- (void)clearEventOccurrenceIDs:(id)arg1 inCollectors:(id)arg2;
- (void)clearOccurrences:(id)arg1;
- (void)clearOccurrences;
- (void)addOccurrence:(id)arg1;
- (void)promoteEphemeralOccurrence:(id)arg1;
- (id)proposedOccurrenceForEventOccID:(id)arg1;
- (id)ephemeralOccurrenceForEventOccID:(id)arg1;
- (id)ephemeralOccurrences;
- (id)uiOccForEventOccurrenceID:(id)arg1;
- (id)occurrenceDictionary;
- (id)permanentOccurrenceIDs;
- (id)permanentOccurrences;
- (id)allOccurrences;
- (id)anyOccurrenceForEventOccID:(id)arg1;
- (id)events;
- (void)separateEvents:(id)arg1 intoStandardEvents:(id *)arg2 andProposedEvents:(id *)arg3;
- (BOOL)_setupEvents:(id)arg1 withTargetedChangeInfo:(id)arg2 inCollector:(id)arg3;
- (void)_setupEvents:(id)arg1 withTargetedChangeInfo:(id)arg2;
- (void)_setupEventsWholesale:(id)arg1 inCollector:(id)arg2;
- (void)_setupEventsWholesale:(id)arg1;
- (void)setupEvents:(id)arg1 withChangeInfo:(id)arg2;
- (id)_allCollectors;
- (BOOL)isAllDayContainer;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

