//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <CalendarUI/CalUILayerBackedView.h>

#import "CalCMOccurrenceMenuDelegate-Protocol.h"
#import "CalDateRangeProtocol-Protocol.h"
#import "CalUICollectableOccurrence-Protocol.h"
#import "CalUIInspectableOccurrence-Protocol.h"
#import "NSFilePromiseProviderDelegate-Protocol.h"
#import "NSImmediateActionGestureRecognizerDelegate-Protocol.h"
#import "NSTextFieldDelegate-Protocol.h"

@class CalDrawOccurrenceColor, CalUIViewController, EKEvent, NSColor, NSDate, NSNumber, NSString;
@protocol CalUIOccurrenceContainer, CalUIOccurrenceDelegate;

@interface CalUIOccurrence : CalUILayerBackedView <CalUICollectableOccurrence, NSImmediateActionGestureRecognizerDelegate, CalCMOccurrenceMenuDelegate, NSTextFieldDelegate, CalUIInspectableOccurrence, CalDateRangeProtocol, NSFilePromiseProviderDelegate>
{
    BOOL _UIAllDay;
    BOOL _capLeftSide;
    BOOL _capRightSide;
    BOOL _mouseDown;
    BOOL _isDragging;
    BOOL _ignoreCurrentDrag;
    BOOL _isEphemeral;
    BOOL _isProposal;
    BOOL _hasHoveringDrop;
    BOOL _isLocallyModified;
    BOOL _dragImageIsExternal;
    BOOL _isDrawingSelected;
    BOOL _isDrawingExternalDragRep;
    BOOL _shouldRebuildStrings;
    int _mouseDownLocality;
    int _mouseHoverLocality;
    id <CalUIOccurrenceContainer> _container;
    id <CalUIOccurrenceDelegate> _delegate;
    NSDate *_UIStartDate;
    NSDate *_UIEndDate;
    NSColor *_color;
    CalDrawOccurrenceColor *_calDrawOccurrenceColor;
    CalUIViewController *_viewController;
    EKEvent *_myEvent;
    NSString *_eventLocalUID;
    NSString *_eventOccurrenceID;
    EKEvent *_lastDisplayedStateOfEvent;
    NSString *_lastEffectiveAppearanceName;
    NSNumber *_uiOccurrenceID;
    NSDate *_cachedStartDateIncludingTravelTime;
    struct CGPoint _mouseDownPoint;
    struct CGRect _stagedFrame;
}

+ (id)interestedDragTypes;
@property BOOL shouldRebuildStrings; // @synthesize shouldRebuildStrings=_shouldRebuildStrings;
@property BOOL isDrawingExternalDragRep; // @synthesize isDrawingExternalDragRep=_isDrawingExternalDragRep;
@property(nonatomic) BOOL isDrawingSelected; // @synthesize isDrawingSelected=_isDrawingSelected;
@property BOOL dragImageIsExternal; // @synthesize dragImageIsExternal=_dragImageIsExternal;
@property(retain) NSDate *cachedStartDateIncludingTravelTime; // @synthesize cachedStartDateIncludingTravelTime=_cachedStartDateIncludingTravelTime;
@property(retain) NSNumber *uiOccurrenceID; // @synthesize uiOccurrenceID=_uiOccurrenceID;
@property(retain, nonatomic) NSString *lastEffectiveAppearanceName; // @synthesize lastEffectiveAppearanceName=_lastEffectiveAppearanceName;
@property(retain, nonatomic) EKEvent *lastDisplayedStateOfEvent; // @synthesize lastDisplayedStateOfEvent=_lastDisplayedStateOfEvent;
@property(retain, nonatomic) NSString *eventOccurrenceID; // @synthesize eventOccurrenceID=_eventOccurrenceID;
@property(retain, nonatomic) NSString *eventLocalUID; // @synthesize eventLocalUID=_eventLocalUID;
@property(retain, nonatomic) EKEvent *myEvent; // @synthesize myEvent=_myEvent;
@property BOOL isLocallyModified; // @synthesize isLocallyModified=_isLocallyModified;
@property BOOL hasHoveringDrop; // @synthesize hasHoveringDrop=_hasHoveringDrop;
@property BOOL isProposal; // @synthesize isProposal=_isProposal;
@property BOOL isEphemeral; // @synthesize isEphemeral=_isEphemeral;
@property BOOL ignoreCurrentDrag; // @synthesize ignoreCurrentDrag=_ignoreCurrentDrag;
@property int mouseHoverLocality; // @synthesize mouseHoverLocality=_mouseHoverLocality;
@property int mouseDownLocality; // @synthesize mouseDownLocality=_mouseDownLocality;
@property struct CGPoint mouseDownPoint; // @synthesize mouseDownPoint=_mouseDownPoint;
@property BOOL isDragging; // @synthesize isDragging=_isDragging;
@property BOOL mouseDown; // @synthesize mouseDown=_mouseDown;
@property __weak CalUIViewController *viewController; // @synthesize viewController=_viewController;
@property BOOL capRightSide; // @synthesize capRightSide=_capRightSide;
@property BOOL capLeftSide; // @synthesize capLeftSide=_capLeftSide;
@property(nonatomic) struct CGRect stagedFrame; // @synthesize stagedFrame=_stagedFrame;
@property(retain) CalDrawOccurrenceColor *calDrawOccurrenceColor; // @synthesize calDrawOccurrenceColor=_calDrawOccurrenceColor;
@property(retain) NSColor *color; // @synthesize color=_color;
@property BOOL UIAllDay; // @synthesize UIAllDay=_UIAllDay;
@property(retain) NSDate *UIEndDate; // @synthesize UIEndDate=_UIEndDate;
@property(retain) NSDate *UIStartDate; // @synthesize UIStartDate=_UIStartDate;
@property(nonatomic) __weak id <CalUIOccurrenceDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <CalUIOccurrenceContainer> container; // @synthesize container=_container;
- (void).cxx_destruct;
- (long long)compareOccurenceForTabOrdering:(id)arg1;
- (BOOL)isSelected;
- (long long)myParticipantStatus;
- (BOOL)isStatusDeclined;
- (BOOL)isStatusMaybe;
- (BOOL)needsReply;
- (BOOL)isBirthday;
- (BOOL)isAllDay;
- (BOOL)isCancelled;
- (void)closeMagWindow;
- (id)view;
- (id)textRepresentation;
- (BOOL)canEditInline;
- (void)invalidateAccessibilityRepresentations;
- (void)filePromiseProvider:(id)arg1 writePromiseToURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)filePromiseProvider:(id)arg1 fileNameForType:(id)arg2;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (BOOL)supportsAttachments;
- (void)makePermanent;
- (void)makeEphemeral;
- (BOOL)includeEventCalendars;
- (void)keyDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)resetDragState;
- (void)updateTrackingAreas;
- (id)newDesiredTrackingAreas;
- (BOOL)isDraggable;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (id)menuForEvent:(id)arg1;
- (void)selectWithMouseEvent:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldAttemptToRecognizeWithEvent:(id)arg2;
- (void)immediateActionRecognizerDidCancelAnimation:(id)arg1;
- (void)immediateActionRecognizerWillBeginAnimation:(id)arg1;
- (void)immediateActionRecognizerWillPrepare:(id)arg1;
- (void)willOpenMenu:(id)arg1 withEvent:(id)arg2;
- (void)emailEvent;
- (void)messageAllInvitees;
- (void)emailAllInvitees;
- (void)reportJunk;
- (void)maybe;
- (void)accept;
- (void)decline;
- (void)invalidateInspectorTrackingViewIfNeededForNewEvent:(id)arg1;
- (struct CGRect)inspectorTargetRectInScreenCoordinates;
- (void)showStandaloneInspector;
- (void)showInspector;
- (void)showInspectorAndEditTitle;
- (void)draggingSession:(id)arg1 movedToPoint:(struct CGPoint)arg2;
- (struct CGPoint)offsetForDragImage:(id)arg1;
- (id)imageForExternalDragOperation;
- (id)imageForInternalDragOperation;
@property(readonly, copy) NSString *description;
- (long long)compareIncludingSelection:(id)arg1 selectedEventOccIDs:(id)arg2;
- (long long)compare:(id)arg1;
- (BOOL)isLastCreatedEvent;
- (BOOL)isDrawingDimmed;
- (BOOL)_hasEphemeralCounterpart;
- (BOOL)isBeingMagnified;
- (BOOL)isMagnifiedOccurrence;
- (id)magnificationWindow;
- (void)scrollSelfToVisibleWithAnimation:(BOOL)arg1;
- (id)endDateWithoutTimeComponents;
- (id)startDateWithoutTimeComponents;
- (long long)daysSpanned;
- (unsigned long long)calendarOrder;
- (id)eventOccID;
- (id)sharedUID;
- (id)localUID;
- (id)stringForEventTime:(id)arg1 inEventTimeZone:(BOOL)arg2;
- (id)stringForEventEndTimeInEventTimeZone:(BOOL)arg1;
- (id)stringForEventStartTimeInEventTimeZone:(BOOL)arg1;
- (double)duration;
- (double)travelDuration;
- (id)startDateIncludingTravelTime;
- (id)nonUIEndDate;
- (id)nonUIStartDate;
- (id)_alternateEndDate;
- (id)_alternateStartDate;
- (id)_proposedEndDate;
- (id)_proposedStartDate;
@property(readonly, nonatomic) NSDate *endDate;
@property(readonly, nonatomic) NSDate *startDate;
- (void)refreshAppearance;
- (void)updateLayer;
- (id)tileOptionsWithDashes:(BOOL)arg1;
- (id)tileOptions;
- (BOOL)isMultiDayTimedEvent;
- (BOOL)isEventEditable;
- (BOOL)resetColorsIfNecessary;
- (void)resetCachedOccurrenceColor;
- (id)eventKeysToCompareForDisplay;
- (id)event;
- (BOOL)updateWithEvent:(id)arg1;
- (void)rebuildString;
- (void)discardEditing;
- (id)commitEditing;
- (void)_setUIDragStartEndDatesOnEvent;
- (BOOL)shouldDragCompletionProposeNewTimeForStartDate:(id)arg1;
- (BOOL)shouldDragCompletionProposeNewTime;
- (BOOL)_supportsProposeNewTime;
- (void)setFrameFromStagedFrame;
- (void)dealloc;
- (id)initWithEvent:(id)arg1 container:(id)arg2 delegate:(id)arg3 viewController:(id)arg4;
- (id)occurrenceID;
- (id)accessibilityLabel;
- (id)localizedDateOnlyForStart:(id)arg1 end:(id)arg2;
- (id)localizedTimeForStart:(id)arg1 end:(id)arg2;
- (id)localizedDateAndTimeForStart:(id)arg1 end:(id)arg2;
- (id)accessibilityLocalizedDescriptionForAttendeesStatus:(int)arg1;
- (BOOL)accessibilityPerformPress;
- (BOOL)accessibilityPerformShowMenu;
- (id)accessibilityRoleDescription;
- (id)accessibilityRole;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHelp;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

