//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSViewController.h>

#import "CalUICalendarListCellViewDataSource-Protocol.h"
#import "CalUICalendarListCellViewDelegate-Protocol.h"
#import "CalUICalendarListViewDelegate-Protocol.h"
#import "CalUICalendarListViewModelObserver-Protocol.h"
#import "CalUICalendarListViewPersistenceProtocol-Protocol.h"
#import "CalUIColorPickerDelegate-Protocol.h"

@class CALMainController, CalCustomAlertController, CalNewNodeInspectorController, CalUICalendarInfoViewController, CalUICalendarListDataSource, CalUICalendarListView, CalUICalendarListViewDataSource, CalUICalendarListViewModel, EKCalendarPreferences, NSString;
@protocol CalUICalendarListViewNode;

@interface CalUICalendarListViewController : NSViewController <CalUICalendarListCellViewDelegate, CalUICalendarListCellViewDataSource, CalUICalendarListViewDelegate, CalUIColorPickerDelegate, CalUICalendarListViewModelObserver, CalUICalendarListViewPersistenceProtocol>
{
    BOOL _isEditing;
    BOOL _isReloading;
    BOOL _refreshNeededAfterEndEditing;
    CALMainController *_mainController;
    CalUICalendarListDataSource *_dataSource;
    CalUICalendarInfoViewController *_popoverController;
    long long _contextMenuRow;
    id <CalUICalendarListViewNode> _currentlyInspectedNode;
    CalNewNodeInspectorController *_nodeInspectorController;
    EKCalendarPreferences *_calendarPreferences;
    CalCustomAlertController *_customAlertController;
    CalUICalendarListViewModel *_listViewModel;
    CalUICalendarListViewDataSource *_listViewDataSource;
}

+ (id)localizedDelegateTitle;
@property(retain) CalUICalendarListViewDataSource *listViewDataSource; // @synthesize listViewDataSource=_listViewDataSource;
@property(retain) CalUICalendarListViewModel *listViewModel; // @synthesize listViewModel=_listViewModel;
@property(retain) CalCustomAlertController *customAlertController; // @synthesize customAlertController=_customAlertController;
@property(readonly) EKCalendarPreferences *calendarPreferences; // @synthesize calendarPreferences=_calendarPreferences;
@property(retain) CalNewNodeInspectorController *nodeInspectorController; // @synthesize nodeInspectorController=_nodeInspectorController;
@property(retain) id <CalUICalendarListViewNode> currentlyInspectedNode; // @synthesize currentlyInspectedNode=_currentlyInspectedNode;
@property long long contextMenuRow; // @synthesize contextMenuRow=_contextMenuRow;
@property(retain) CalUICalendarInfoViewController *popoverController; // @synthesize popoverController=_popoverController;
@property BOOL refreshNeededAfterEndEditing; // @synthesize refreshNeededAfterEndEditing=_refreshNeededAfterEndEditing;
@property BOOL isReloading; // @synthesize isReloading=_isReloading;
@property BOOL isEditing; // @synthesize isEditing=_isEditing;
@property(retain) CalUICalendarListDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property __weak CALMainController *mainController; // @synthesize mainController=_mainController;
- (void).cxx_destruct;
- (id)_ekObjectForNode:(id)arg1;
@property(readonly) BOOL isRefreshable;
- (void)customColorMenuSelected:(id)arg1;
- (void)changeColor:(id)arg1;
- (void)toggle:(id)arg1;
- (void)paste:(id)arg1;
- (void)_actuallyDeleteCalendar:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)allowsLocalCalendars;
- (void)getInfo:(id)arg1;
- (void)getInfoForNode:(id)arg1;
- (id)menuForNode:(id)arg1;
- (void)_addIfValidToSection:(id)arg1 item:(id)arg2;
- (id)backgroundMenu;
- (id)shareCalendarString;
- (void)showSharingPopover:(id)arg1;
- (void)showSharingSettings:(id)arg1;
- (id)nextGroupTitle;
- (id)nextTitleWithPrefix:(id)arg1 existingItems:(id)arg2;
- (BOOL)isTitleInUse:(id)arg1 items:(id)arg2;
- (void)symbolicColorPicked:(id)arg1;
- (id)contextMenuForRow:(long long)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (long long)stateForCalendarWithUID:(id)arg1;
- (void)calendarListCellView:(id)arg1 didChangeName:(id)arg2;
- (void)calendarListCellView:(id)arg1 didSelectCalendarColor:(id)arg2;
- (void)calendarListCellView:(id)arg1 didChangeCheckboxState:(long long)arg2 withModifierFlags:(unsigned long long)arg3;
- (id)currentlyInspectedSharingNode;
- (void)showSharingSettingsFromCalendarListCellView:(id)arg1;
- (void)displayErrorFromCalendarListCellView:(id)arg1;
- (BOOL)isExpandedNode:(id)arg1;
- (void)calendarListCellViewDidEndEditing:(id)arg1;
- (void)calendarListCellViewDidBeginEditing:(id)arg1;
- (void)outlineViewItemWillCollapse:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)isItemGroupRow:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isGroupItem:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (void)_postSelectionChangedNotification;
- (void)_postCheckboxChangedNotification;
- (BOOL)migrateSourceDisplayOrder;
- (BOOL)migrateExpandedToplevelNodeState;
- (BOOL)isKeyDefined:(id)arg1;
- (BOOL)migrateCheckedCalendarState;
- (id)checkedCalendarUIDs;
- (void)addNewGroup;
- (void)addNewCalendarToSourceWithIdentifier:(id)arg1;
- (void)validateSourceWithIdentifier:(id)arg1 creationBlock:(CDUnknownBlockType)arg2;
- (void)newLocalGroup:(id)arg1;
- (void)newLocalCalendar:(id)arg1;
- (void)newCalendarInSelectedGroup:(id)arg1;
- (void)editNode:(id)arg1;
- (void)toggleNode:(id)arg1 toChecked:(BOOL)arg2;
- (void)selectNode:(id)arg1 checked:(long long)arg2 shouldChangeChecked:(BOOL)arg3;
- (void)selectFirstNonGroupNode;
- (void)selectNode:(id)arg1;
- (id)selectedNode;
- (id)nodeForUid:(id)arg1;
- (void)selectCalendar:(id)arg1 shouldEnable:(BOOL)arg2;
- (id)allCalendarUIDs;
- (id)writeableSourceNodes;
- (id)writeableSourceUIDs;
- (id)sourceNodes;
- (void)remungeData;
- (void)refresh;
- (void)listViewModelChanged:(id)arg1;
- (void)_rowDoubleClicked:(id)arg1;
- (id)selectedCalendar;
- (void)setup;
@property(readonly) CalUICalendarListView *listView;
- (void)loadView;
- (void)dealloc;
- (id)initWithMainController:(id)arg1;
- (void)queueRefresh;
- (BOOL)shouldShowNaturalLanguageSuggestedEventCalendar;
- (BOOL)shouldShowSuggestedEventsCalendar;
- (void)mergeCalendar:(id)arg1 withDestinationCalendar:(id)arg2 shouldPrompt:(BOOL)arg3;
- (void)persistCellState:(long long)arg1 withIdentifier:(id)arg2 delegateIdentifier:(id)arg3;
- (void)persistSourceSortOrderForCalendarItems:(id)arg1;
- (long long)sortOrderForSourceWithIdentifier:(id)arg1;
- (void)persistCalendarSortOrderForCalendarItems:(id)arg1;
- (BOOL)checkedStateForCalendarWithUID:(id)arg1 delegateID:(id)arg2;
- (id)eventStore;
- (BOOL)isExpandedListItemWithIdentifier:(id)arg1 delegateID:(id)arg2;
- (void)updateCalendarWithIdentifier:(id)arg1 enabledState:(BOOL)arg2;
- (id)selectedCalendarIdentifier;
- (void)persistSelectedCalendarIdentifier:(id)arg1;
- (void)saveChangesToCalendar:(id)arg1;
- (void)saveChangesToSource:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

