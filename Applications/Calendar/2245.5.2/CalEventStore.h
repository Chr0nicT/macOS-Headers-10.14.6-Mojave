//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class EKEventStore;

@interface CalEventStore : NSObject
{
    BOOL _avoidingRecursion;
    EKEventStore *_eventStore;
    long long _propogateManagedObjectChangesAndSavesToEK;
}

+ (void)endPropogatingLegacyChangesToEKForAllStores;
+ (void)beginPropogatingLegacyChangesToEKForAllStores;
+ (void)registerForCalendarNotificationChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3;
+ (void)registerForErrorChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3;
+ (void)registerForSourceChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3;
+ (void)registerForCalendarChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3;
+ (void)registerForLiveEditChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3;
+ (void)registerForBatchedEventChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3;
+ (void)registerForEventChanges:(id)arg1 selector:(SEL)arg2 inEventStore:(id)arg3;
+ (void)registerForCalendarChanges:(id)arg1 selector:(SEL)arg2;
+ (void)registerForBatchedEventChanges:(id)arg1 selector:(SEL)arg2;
+ (void)registerForEventChanges:(id)arg1 selector:(SEL)arg2;
+ (void)deleteSources:(id)arg1;
+ (void)saveChangesToSources:(id)arg1 isPartial:(BOOL)arg2;
+ (void)saveNewSources:(id)arg1 commit:(BOOL)arg2;
+ (void)deleteCalendars:(id)arg1;
+ (void)saveNewCalendars:(id)arg1 commit:(BOOL)arg2;
+ (void)saveNewCalendars:(id)arg1;
+ (void)saveNewCalendar:(id)arg1 commit:(BOOL)arg2;
+ (void)saveNewCalendar:(id)arg1;
+ (void)saveChangesToCalendars:(id)arg1 isPartial:(BOOL)arg2;
+ (void)saveChangesToCalendar:(id)arg1 isPartial:(BOOL)arg2;
+ (void)deleteEvents:(id)arg1 onlyThese:(BOOL)arg2;
+ (void)deleteEvents:(id)arg1;
+ (void)saveChangesToEvents:(id)arg1 isPartial:(BOOL)arg2 impliedCommitDecision:(BOOL)arg3;
+ (void)saveChangesToEvent:(id)arg1 isPartial:(BOOL)arg2;
+ (void)savePartialChangesToEvent:(id)arg1 span:(long long)arg2;
+ (void)savePartialChangesToEvent:(id)arg1;
+ (void)saveCompleteChangesToEvent:(id)arg1 span:(long long)arg2;
+ (void)saveCompleteChangesToEvent:(id)arg1;
+ (void)saveChangesToEvents:(id)arg1;
+ (void)saveChangesToEventWithImpliedCommitDecision:(id)arg1;
+ (void)saveChangesToEvent:(id)arg1;
+ (void)saveNewEvents:(id)arg1 commit:(BOOL)arg2;
+ (void)saveNewEvents:(id)arg1;
+ (void)saveNewEvent:(id)arg1 commit:(BOOL)arg2;
+ (void)saveNewEvent:(id)arg1;
+ (void)saveDraftOfEvent:(id)arg1;
+ (id)fetchCalendarWithIdentifier:(id)arg1;
+ (id)fetchEventsWithExternalIdentifier:(id)arg1;
+ (id)fetchEventsWithIdentifiers:(id)arg1;
+ (id)fetchEventWithIdentifier:(id)arg1;
+ (long long)_exclusionOptionsForAllDayType:(long long)arg1;
+ (id)decisionDelegate;
+ (void)_addDefaultDelegatesToEditingContext:(id)arg1;
+ (id)_editingContextForObjects:(id)arg1;
+ (id)_eventStoreForObjects:(id)arg1;
+ (id)sharedMainEventStore;
+ (void)initialize;
@property BOOL avoidingRecursion; // @synthesize avoidingRecursion=_avoidingRecursion;
@property long long propogateManagedObjectChangesAndSavesToEK; // @synthesize propogateManagedObjectChangesAndSavesToEK=_propogateManagedObjectChangesAndSavesToEK;
@property(retain) EKEventStore *eventStore; // @synthesize eventStore=_eventStore;
- (void).cxx_destruct;
- (void)forceUpdateEventKitForManagedObjectIDs:(id)arg1 inContext:(id)arg2;
- (void)refreshStoreForManagedObjectContextNotification:(id)arg1;
- (void)managedObjectContextChangedOrSaved:(id)arg1;
- (void)endPropogatingLegacyChangesToEK;
- (void)beginPropogatingLegacyChangesToEK;
- (void)listenForLegacyChanges;
- (void)cleanup;
- (void)registerForCalendarNotificationChanges:(id)arg1 selector:(SEL)arg2;
- (void)registerForErrorChanges:(id)arg1 selector:(SEL)arg2;
- (void)registerForSuggestedEventChanges:(id)arg1 selector:(SEL)arg2;
- (void)registerForSourceChanges:(id)arg1 selector:(SEL)arg2;
- (void)registerForCalendarChanges:(id)arg1 selector:(SEL)arg2;
- (void)registerForLiveEditChanges:(id)arg1 selector:(SEL)arg2;
- (void)registerForBatchedEventChanges:(id)arg1 selector:(SEL)arg2;
- (void)registerForEventChanges:(id)arg1 selector:(SEL)arg2;
- (id)loadDraftOfEventWithOccurrenceID:(id)arg1;
- (id)fetchEventsWithExternalIdentifier:(id)arg1;
- (id)fetchEventsWithIdentifiers:(id)arg1;
- (id)fetchEventWithIdentifier:(id)arg1;
- (void)_checkStaticDateCache:(long long)arg1;
- (void)fetchEventsInDateRange:(id)arg1 inCalendarIDs:(id)arg2 allDayType:(long long)arg3 prefetchHint:(long long)arg4 withCompletionBlock:(CDUnknownBlockType)arg5;
- (void)fetchEventCountsInDateRange:(id)arg1 inCalendarIDs:(id)arg2 allDayType:(long long)arg3 prefetchHint:(long long)arg4 withCompletionBlock:(CDUnknownBlockType)arg5;
- (void)fetchEventsInDateRange:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)fetchEventsFromStartDate:(id)arg1 toEndDate:(id)arg2 inCalendars:(id)arg3;
- (id)fetchEventsInDateRange:(id)arg1 inCalendars:(id)arg2;
- (id)fetchEventsInDateRange:(id)arg1;
- (id)fetchEventsOnDate:(id)arg1 inCalendars:(id)arg2;
- (id)fetchEventsOnDate:(id)arg1;
- (id)defaultCalendar;
- (id)fetchCalendarWithIdentifier:(id)arg1;
- (id)fetchCalendars;
- (id)fetchSourceWithIdentifier:(id)arg1;
- (id)fetchSources;
- (id)newLocalGroup;
- (id)newCalendar;
- (id)newEvent;
- (void)dealloc;
- (id)initWithSourceIdentifier:(id)arg1;

@end

