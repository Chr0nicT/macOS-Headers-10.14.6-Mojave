//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <SceneKit/SCNView.h>

#import "PVContentView-Protocol.h"

@class NSColor, NSCursor, NSString, NSTrackingArea, PVC3DCameraElement, PVC3DContainer, PVC3DOverlay, PVSelectionRect, SCNLayer;

@interface PVC3DView : SCNView <PVContentView>
{
    PVSelectionRect *_selectionRect;
    PVC3DOverlay *_overlay;
    SCNLayer *_c3dLayer;
    long long _toolMode;
    NSTrackingArea *_overlayTrackingArea;
    NSTrackingArea *_wholeTrackingArea;
    PVC3DContainer *_mediaContainer;
    PVC3DCameraElement *_cameraElement;
    BOOL _shouldAnimateNextCameraChange;
    NSCursor *_cursor;
}

@property(retain, nonatomic) PVC3DContainer *mediaContainer; // @synthesize mediaContainer=_mediaContainer;
@property(retain, setter=setC3DLayer:) SCNLayer *c3dLayer; // @synthesize c3dLayer=_c3dLayer;
- (void).cxx_destruct;
- (id)layerFromCurrentViewStateInRect:(struct CGRect)arg1;
- (id)layerFromCurrentViewState;
- (void)copy:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)resetCursorRects;
- (void)setCursorForContentView:(id)arg1;
- (void)updateCursorForContentView:(id)arg1;
- (id)marqueeCursorForMouseLocation:(struct CGPoint)arg1;
- (void)filtersChanged:(id)arg1;
- (void)_downSelectTool:(id)arg1;
- (struct CGPoint)_convertPoint:(struct CGPoint)arg1 toView:(id)arg2;
- (void)_ensureSelectionRectCreation;
- (void)_ensureSelectionResizement;
- (void)moveSelectionHorizontal:(double)arg1 vertical:(double)arg2;
- (void)trackSelectionDrag:(id)arg1;
- (void)trackSelectionResize:(id)arg1 usingHandle:(long long)arg2;
- (void)swipeWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)setPlaying:(BOOL)arg1;
- (void)setSceneTime:(double)arg1;
- (void)selectAll:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_resetFreeViewCamera;
- (void)_resetFreeViewCameraAndAnimate:(BOOL)arg1;
@property(readonly) BOOL containsAnimation;
- (void)_ensureLayer;
- (void)setScene:(id)arg1;
- (void)setCameraElement:(id)arg1;
- (void)resetCurrentCameraPosition;
- (void)rotateOf:(double)arg1;
- (struct CGRect)contentRect;
@property(retain) NSColor *backgroundColor; // @dynamic backgroundColor;
- (double)zoomFactorForUIZoomFactor:(double)arg1 withContentResolution:(double)arg2;
- (double)uiZoomFactorForZoomFactor:(double)arg1 withContentResolution:(double)arg2;
- (double)zoomFactorForUIZoomFactor:(double)arg1;
- (double)uiZoomFactorForZoomFactor:(double)arg1;
- (double)clampedZoomFactor:(double)arg1;
- (double)maxZoomFactor;
- (double)minZoomFactor;
- (double)zoomToFitZoomFactorWithContentSize:(struct CGSize)arg1;
@property(readonly) double zoomToFitZoomFactor;
@property(readonly) struct CGPoint zoomCenter;
@property double zoomFactor;
- (void)setZoomFactor:(double)arg1 animate:(BOOL)arg2 stickyFit:(BOOL)arg3;
- (void)setZoomFactor:(double)arg1 withCenter:(struct CGPoint)arg2 animate:(BOOL)arg3 stickyFit:(BOOL)arg4;
@property(readonly) BOOL canZoomToFit;
@property(readonly) BOOL canZoomOut;
@property(readonly) BOOL canZoomIn;
@property BOOL showsCheckerboardBackground;
@property BOOL autoResizes;
- (void)zoomToSelection;
@property(readonly) BOOL canZoomToSelection;
- (BOOL)shouldAnimateToAndFromContactSheet;
@property(readonly) BOOL hasCroppableSelection;
@property BOOL inEyeDropperMode;
- (BOOL)supportsEyeDropperMode;
@property long long toolMode;
- (BOOL)supportsToolMode:(long long)arg1;
@property(readonly) long long defaultToolMode;
- (void)renewGState;
- (void)updateTrackingAreas;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)acceptFirstResponder;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (id)undoManager;
- (void)dealloc;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

