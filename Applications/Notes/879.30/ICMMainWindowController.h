//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "ICMWindowController.h"

#import "ICMNoteEditingWindowController-Protocol.h"
#import "NSUserInterfaceValidations-Protocol.h"
#import "NSWindowDelegate-Protocol.h"
#import "NSWindowRestoration-Protocol.h"

@class ICMFolderListController, ICMFolderListTreeController, ICMImageGalleryWindowController, ICMMainSplitViewController, ICMMainWindowTouchBarController, ICMNoteEditorController, ICMNoteListController, ICMPasswordChangeSheetViewController, ICMSearchField, ICMStartupContainerViewController, ICSelectorDelayer, NSArray, NSButton, NSImage, NSMenu, NSMenuItem, NSString, NSTimer, NSToolbar, NSToolbarItem, NSUndoManager, NSUserActivity, PadViewController;

@interface ICMMainWindowController : ICMWindowController <NSUserInterfaceValidations, NSWindowDelegate, NSWindowRestoration, ICMNoteEditingWindowController>
{
    NSString *_ipAddress;
    BOOL _isShowingStartupView;
    BOOL _shouldShowFolderNameInNotesList;
    BOOL _markedForTerminationFromStartupWindow;
    BOOL _isAddingNewNote;
    BOOL _isManuallySelectingNote;
    BOOL _startupEmptyNoteCheckComplete;
    BOOL _isCurrentKeyWindowDisplayingSingleNoteWindow;
    BOOL _isCurrentKeyWindowDisplayingImageGallery;
    BOOL _isUpdatingSelectedFolderForAccount;
    BOOL _isKeyWindow;
    ICMMainSplitViewController *_splitViewController;
    NSArray *_currentSingleNoteWindows;
    NSButton *_styleButton;
    ICMSearchField *_searchField;
    ICMMainWindowTouchBarController *_touchBarController;
    ICMStartupContainerViewController *_startupContainerViewController;
    CDUnknownBlockType _startupScreenDismissHandler;
    NSMenu *_lockNotesToolbarTitleMenu;
    NSButton *_lockNotesToolbarButton;
    NSMenuItem *_lockNotesToolbarImageMenuItem;
    NSButton *_shareViaICloudToolbarButton;
    NSButton *_checklistToolbarButton;
    NSButton *_tableToolbarButton;
    NSButton *_mediaToolbarButton;
    id _currentSelectionForUserActivity;
    NSTimer *_userActivityTimeoutTimer;
    NSUserActivity *_activityToResume;
    NSToolbar *_toolbar;
    NSToolbarItem *_searchToolbarItem;
    ICSelectorDelayer *_saveArchivedUIStateDelayer;
    ICMPasswordChangeSheetViewController *_passwordChangeSheet;
    NSArray *_displayedUniqueFolderNames;
}

+ (id)keyPathsForValuesAffectingDisplayedAccounts;
+ (id)windowIdentifier;
+ (id)keyPathsForValuesAffectingFolderListOpen;
+ (id)keyPathsForValuesAffectingPadViewController;
+ (id)keyPathsForValuesAffectingFolderListTreeController;
+ (id)keyPathsForValuesAffectingNoteEditorController;
+ (id)keyPathsForValuesAffectingNoteListController;
+ (id)keyPathsForValuesAffectingFolderListController;
+ (id)keyPathsForValuesAffectingIsShowingSearchResults;
+ (id)keyPathsForValuesAffectingIsShowingAttachmentBrowser;
+ (id)keyPathsForValuesAffectingIsShowingHTMLNoteEditor;
+ (id)keyPathsForValuesAffectingHasLegacyFolderSelection;
+ (id)keyPathsForValuesAffectingCanToggleAttachmentBrowser;
+ (id)keyPathsForValuesAffectingCanSearch;
+ (id)keyPathsForValuesAffectingAddPhotoButtonEnabled;
+ (id)keyPathsForValuesAffectingTableButtonEnabled;
+ (id)keyPathsForValuesAffectingCanToggleTodo;
+ (id)keyPathsForValuesAffectingCanToggleNotesCustomContainerTextFormat;
+ (id)keyPathsForValuesAffectingCanStyleText;
+ (id)keyPathsForValuesAffectingICloudSharingToolbarTooltip;
+ (id)keyPathsForValuesAffectingICloudSharingToolbarImage;
+ (id)keyPathsForValuesAffectingCanShareViaICloud;
+ (id)keyPathsForValuesAffectingCanShareNoteOrAttachmentFromToolbar;
+ (id)keyPathsForValuesAffectingCanShareNoteOrAttachment;
+ (id)keyPathsForValuesAffectingCanPasswordProtectSelectedNote;
+ (id)keyPathsForValuesAffectingIsNoteListAttachmentSelected;
+ (id)keyPathsForValuesAffectingIsSingleNoteSelected;
+ (id)keyPathsForValuesAffectingCanAddFolder;
+ (id)keyPathsForValuesAffectingCanDeleteSelectedItems;
+ (id)keyPathsForValuesAffectingCanAddNewNote;
+ (id)keyPathsForValuesAffectingEnableToolbarItems;
+ (id)keyPathsForValuesAffectingIsCurrentNoteEmpty;
+ (id)keyPathsForValuesAffectingSidebarToolbarItemToolTip;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)sharedWindowController;
@property(nonatomic) BOOL isKeyWindow; // @synthesize isKeyWindow=_isKeyWindow;
@property(retain, nonatomic) NSArray *displayedUniqueFolderNames; // @synthesize displayedUniqueFolderNames=_displayedUniqueFolderNames;
@property(nonatomic) BOOL isUpdatingSelectedFolderForAccount; // @synthesize isUpdatingSelectedFolderForAccount=_isUpdatingSelectedFolderForAccount;
@property(retain, nonatomic) ICMPasswordChangeSheetViewController *passwordChangeSheet; // @synthesize passwordChangeSheet=_passwordChangeSheet;
@property(retain, nonatomic) ICSelectorDelayer *saveArchivedUIStateDelayer; // @synthesize saveArchivedUIStateDelayer=_saveArchivedUIStateDelayer;
@property(retain, nonatomic) NSToolbarItem *searchToolbarItem; // @synthesize searchToolbarItem=_searchToolbarItem;
@property(nonatomic) __weak NSToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property(retain, nonatomic) NSUserActivity *activityToResume; // @synthesize activityToResume=_activityToResume;
@property(retain, nonatomic) NSTimer *userActivityTimeoutTimer; // @synthesize userActivityTimeoutTimer=_userActivityTimeoutTimer;
@property(retain, nonatomic) id currentSelectionForUserActivity; // @synthesize currentSelectionForUserActivity=_currentSelectionForUserActivity;
@property(nonatomic) BOOL isCurrentKeyWindowDisplayingImageGallery; // @synthesize isCurrentKeyWindowDisplayingImageGallery=_isCurrentKeyWindowDisplayingImageGallery;
@property(nonatomic) BOOL isCurrentKeyWindowDisplayingSingleNoteWindow; // @synthesize isCurrentKeyWindowDisplayingSingleNoteWindow=_isCurrentKeyWindowDisplayingSingleNoteWindow;
@property(nonatomic) __weak NSButton *mediaToolbarButton; // @synthesize mediaToolbarButton=_mediaToolbarButton;
@property(nonatomic) __weak NSButton *tableToolbarButton; // @synthesize tableToolbarButton=_tableToolbarButton;
@property(nonatomic) __weak NSButton *checklistToolbarButton; // @synthesize checklistToolbarButton=_checklistToolbarButton;
@property(nonatomic) __weak NSButton *shareViaICloudToolbarButton; // @synthesize shareViaICloudToolbarButton=_shareViaICloudToolbarButton;
@property(nonatomic) __weak NSMenuItem *lockNotesToolbarImageMenuItem; // @synthesize lockNotesToolbarImageMenuItem=_lockNotesToolbarImageMenuItem;
@property(nonatomic) __weak NSButton *lockNotesToolbarButton; // @synthesize lockNotesToolbarButton=_lockNotesToolbarButton;
@property(retain, nonatomic) NSMenu *lockNotesToolbarTitleMenu; // @synthesize lockNotesToolbarTitleMenu=_lockNotesToolbarTitleMenu;
@property(nonatomic) BOOL startupEmptyNoteCheckComplete; // @synthesize startupEmptyNoteCheckComplete=_startupEmptyNoteCheckComplete;
@property(copy, nonatomic) CDUnknownBlockType startupScreenDismissHandler; // @synthesize startupScreenDismissHandler=_startupScreenDismissHandler;
@property(retain, nonatomic) ICMStartupContainerViewController *startupContainerViewController; // @synthesize startupContainerViewController=_startupContainerViewController;
@property(retain, nonatomic) ICMMainWindowTouchBarController *touchBarController; // @synthesize touchBarController=_touchBarController;
@property(retain, nonatomic) ICMSearchField *searchField; // @synthesize searchField=_searchField;
@property(nonatomic) __weak NSButton *styleButton; // @synthesize styleButton=_styleButton;
@property(readonly, copy, nonatomic) NSArray *currentSingleNoteWindows; // @synthesize currentSingleNoteWindows=_currentSingleNoteWindows;
@property(nonatomic) BOOL isManuallySelectingNote; // @synthesize isManuallySelectingNote=_isManuallySelectingNote;
@property(nonatomic) BOOL isAddingNewNote; // @synthesize isAddingNewNote=_isAddingNewNote;
@property(retain, nonatomic) ICMMainSplitViewController *splitViewController; // @synthesize splitViewController=_splitViewController;
@property(nonatomic) BOOL markedForTerminationFromStartupWindow; // @synthesize markedForTerminationFromStartupWindow=_markedForTerminationFromStartupWindow;
@property(nonatomic) BOOL shouldShowFolderNameInNotesList; // @synthesize shouldShowFolderNameInNotesList=_shouldShowFolderNameInNotesList;
@property(nonatomic) BOOL isShowingStartupView; // @synthesize isShowingStartupView=_isShowingStartupView;
- (void).cxx_destruct;
- (void)setupAccessibility;
- (void)updateShareViaICloudToolbarButtonAccessibility;
- (void)updateLockToolbarButtonAccessibilityValue;
- (void)updateChecklistToolbarButtonAccessibilityValue;
- (id)toolbarItemViewerForButton:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(readonly, nonatomic) NSArray *displayedAccounts;
@property(readonly, copy, nonatomic) NSString *currentNoteContainerIdentifier;
@property(readonly, copy, nonatomic) NSString *currentFolderIdentifier;
@property(readonly, copy, nonatomic) NSString *currentNoteIdentifier;
- (void)saveArchivedUIState;
- (void)invalidateArchivedUIState;
- (void)selectHTMLAccountInWindow:(id)arg1;
- (void)selectHTMLFolderInWindow:(id)arg1;
- (void)selectHTMLNoteInWindowWithNote:(id)arg1 folderPersistentIdentifier:(id)arg2 attachment:(id)arg3 animated:(BOOL)arg4;
- (void)showCurrentLegacyNoteInWindowWithNotePersistentIdentifier:(id)arg1 folderPersistentIdentifier:(id)arg2;
- (void)selectHTMLNoteInWindow:(id)arg1 scrollToAttachment:(id)arg2;
- (void)selectHTMLNoteInWindow:(id)arg1;
- (void)legacyObjectsChanged:(id)arg1;
- (void)selectHTMLNoteForActivity:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)userStyleSheetURL;
- (void)setFolderListOpen:(BOOL)arg1 animated:(BOOL)arg2;
@property(readonly, nonatomic) BOOL folderListOpen;
@property(readonly, nonatomic) NSUndoManager *undoManager;
@property(readonly, nonatomic) PadViewController *padViewController;
@property(readonly, nonatomic) ICMFolderListTreeController *folderListTreeController;
- (id)noteEditorController;
@property(readonly, nonatomic) ICMNoteListController *noteListController;
@property(readonly, nonatomic) ICMFolderListController *folderListController;
- (BOOL)isShowingSearchResults;
@property(readonly, nonatomic) BOOL isWindowFullScreen;
@property(readonly, nonatomic) BOOL isShowingSheet;
@property(readonly, nonatomic) BOOL isShowingAttachmentBrowser;
@property(readonly, nonatomic) BOOL isShowingHTMLNoteEditor;
@property(readonly, nonatomic) BOOL hasLegacyFolderSelection;
- (BOOL)canToggleAttachmentBrowser;
- (BOOL)canPerformTextFinderAction;
- (BOOL)canSearch;
- (BOOL)addPhotoButtonEnabled;
@property(readonly, nonatomic) BOOL canAddTable;
- (BOOL)tableButtonEnabled;
@property(readonly, nonatomic) BOOL canToggleTodo;
- (BOOL)canToggleNotesCustomContainerTextFormat;
@property(readonly, nonatomic) BOOL canStyleText;
@property(readonly, nonatomic) NSString *iCloudSharingToolbarTooltip;
@property(readonly, nonatomic) NSImage *iCloudSharingToolbarImage;
- (void)shareNoteViaICloud:(id)arg1;
- (BOOL)canPinSelectedNote;
@property(readonly, nonatomic) BOOL canShareViaICloud;
- (BOOL)canShareNoteOrAttachmentFromToolbar;
@property(readonly, nonatomic) BOOL canShareNoteOrAttachment;
- (void)closePanelsForPasswordAuthenticationChange;
- (void)passwordAuthenticationDidChange:(id)arg1;
@property(readonly, nonatomic) BOOL canPasswordProtectSelectedNote;
@property(readonly, nonatomic) BOOL isNoteListAttachmentSelected;
@property(readonly, nonatomic) BOOL isSingleNoteSelected;
- (BOOL)canDeleteSelectedItems;
@property(readonly, nonatomic) BOOL canAddFolder;
@property(readonly, nonatomic) BOOL canAddNewNote;
- (BOOL)enableToolbarItems;
@property(readonly, nonatomic) BOOL isCurrentNoteEmpty;
- (void)newFolder:(id)arg1;
- (void)stopUserActivitySearch;
- (void)userActivityTimeout:(id)arg1;
- (void)cleanupUserActivityTimerAndObservers;
- (BOOL)activityToResumeIsLegacyActivity;
- (void)objectsChanged:(id)arg1;
- (void)selectAccountInWindow:(id)arg1;
- (void)selectFolderInWindow:(id)arg1;
- (void)selectNoteInWindow:(id)arg1 folderIdentifier:(id)arg2 animated:(BOOL)arg3;
- (void)showCurrentNoteInWindow:(id)arg1 folderIdentifier:(id)arg2 animated:(BOOL)arg3;
- (void)selectNoteInWindow:(id)arg1;
- (BOOL)selectSearchIndexableInWindow:(id)arg1 adjustScrollForAttachent:(BOOL)arg2;
- (void)selectSharedNoteInWindow:(id)arg1 isDownloading:(BOOL)arg2;
- (void)selectNoteForActivity:(id)arg1;
- (void)restoreUserActivityState:(id)arg1;
- (id)noteCurrentlySelected;
- (id)windowWillReturnUndoManager:(id)arg1;
- (void)mergeableUndoStringDidAddUndo:(id)arg1;
@property(readonly, nonatomic) ICMImageGalleryWindowController *imageGalleryWindowControllerIfKey;
@property(readonly, nonatomic) ICMNoteEditorController *noteEditorControllerForSingleNoteWindowIfKey;
- (void)updateKeyWindowStatus;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (id)sidebarToolbarItemToolTip;
- (void)updateSelectedFolderWithDelayForAccountIfNecessary:(BOOL)arg1;
- (id)displayedFolderNames;
- (void)updateShouldShowFolderNameInNotesList;
- (void)updateSelectedFolder;
- (void)noteRecoveredFromRecentlyDeleted:(id)arg1;
- (void)noteDidAddOrRemovePassword:(id)arg1;
- (void)noteWillAddOrRemovePassword:(id)arg1;
- (void)folderSelectionDidChange:(id)arg1;
- (void)noteSelectionDidChange:(id)arg1;
- (void)pinOrUnpinCurrentNote:(id)arg1;
- (void)lockAllNotes:(id)arg1;
- (void)addOrRemovePasswordToCurrentNote:(id)arg1;
- (BOOL)hasOnlyOneAccountWithNoCustomFolder;
- (void)toggleFloatOnTop:(id)arg1;
- (BOOL)canFloatSelectedNotes;
- (id)zoomController;
- (void)zoomResetTextView:(id)arg1;
- (void)zoomOutTextView:(id)arg1;
- (void)zoomInTextView:(id)arg1;
- (BOOL)canZoomResetTextView;
- (BOOL)canZoomOutTextView;
- (BOOL)canZoomInTextView;
- (id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2;
- (void)importFromDevice:(id)arg1;
- (void)insertPhotoFrom:(id)arg1;
- (void)reverseTableColumnDirection:(id)arg1;
- (void)convertToText:(id)arg1;
- (void)tableButtonPressed:(id)arg1;
- (void)toggleTodoStyle:(id)arg1;
- (void)setTextStyle:(id)arg1;
- (void)showStyleMenu:(id)arg1;
- (void)showSharingServicePicker:(id)arg1;
- (void)didCancelSearch;
- (void)searchScopeChanged:(id)arg1;
- (void)searchNote:(id)arg1;
- (void)searchInNoteList:(id)arg1;
- (void)makeFolderListFirstResponder:(id)arg1;
- (void)makeNoteListFirstResponder:(id)arg1;
- (void)beginEditingCurrentNoteIfPossible:(id)arg1;
- (void)showAttachmentBrowser:(id)arg1;
- (void)reloadSearchResultsIfNecessary:(id)arg1;
- (void)hideAttachmentBrowserIfNecessary:(id)arg1;
- (void)exportNoteAsPDF:(id)arg1;
- (void)printNote:(id)arg1;
- (void)deleteSelectedItems:(id)arg1;
- (void)undoablyDeleteEmptyNoteWithUUID:(id)arg1;
- (void)undoablyAddEmptyNoteWithUUID:(id)arg1;
- (void)performTextFinderAction:(id)arg1;
- (void)undoablyAddEmptyHTMLNote;
- (void)performAddNote;
- (void)addNote:(id)arg1;
- (void)addDrawing:(id)arg1;
- (void)toggleFolderListHidden:(id)arg1;
- (void)didCompleteActionFromStartupView;
- (void)dismissStartupScreen;
- (void)showStartupScreenWithDismissHandler:(CDUnknownBlockType)arg1;
- (void)showStartupScreenIfNecessary;
- (void)selectNoteInWindow:(id)arg1 scrollToRange:(struct _NSRange)arg2;
- (void)selectNoteInWindow:(id)arg1 scrollToAttachment:(id)arg2;
- (void)scrollRangeInNoteToVisible:(struct _NSRange)arg1;
- (void)toolbarDidReorderItem:(id)arg1;
- (void)toolbarDidRemoveItem:(id)arg1;
- (void)setMenuFormRepresentationForItem:(id)arg1;
- (void)updateMenuForSearchField;
- (void)toolbarWillAddItem:(id)arg1;
- (void)updateToolbarSpacing;
- (BOOL)shouldShowAccountNameInNotesList;
- (id)computeDisplayedUniqueFolderNames;
- (long long)searchScopeForMenuItem:(id)arg1;
@property(nonatomic) long long searchScope;
- (void)resetSearchField;
- (id)touchBar;
- (void)refreshNoteListSplitView;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (void)updateAppearanceIfNecessary;
- (void)windowDidLoad;
- (void)awakeFromNib;
- (void)setupContentViewController;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

