//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSViewController.h>

#import "ICMNoteListArrayControllerDelegate-Protocol.h"
#import "ICMNoteListTableViewCellMenuItemProvider-Protocol.h"

@class ICMFolderTreeNode, ICMHTMLNoteListArrayController, ICMModernNoteListArrayController, ICMNoteListArrayController, ICMNoteListTableView, ICMSearchNoteListArrayController, ICNote, NSArray, NSColor, NSString;
@protocol ICSearchIndexable;

@interface ICMNoteListController : NSViewController <ICMNoteListArrayControllerDelegate, ICMNoteListTableViewCellMenuItemProvider>
{
    BOOL _hasHTMLNoteSelection;
    BOOL _canDelete;
    BOOL _isShowingSearchResults;
    ICMFolderTreeNode *_selectedTreeNode;
    ICMNoteListArrayController *_currentArrayController;
    ICMNoteListTableView *_tableView;
    ICMModernNoteListArrayController *_modernNotesListArrayController;
    ICMHTMLNoteListArrayController *_leagcyNotesListArrayController;
    ICMSearchNoteListArrayController *_searchNotesListArrayController;
    id <ICSearchIndexable> _observedNote;
    NSArray *_selectedObjectsBeforeSearch;
    ICNote *_noteChangingPasswordProtectedStatus;
    NSColor *_belovedPaperTexture;
}

+ (id)keyPathsForValuesAffectingSelectedObjects;
+ (id)keyPathsForValuesAffectingCanDelete;
+ (id)keyPathsForValuesAffectingIsShowingSearchResults;
@property(retain, nonatomic) NSColor *belovedPaperTexture; // @synthesize belovedPaperTexture=_belovedPaperTexture;
@property(retain, nonatomic) ICNote *noteChangingPasswordProtectedStatus; // @synthesize noteChangingPasswordProtectedStatus=_noteChangingPasswordProtectedStatus;
@property(retain, nonatomic) NSArray *selectedObjectsBeforeSearch; // @synthesize selectedObjectsBeforeSearch=_selectedObjectsBeforeSearch;
@property(retain, nonatomic) id <ICSearchIndexable> observedNote; // @synthesize observedNote=_observedNote;
@property(retain, nonatomic) ICMSearchNoteListArrayController *searchNotesListArrayController; // @synthesize searchNotesListArrayController=_searchNotesListArrayController;
@property(retain, nonatomic) ICMHTMLNoteListArrayController *leagcyNotesListArrayController; // @synthesize leagcyNotesListArrayController=_leagcyNotesListArrayController;
@property(retain, nonatomic) ICMModernNoteListArrayController *modernNotesListArrayController; // @synthesize modernNotesListArrayController=_modernNotesListArrayController;
@property(nonatomic) BOOL isShowingSearchResults; // @synthesize isShowingSearchResults=_isShowingSearchResults;
@property(nonatomic) BOOL canDelete; // @synthesize canDelete=_canDelete;
@property(nonatomic) BOOL hasHTMLNoteSelection; // @synthesize hasHTMLNoteSelection=_hasHTMLNoteSelection;
@property(nonatomic) __weak ICMNoteListTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) ICMNoteListArrayController *currentArrayController; // @synthesize currentArrayController=_currentArrayController;
@property(retain, nonatomic) ICMFolderTreeNode *selectedTreeNode; // @synthesize selectedTreeNode=_selectedTreeNode;
- (void).cxx_destruct;
- (void)updateUndoManagerAfterMovingCountOfNotes:(unsigned long long)arg1;
- (void)showAlertForMovingLockedNotesToUnsupportedAccounts;
- (void)showAlertForMovingSharedNotesAcrossAccounts;
- (void)showAlertForUnsupportedAttachmentsFolderDrop;
- (void)showMoveModernNotesToHTMLDestinationWithAttachmentsIfNecessaryForNotes:(id)arg1 destinationFolder:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)authenticateLockedNotesIfNecessaryForMovingNotes:(id)arg1 destinationAccount:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)moveLegacyNotes:(id)arg1 toLegacyFolder:(id)arg2;
- (void)moveLegacyNotes:(id)arg1 toModernFolder:(id)arg2;
- (void)moveModernNotes:(id)arg1 toLegacyFolder:(id)arg2;
- (void)moveModernNotes:(id)arg1 toModernFolder:(id)arg2;
- (void)moveSelectedNotesToFolder:(id)arg1;
- (void)recursivelyAddMenuItemsForSubfoldersToArray:(id)arg1 forFolders:(id)arg2 depth:(unsigned long long)arg3;
- (id)menuItemForMovingNotes;
- (void)noteEditorWillEndEditing:(id)arg1;
- (void)noteEditorWillBeginEditing:(id)arg1;
- (void)notesContextRefreshNotification:(id)arg1;
- (void)attachmentWasUndeleted:(id)arg1;
- (void)attachmentPreviewImagesDidUpdate:(id)arg1;
- (void)updateAppearanceIfNecessary;
- (void)timeFormatChanged:(id)arg1;
- (void)selectedObjectsDidChange:(id)arg1;
@property(nonatomic) long long searchScope;
- (void)cancelSearchRestoringSelection:(BOOL)arg1;
- (void)searchNoteForSearchString:(id)arg1;
- (void)reloadSearchResultsIfNecessary;
- (void)updateSearchResults;
- (void)hideProgressIndicatorForSharedNote:(id)arg1;
- (void)showSharedNote:(id)arg1 isDownloading:(BOOL)arg2;
- (void)changePasswordProtectedStatusForNote:(id)arg1;
- (void)changePasswordProtectedStatusMenuItem:(id)arg1;
- (BOOL)scrollToObject:(id)arg1 animated:(BOOL)arg2;
@property(retain, nonatomic) NSArray *selectedObjects;
@property(readonly, nonatomic) id <ICSearchIndexable> singleSelectedObject;
- (void)changePinStatusForNotes:(id)arg1;
- (void)pinNotes:(id)arg1;
- (BOOL)containsAtleastOneUnpinnedNoteInSelection;
- (void)duplicate:(id)arg1;
- (void)copyIdentifier:(id)arg1;
- (void)divergeCryptoKey:(id)arg1;
- (id)representedObjectAtRow:(long long)arg1 identifier:(id *)arg2;
- (id)tableView:(id)arg1 customMenuItemsForRow:(long long)arg2;
- (void)noteSortTypeDidChange:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)scrollToObservedNoteOrClearIfNecessary;
- (void)updateTableRowViewAtRow:(long long)arg1;
- (void)reloadVisibleCells;
- (void)keyDown:(id)arg1;
- (void)doubleClick;
- (void)selectAll:(id)arg1;
- (void)delete:(id)arg1;
@property(readonly, nonatomic) BOOL isShowingRecentlyDeletedFolder;
- (void)fetch:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)touchBar;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

