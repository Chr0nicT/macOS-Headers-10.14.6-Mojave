//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "FCNetworkReachabilityObserving-Protocol.h"
#import "FCNewsAppConfigurationObserving-Protocol.h"
#import "FCUserInfoObserving-Protocol.h"
#import "FREventCenterObserving-Protocol.h"
#import "NSSNewsAnalyticsPBEventStreamObserver-Protocol.h"
#import "NSSNewsAnalyticsSessionManager-Protocol.h"
#import "NYSessionAccessing-Protocol.h"

@class FCAsyncSerialQueue, FCCloudContext, FCKeyValueStore, FRAppSessionCounter, FRNotificationManager, FRProactiveEventTracker, FRVersionHelpers, NSData, NSDate, NSHashTable, NSMutableArray, NSString, NTPBSession;
@protocol FRAppSessionDataProviding, FRProgressivePersonalizationAnalyticsDataProviding, OS_dispatch_group, OS_dispatch_queue;

@interface FRAnalyticsController : NSObject <FREventCenterObserving, FCUserInfoObserving, FCNetworkReachabilityObserving, FCNewsAppConfigurationObserving, NSSNewsAnalyticsSessionManager, NSSNewsAnalyticsPBEventStreamObserver, NYSessionAccessing>
{
    BOOL _isNewUser;
    BOOL _isUserIDSynced;
    BOOL _syncedOtherUserIDDuringSession;
    BOOL _userJoinedOrLeftExperiment;
    NTPBSession *_currentSession;
    NSDate *_lastAppOpenDate;
    NSString *_feldsparID;
    NSObject<OS_dispatch_queue> *_accessorQueue;
    FCAsyncSerialQueue *_submissionQueue;
    NSMutableArray *_eventDictionaries;
    NSMutableArray *_sessionDictionaries;
    NSString *_currentSessionID;
    NSString *_watchSessionID;
    FCKeyValueStore *_localStore;
    id <FRProgressivePersonalizationAnalyticsDataProviding> _progressivePersonalizationAnalyticsDataProvider;
    FCCloudContext *_cloudContext;
    FRNotificationManager *_notificationManager;
    NSDate *_currentSessionStartDate;
    FRAppSessionCounter *_appSessionCounter;
    FRProactiveEventTracker *_proactiveEventTracker;
    NSObject<OS_dispatch_group> *_userIDDeterminationGroup;
    NSData *_appProcessLifetimeID;
    FRVersionHelpers *_versionHelpers;
    id <FRAppSessionDataProviding> _appSessionDataProvider;
    NSHashTable *_observers;
}

@property(readonly, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) id <FRAppSessionDataProviding> appSessionDataProvider; // @synthesize appSessionDataProvider=_appSessionDataProvider;
@property(retain, nonatomic) FRVersionHelpers *versionHelpers; // @synthesize versionHelpers=_versionHelpers;
@property(nonatomic) BOOL userJoinedOrLeftExperiment; // @synthesize userJoinedOrLeftExperiment=_userJoinedOrLeftExperiment;
@property(copy, nonatomic) NSData *appProcessLifetimeID; // @synthesize appProcessLifetimeID=_appProcessLifetimeID;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *userIDDeterminationGroup; // @synthesize userIDDeterminationGroup=_userIDDeterminationGroup;
@property(retain, nonatomic) FRProactiveEventTracker *proactiveEventTracker; // @synthesize proactiveEventTracker=_proactiveEventTracker;
@property(retain, nonatomic) FRAppSessionCounter *appSessionCounter; // @synthesize appSessionCounter=_appSessionCounter;
@property(copy, nonatomic) NSDate *currentSessionStartDate; // @synthesize currentSessionStartDate=_currentSessionStartDate;
@property(nonatomic) BOOL syncedOtherUserIDDuringSession; // @synthesize syncedOtherUserIDDuringSession=_syncedOtherUserIDDuringSession;
@property(nonatomic) BOOL isUserIDSynced; // @synthesize isUserIDSynced=_isUserIDSynced;
@property(nonatomic) BOOL isNewUser; // @synthesize isNewUser=_isNewUser;
@property(retain, nonatomic) FRNotificationManager *notificationManager; // @synthesize notificationManager=_notificationManager;
@property(retain, nonatomic) FCCloudContext *cloudContext; // @synthesize cloudContext=_cloudContext;
@property(retain, nonatomic) id <FRProgressivePersonalizationAnalyticsDataProviding> progressivePersonalizationAnalyticsDataProvider; // @synthesize progressivePersonalizationAnalyticsDataProvider=_progressivePersonalizationAnalyticsDataProvider;
@property(retain, nonatomic) FCKeyValueStore *localStore; // @synthesize localStore=_localStore;
@property(retain, nonatomic) NSString *watchSessionID; // @synthesize watchSessionID=_watchSessionID;
@property(retain, nonatomic) NSString *currentSessionID; // @synthesize currentSessionID=_currentSessionID;
@property(retain, nonatomic) NSMutableArray *sessionDictionaries; // @synthesize sessionDictionaries=_sessionDictionaries;
@property(retain, nonatomic) NSMutableArray *eventDictionaries; // @synthesize eventDictionaries=_eventDictionaries;
@property(retain, nonatomic) FCAsyncSerialQueue *submissionQueue; // @synthesize submissionQueue=_submissionQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *accessorQueue; // @synthesize accessorQueue=_accessorQueue;
@property(retain, nonatomic) NSString *feldsparID; // @synthesize feldsparID=_feldsparID;
@property(copy, nonatomic) NSDate *lastAppOpenDate; // @synthesize lastAppOpenDate=_lastAppOpenDate;
@property(readonly, nonatomic) NTPBSession *currentSession; // @synthesize currentSession=_currentSession;
- (void).cxx_destruct;
- (int)bundleSubscriptionStatusFromSubscriptionState:(unsigned long long)arg1;
- (void)addObserver:(id)arg1;
- (void)observeAppAnalyticsEvent:(id)arg1;
- (void)observeEvents:(id)arg1;
- (void)observeEvent:(id)arg1;
- (void)configurationManagerSignificantAppConfigChange:(id)arg1;
- (void)submitAndSaveWithMainThreadProperties:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_repairEventDictionariesForSubmissionWithMainThreadProperties:(id)arg1;
- (void)submitEventsWithMainThreadProperties:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)_updateValueWithDictionary:(id)arg1 key:(id)arg2 newValue:(id)arg3 forceUpdate:(BOOL)arg4;
- (void)_updateIsNewUserIfNeeded;
- (void)_updateSessionsWithUserStartDateIfNeeded;
- (void)_pruneEventsAndSessionsIfNeeded;
- (void)loadEventsAndSessionsFromLocalStore;
- (void)_processAnalyticsEvent:(id)arg1 mainThreadProperties:(id)arg2;
- (void)eventCenter:(id)arg1 asyncEventDidFire:(id)arg2;
- (void)eventCenter:(id)arg1 eventDidFire:(id)arg2;
- (id)telemetryWithEventsFromDate:(id)arg1 toDate:(id)arg2;
- (id)descriptionForEventDictionary:(id)arg1;
- (void)removeIgnoredKeysFromEventDictionary:(id)arg1;
- (BOOL)eventShouldTriggerSubmission:(id)arg1;
- (BOOL)isEventDictionaryPermitted:(id)arg1;
- (BOOL)isAdRelatedEventType:(id)arg1;
- (id)eventDictionaryFromEvent:(id)arg1 mainThreadProperties:(id)arg2;
- (id)eventDictionaryFromEvent:(id)arg1 sessionID:(id)arg2 mainThreadProperties:(id)arg3;
- (id)genericMainThreadAnalyticsProperties;
- (id)genericAnalyticsPropertiesForKeys:(id)arg1 sessionID:(id)arg2 withEvent:(id)arg3 mainThreadAnalyticsProperties:(id)arg4;
- (void)_addWatchAppSession:(id)arg1 notificationSettings:(id)arg2 mainThreadProperties:(id)arg3;
- (void)addWatchAppSession:(id)arg1;
- (void)_resetUserID;
- (void)_startSessionWithReferral:(id)arg1 notificationSettings:(id)arg2 mainThreadProperties:(id)arg3;
- (id)_sessionDictionaryWithIdentifier:(id)arg1 sessionIDKey:(id)arg2 notificationSettings:(id)arg3 referral:(id)arg4;
- (void)_applicationWillTerminate;
- (void)endSessionForReason:(long long)arg1 byStartingNewSession:(BOOL)arg2 resetUserID:(BOOL)arg3;
- (void)startSessionIfNeededWithReferral:(id)arg1;
@property(readonly) BOOL sessionInProgress;
- (void)loadOrRegenerateUserIDWithPreferredUserID:(id)arg1;
- (void)loadOrRegenerateUserStartDate;
- (void)syncUserStartDate;
- (void)syncFeldsparIdentityWithPreferredUserID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)notifyWhenUserIDHasBeenDeterminedWithBlock:(CDUnknownBlockType)arg1;
- (void)removeAsNotificationObserver;
- (void)registerAsNotificationObserver;
- (void)userInfoDidChangeFeldsparID:(id)arg1 fromCloud:(BOOL)arg2;
- (void)dealloc;
- (id)initWithCloudContext:(id)arg1 progressivePersonalizationAnalyticsDataProvider:(id)arg2 notificationManager:(id)arg3 versionHelpers:(id)arg4 appSessionDataProvider:(id)arg5 preferredUserID:(id)arg6;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

