//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import "AVController.h"

#import "FTWindowDelegate-Protocol.h"
#import "NSAnimationDelegate-Protocol.h"
#import "NSUserNotificationCenterDelegate-Protocol.h"
#import "SODarkWakeHelperDelegate-Protocol.h"
#import "VideoCallViewControllerDelegate-Protocol.h"

@class CALayer, FTWindow, NSArray, NSDate, NSImage, NSLayoutConstraint, NSMutableArray, NSString, NSTimer, NSView, NSViewAnimation, SODarkWakeHelper, SideViewController, TUCall, TUDialRequest, VideoCallViewController, VideoLayer;

@interface VideoCallController : AVController <FTWindowDelegate, NSAnimationDelegate, NSUserNotificationCenterDelegate, SODarkWakeHelperDelegate, VideoCallViewControllerDelegate>
{
    BOOL _endChatOnClose;
    BOOL _windowIsNewInvite;
    BOOL _windowIsAnimatingFromNewInvite;
    BOOL _windowIsAnimatingFromEndChat;
    BOOL _windowIsClosing;
    BOOL _frameHasChangedSinceZoom;
    BOOL _hasShownWindow;
    BOOL _shouldShowContactList;
    BOOL _contactListIsFullyVisible;
    BOOL _contactListIsAnimatingToVisible;
    BOOL _contactListIsAnimatingToHidden;
    BOOL _showingAlert;
    BOOL _animatingCallEnd;
    BOOL _receivedFirstMediaPropertiesChanged;
    BOOL _receivedFirstRemoteFrame;
    BOOL _isFullscreenLockMode;
    BOOL _isAnimatingToFullScreen;
    BOOL _isAnimatingFromFullScreen;
    BOOL _isBlockingPauseStateUpdateDuringFullscreenTransition;
    BOOL _windowShouldUpdateFullscreenModeAfterMoved;
    BOOL _conferenceEndedDuringFullScreen;
    BOOL _conferenceEndedWhileEnteringFullScreen;
    BOOL _conferenceEndedWhileExitingFullScreen;
    BOOL _conferenceEndedDuringRotation;
    BOOL _conferenceEndedDuringFadeRotation;
    BOOL _conferenceEndedOnOtherSpace;
    BOOL _autoHidingViewsAreVisible;
    BOOL _isAnimatingRotationViaWindow;
    BOOL _isAnimatingRemoteRotation;
    BOOL _isAnimatingAspectChange;
    BOOL _isAnimatingAspectChangeViaRotation;
    BOOL _mouseTrackingEnabled;
    BOOL _isAnimatingToPIP;
    BOOL _localIsBeingDragged;
    BOOL _pipForcedPortrait;
    BOOL _PIPShouldIgnoreTitleBarChanges;
    BOOL _gestureRotate;
    BOOL _gestureMagnify;
    BOOL _hadPreviousCamera;
    BOOL _wantsVideo;
    int _thermalToken;
    TUCall *_queuedCall;
    NSDate *_callStartDate;
    NSDate *_callEndDate;
    FTWindow *_window;
    SideViewController *_sideViewController;
    NSLayoutConstraint *_sideViewTrailingConstraint;
    NSArray *_sidePanelAnimationViews;
    VideoLayer *_localUnderContactsVideoLayer;
    NSView *_localUnderView;
    SODarkWakeHelper *_darkWakeHelper;
    CDUnknownBlockType _fullScreenCompletionBlock;
    NSString *_failureTitle;
    NSString *_failureString;
    NSViewAnimation *_contactListAnimation;
    unsigned long long _contactListAnimationPriorTopBannerARMask;
    unsigned long long _contactListAnimationPriorBottomBannerARMask;
    NSTimer *_endButtonFlashTimer;
    VideoCallViewController *_videoCallViewController;
    NSMutableArray *_autoHidingViews;
    NSTimer *_autoHidingViewsTimer;
    TUDialRequest *_failureDialRequest;
    CALayer *_backgroundFadeLayer;
    long long _fadeRotationViaWindowCount;
    CALayer *_cinematicShadowLayer;
    NSImage *_cinematicShadowImageActive;
    NSImage *_cinematicShadowImageInactive;
    long long _previousCameraType;
    NSMutableArray *_layersToRemoveAfterChatEnds;
    NSMutableArray *_uniqueIDsOfRequestedImageData;
    NSView *_controlsView;
    NSImage *_enterFullscreenIcon;
    NSImage *_exitFullscreenIcon;
    NSImage *_pauseIcon;
    NSImage *_muteIcon;
    double _gestureRotateSum;
    double _gestureMagnifySum;
    NSString *_previousCameraID;
    struct CGSize _windowAspectRatio;
    struct CGSize _localUnderAspectRatio;
    struct CGPoint _rotationPositioningOffset;
    struct CGPoint _localDragMouseOffset;
    struct CGRect _nativeFrame;
    struct CGRect _customFrame;
    struct CGRect _priorToFullscreenWindowFrame;
    struct CGRect _priorToFullscreenScreenFrame;
    struct CGRect _rotationDestinationFrameForRootLayer;
    struct CGRect _priorToRotationWindowFrame;
}

+ (BOOL)_hasValidCamera;
+ (BOOL)_isCameraValid:(id)arg1;
@property(nonatomic) BOOL wantsVideo; // @synthesize wantsVideo=_wantsVideo;
@property(nonatomic) int thermalToken; // @synthesize thermalToken=_thermalToken;
@property(nonatomic) BOOL hadPreviousCamera; // @synthesize hadPreviousCamera=_hadPreviousCamera;
@property(retain, nonatomic) NSString *previousCameraID; // @synthesize previousCameraID=_previousCameraID;
@property(nonatomic) double gestureMagnifySum; // @synthesize gestureMagnifySum=_gestureMagnifySum;
@property(nonatomic) BOOL gestureMagnify; // @synthesize gestureMagnify=_gestureMagnify;
@property(nonatomic) double gestureRotateSum; // @synthesize gestureRotateSum=_gestureRotateSum;
@property(nonatomic) BOOL gestureRotate; // @synthesize gestureRotate=_gestureRotate;
@property(retain, nonatomic) NSImage *muteIcon; // @synthesize muteIcon=_muteIcon;
@property(retain, nonatomic) NSImage *pauseIcon; // @synthesize pauseIcon=_pauseIcon;
@property(retain, nonatomic) NSImage *exitFullscreenIcon; // @synthesize exitFullscreenIcon=_exitFullscreenIcon;
@property(retain, nonatomic) NSImage *enterFullscreenIcon; // @synthesize enterFullscreenIcon=_enterFullscreenIcon;
@property(retain, nonatomic) NSView *controlsView; // @synthesize controlsView=_controlsView;
@property(retain, nonatomic) NSMutableArray *uniqueIDsOfRequestedImageData; // @synthesize uniqueIDsOfRequestedImageData=_uniqueIDsOfRequestedImageData;
@property(retain, nonatomic) NSMutableArray *layersToRemoveAfterChatEnds; // @synthesize layersToRemoveAfterChatEnds=_layersToRemoveAfterChatEnds;
@property(nonatomic) BOOL PIPShouldIgnoreTitleBarChanges; // @synthesize PIPShouldIgnoreTitleBarChanges=_PIPShouldIgnoreTitleBarChanges;
@property(nonatomic) BOOL pipForcedPortrait; // @synthesize pipForcedPortrait=_pipForcedPortrait;
@property(nonatomic) struct CGPoint localDragMouseOffset; // @synthesize localDragMouseOffset=_localDragMouseOffset;
@property(nonatomic) BOOL localIsBeingDragged; // @synthesize localIsBeingDragged=_localIsBeingDragged;
@property(nonatomic) BOOL isAnimatingToPIP; // @synthesize isAnimatingToPIP=_isAnimatingToPIP;
@property(nonatomic) BOOL mouseTrackingEnabled; // @synthesize mouseTrackingEnabled=_mouseTrackingEnabled;
@property(nonatomic) long long previousCameraType; // @synthesize previousCameraType=_previousCameraType;
@property(retain, nonatomic) NSImage *cinematicShadowImageInactive; // @synthesize cinematicShadowImageInactive=_cinematicShadowImageInactive;
@property(retain, nonatomic) NSImage *cinematicShadowImageActive; // @synthesize cinematicShadowImageActive=_cinematicShadowImageActive;
@property(retain, nonatomic) CALayer *cinematicShadowLayer; // @synthesize cinematicShadowLayer=_cinematicShadowLayer;
@property(nonatomic) long long fadeRotationViaWindowCount; // @synthesize fadeRotationViaWindowCount=_fadeRotationViaWindowCount;
@property(nonatomic) struct CGRect priorToRotationWindowFrame; // @synthesize priorToRotationWindowFrame=_priorToRotationWindowFrame;
@property(nonatomic) struct CGPoint rotationPositioningOffset; // @synthesize rotationPositioningOffset=_rotationPositioningOffset;
@property(nonatomic) struct CGRect rotationDestinationFrameForRootLayer; // @synthesize rotationDestinationFrameForRootLayer=_rotationDestinationFrameForRootLayer;
@property(nonatomic) BOOL isAnimatingAspectChangeViaRotation; // @synthesize isAnimatingAspectChangeViaRotation=_isAnimatingAspectChangeViaRotation;
@property(nonatomic) BOOL isAnimatingAspectChange; // @synthesize isAnimatingAspectChange=_isAnimatingAspectChange;
@property(nonatomic) BOOL isAnimatingRemoteRotation; // @synthesize isAnimatingRemoteRotation=_isAnimatingRemoteRotation;
@property(nonatomic) BOOL isAnimatingRotationViaWindow; // @synthesize isAnimatingRotationViaWindow=_isAnimatingRotationViaWindow;
@property(retain, nonatomic) CALayer *backgroundFadeLayer; // @synthesize backgroundFadeLayer=_backgroundFadeLayer;
@property(nonatomic) struct CGRect priorToFullscreenScreenFrame; // @synthesize priorToFullscreenScreenFrame=_priorToFullscreenScreenFrame;
@property(nonatomic) struct CGRect priorToFullscreenWindowFrame; // @synthesize priorToFullscreenWindowFrame=_priorToFullscreenWindowFrame;
@property(retain, nonatomic) TUDialRequest *failureDialRequest; // @synthesize failureDialRequest=_failureDialRequest;
@property(retain, nonatomic) NSTimer *autoHidingViewsTimer; // @synthesize autoHidingViewsTimer=_autoHidingViewsTimer;
@property(nonatomic) BOOL autoHidingViewsAreVisible; // @synthesize autoHidingViewsAreVisible=_autoHidingViewsAreVisible;
@property(retain, nonatomic) NSMutableArray *autoHidingViews; // @synthesize autoHidingViews=_autoHidingViews;
@property(retain, nonatomic) VideoCallViewController *videoCallViewController; // @synthesize videoCallViewController=_videoCallViewController;
@property(retain, nonatomic) NSTimer *endButtonFlashTimer; // @synthesize endButtonFlashTimer=_endButtonFlashTimer;
@property(nonatomic) unsigned long long contactListAnimationPriorBottomBannerARMask; // @synthesize contactListAnimationPriorBottomBannerARMask=_contactListAnimationPriorBottomBannerARMask;
@property(nonatomic) unsigned long long contactListAnimationPriorTopBannerARMask; // @synthesize contactListAnimationPriorTopBannerARMask=_contactListAnimationPriorTopBannerARMask;
@property(retain, nonatomic) NSViewAnimation *contactListAnimation; // @synthesize contactListAnimation=_contactListAnimation;
@property(retain, nonatomic) NSString *failureString; // @synthesize failureString=_failureString;
@property(retain, nonatomic) NSString *failureTitle; // @synthesize failureTitle=_failureTitle;
@property(nonatomic) BOOL conferenceEndedOnOtherSpace; // @synthesize conferenceEndedOnOtherSpace=_conferenceEndedOnOtherSpace;
@property(nonatomic) BOOL conferenceEndedDuringFadeRotation; // @synthesize conferenceEndedDuringFadeRotation=_conferenceEndedDuringFadeRotation;
@property(nonatomic) BOOL conferenceEndedDuringRotation; // @synthesize conferenceEndedDuringRotation=_conferenceEndedDuringRotation;
@property(nonatomic) BOOL conferenceEndedWhileExitingFullScreen; // @synthesize conferenceEndedWhileExitingFullScreen=_conferenceEndedWhileExitingFullScreen;
@property(nonatomic) BOOL conferenceEndedWhileEnteringFullScreen; // @synthesize conferenceEndedWhileEnteringFullScreen=_conferenceEndedWhileEnteringFullScreen;
@property(nonatomic) BOOL conferenceEndedDuringFullScreen; // @synthesize conferenceEndedDuringFullScreen=_conferenceEndedDuringFullScreen;
@property(nonatomic) BOOL windowShouldUpdateFullscreenModeAfterMoved; // @synthesize windowShouldUpdateFullscreenModeAfterMoved=_windowShouldUpdateFullscreenModeAfterMoved;
@property(nonatomic) BOOL isBlockingPauseStateUpdateDuringFullscreenTransition; // @synthesize isBlockingPauseStateUpdateDuringFullscreenTransition=_isBlockingPauseStateUpdateDuringFullscreenTransition;
@property(nonatomic) BOOL isAnimatingFromFullScreen; // @synthesize isAnimatingFromFullScreen=_isAnimatingFromFullScreen;
@property(nonatomic) BOOL isAnimatingToFullScreen; // @synthesize isAnimatingToFullScreen=_isAnimatingToFullScreen;
@property(copy, nonatomic) CDUnknownBlockType fullScreenCompletionBlock; // @synthesize fullScreenCompletionBlock=_fullScreenCompletionBlock;
@property(nonatomic) BOOL isFullscreenLockMode; // @synthesize isFullscreenLockMode=_isFullscreenLockMode;
@property(nonatomic) BOOL receivedFirstRemoteFrame; // @synthesize receivedFirstRemoteFrame=_receivedFirstRemoteFrame;
@property(nonatomic) BOOL receivedFirstMediaPropertiesChanged; // @synthesize receivedFirstMediaPropertiesChanged=_receivedFirstMediaPropertiesChanged;
@property(retain, nonatomic) SODarkWakeHelper *darkWakeHelper; // @synthesize darkWakeHelper=_darkWakeHelper;
@property(nonatomic) struct CGSize localUnderAspectRatio; // @synthesize localUnderAspectRatio=_localUnderAspectRatio;
@property(retain, nonatomic) NSView *localUnderView; // @synthesize localUnderView=_localUnderView;
@property(retain, nonatomic) VideoLayer *localUnderContactsVideoLayer; // @synthesize localUnderContactsVideoLayer=_localUnderContactsVideoLayer;
@property(retain, nonatomic) NSArray *sidePanelAnimationViews; // @synthesize sidePanelAnimationViews=_sidePanelAnimationViews;
@property(retain, nonatomic) NSLayoutConstraint *sideViewTrailingConstraint; // @synthesize sideViewTrailingConstraint=_sideViewTrailingConstraint;
@property(retain, nonatomic) SideViewController *sideViewController; // @synthesize sideViewController=_sideViewController;
@property(nonatomic) BOOL animatingCallEnd; // @synthesize animatingCallEnd=_animatingCallEnd;
@property(nonatomic) struct CGSize windowAspectRatio; // @synthesize windowAspectRatio=_windowAspectRatio;
@property(nonatomic) BOOL showingAlert; // @synthesize showingAlert=_showingAlert;
@property(nonatomic) BOOL contactListIsAnimatingToHidden; // @synthesize contactListIsAnimatingToHidden=_contactListIsAnimatingToHidden;
@property(nonatomic) BOOL contactListIsAnimatingToVisible; // @synthesize contactListIsAnimatingToVisible=_contactListIsAnimatingToVisible;
@property(nonatomic) BOOL contactListIsFullyVisible; // @synthesize contactListIsFullyVisible=_contactListIsFullyVisible;
@property(nonatomic) BOOL shouldShowContactList; // @synthesize shouldShowContactList=_shouldShowContactList;
@property(nonatomic) BOOL hasShownWindow; // @synthesize hasShownWindow=_hasShownWindow;
@property(nonatomic) BOOL frameHasChangedSinceZoom; // @synthesize frameHasChangedSinceZoom=_frameHasChangedSinceZoom;
@property(nonatomic) struct CGRect customFrame; // @synthesize customFrame=_customFrame;
@property(nonatomic) struct CGRect nativeFrame; // @synthesize nativeFrame=_nativeFrame;
@property(nonatomic) BOOL windowIsClosing; // @synthesize windowIsClosing=_windowIsClosing;
@property(nonatomic) BOOL windowIsAnimatingFromEndChat; // @synthesize windowIsAnimatingFromEndChat=_windowIsAnimatingFromEndChat;
@property(nonatomic) BOOL windowIsAnimatingFromNewInvite; // @synthesize windowIsAnimatingFromNewInvite=_windowIsAnimatingFromNewInvite;
@property(nonatomic) BOOL windowIsNewInvite; // @synthesize windowIsNewInvite=_windowIsNewInvite;
@property(retain, nonatomic) FTWindow *window; // @synthesize window=_window;
@property(retain, nonatomic) NSDate *callEndDate; // @synthesize callEndDate=_callEndDate;
@property(retain, nonatomic) NSDate *callStartDate; // @synthesize callStartDate=_callStartDate;
@property(retain, nonatomic) TUCall *queuedCall; // @synthesize queuedCall=_queuedCall;
@property(nonatomic) BOOL endChatOnClose; // @synthesize endChatOnClose=_endChatOnClose;
- (void).cxx_destruct;
- (BOOL)userNotificationCenter:(id)arg1 shouldPresentNotification:(id)arg2;
@property(readonly, nonatomic, getter=isHostingCall) BOOL hostingCall;
- (void)pauseChanged:(id)arg1;
- (void)cameraTypeChanged:(id)arg1;
- (void)updateRemoteOrientationWithOrientation:(long long)arg1 cameraType:(long long)arg2 aspect:(id)arg3 videoMirrored:(BOOL)arg4;
- (void)mediaPropertiesChanged:(id)arg1;
- (void)videoMirroredChanged:(id)arg1;
- (void)callStatusChanged:(id)arg1;
- (void)callConnected:(id)arg1;
- (void)remoteiMessageAddressChanged:(id)arg1;
- (void)remoteCameraChanged:(long long)arg1;
- (unsigned int)tuCallCameraOrientationToVideoLayerOrientation:(long long)arg1 cameraType:(long long)arg2 videoMirrored:(BOOL)arg3;
- (BOOL)remoteAspectChanged:(struct CGSize)arg1;
- (struct CGRect)_contentsRectForLayer:(id)arg1 withAspectRatio:(struct CGSize)arg2;
- (void)_selectBestMicrophoneForCamera:(id)arg1;
- (BOOL)_isAnimationInProgress;
- (void)_updateUIForNewChatStateAfterHint;
- (void)_updateUIForNewChatState;
- (void)_flashEndButton:(id)arg1;
- (void)_positionPIPAndShowEndedUI;
- (void)_morphWindowToDefaultSizeWithCompletion:(CDUnknownBlockType)arg1;
- (void)videoCallViewControllerToggleFullScreen:(id)arg1;
- (void)videoCallViewController:(id)arg1 wantsVideoDidChange:(BOOL)arg2;
- (void)videoCallViewControllerShowSidebar:(id)arg1;
- (void)videoCallViewController:(id)arg1 canceledCall:(id)arg2 dialRequest:(id)arg3;
- (void)videoCallViewController:(id)arg1 initiatedCall:(id)arg2;
- (void)clamshellOpened;
- (void)externalDisplayAttached;
- (void)lockScreenWillBeDisplayed;
- (void)screenShieldWasLowered;
- (void)screenShieldWasRaised;
- (void)mediaStalledChanged:(id)arg1;
- (void)videoQualityChanged:(id)arg1;
- (void)_firstSearchResultsComplete:(id)arg1;
- (void)_receivedFirstLocalFrame:(id)arg1;
- (void)makeCallToItem:(id)arg1;
- (struct CGSize)_adjustWidthToKeepAspectRatio:(struct CGSize)arg1;
- (struct CGSize)_adjustHeightToKeepAspectRatio:(struct CGSize)arg1;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (struct CGRect)window:(id)arg1 willSetFrame:(struct CGRect)arg2;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)_windowDidOrderOnScreen:(id)arg1;
- (void)windowWillOrderOnScreen:(id)arg1;
- (void)_makeWindowAlert:(BOOL)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)_windowEnteredFullscreen:(id)arg1;
- (void)_windowWillEnterFullscreen:(id)arg1;
- (void)_windowExitedFullscreen:(id)arg1;
- (void)_screenChangedParameters:(id)arg1;
- (void)_activeSpaceDidChange:(id)arg1;
- (void)_updatePauseState;
- (void)animationDidEnd:(id)arg1;
- (void)_outgoingCallInfoChanged:(id)arg1;
- (void)_willShowSheet:(id)arg1;
- (void)_appFinishedProcessingGURLEvent:(id)arg1;
- (void)_avControllerUpdated:(id)arg1;
- (void)togglePortraitLandscape:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)toggleMute;
- (void)toggleVideoMute;
- (void)toggleMute:(id)arg1;
- (void)vccToggleFullScreen:(id)arg1;
- (void)_setFullScreenModeEnabled:(BOOL)arg1;
- (void)_toggleFullScreenWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)toggleFullScreen;
- (void)callBack;
- (void)dialCallPromptUI;
- (void)dismissFailureOrCallPromptUI;
- (void)endChat:(id)arg1;
- (BOOL)_shouldCloseWindowOnCallEnd;
- (void)_cameraChanged:(id)arg1;
- (void)_localAttributesChanged:(id)arg1;
- (void)_endContactListAnimation;
- (void)_animateContactList:(BOOL)arg1;
- (void)_animateContactListWithStartFrame:(struct CGRect)arg1 endFrame:(struct CGRect)arg2;
- (void)_clearContactListAnimation;
- (void)_tearDownLocalUnder;
- (void)_setupLocalUnderPositionedBelow:(id)arg1;
- (void)_updateLocalUnder;
- (void)_updateContactListState;
@property(readonly, nonatomic) BOOL contactListIsAnimating;
@property(readonly, nonatomic) BOOL contactListIsVisible;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (struct CGRect)_validateWindowFrame:(struct CGRect)arg1 withScreenFrame:(struct CGRect)arg2;
- (void)setWindowAspectRatio:(struct CGSize)arg1 forOrientation:(unsigned int)arg2;
- (double)_radiansForOrientation:(unsigned int)arg1;
- (void)_clearEndButtonFlashTimer;
- (struct CGRect)_fitRect:(struct CGRect)arg1 inRect:(struct CGRect)arg2;
- (void)_performConferenceStartPIPAnimation;
- (struct CGRect)_pushFrameToNC:(struct CGRect)arg1;
- (void)_performConferenceStartPIPAnimationIfReady;
- (void)magnifyWithEvent:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)_showAutoHidingViews:(BOOL)arg1 animated:(BOOL)arg2;
- (void)_hideAutoHidingViews:(id)arg1;
- (id)_otherActiveVideoCalls;
- (struct CGRect)_fullscreenWindowFrame;
- (void)_removeHidingView:(id)arg1;
- (void)_addHidingView:(id)arg1;
- (BOOL)_hasSidePanels;
- (void)_updateWindowSizeConstraintsForOrientation:(unsigned int)arg1;
- (struct CGRect)_morphRectFrom:(struct CGRect)arg1 toRectWithAspectRatio:(struct CGSize)arg2 withMinimumSize:(struct CGSize)arg3;
- (struct CGRect)_morphRectFrom:(struct CGRect)arg1 toRectWithAspectRatio:(struct CGSize)arg2;
- (unsigned int)_windowOrientation;
- (void)_endActiveCallsNotification:(id)arg1;
- (void)prepareForAccountDeletion;
- (void)showCallPrompt:(id)arg1;
- (void)cancel:(id)arg1;
- (void)doCancel;
- (BOOL)_canPause;
- (BOOL)_canMute;
- (BOOL)_isMute;
- (void)updateUI;
- (void)exitFullscreen;
- (BOOL)isWindowFullScreen;
- (BOOL)isFullscreen;
- (BOOL)_windowIsFullscreen;
- (BOOL)hasReplyWithMessageUI;
- (BOOL)hasCallPromptUI;
- (BOOL)hasFailureUI;
- (BOOL)hasNoVideoUI;
- (void)showWindow;
- (void)showWindowAsNotification;
- (void)close;
- (void)notifyHasSetupAV;
@property(nonatomic) BOOL shouldStopPreviewOnDealloc;
- (void)_updateUI;
- (id)callDisplayName;
- (void)_updateWindowTitle;
- (void)unpauseCall;
- (void)pauseCall;
- (id)_nsCameraDisabledImage;
- (void)_removeAllIncomingCallNotifications;
- (void)removeAllRecents;
- (void)takeSnapshot;
- (void)requestMessageUI;
- (struct CGRect)_storedWindowFrame;
- (void)_restoreWindowFrame;
- (void)_saveWindowFrame;
- (void)_checkAutoAccept;
- (void)setCall:(id)arg1;
- (void)putCurrentCallOnHoldAndAddCall:(id)arg1;
- (void)_endAndCleanupChat;
- (void)closeWindow;
- (void)_showWindow;
- (void)_createWindowWithSize:(struct CGSize)arg1 minSize:(struct CGSize)arg2;
- (void)_createInviteWindow;
- (void)_createWindow;
- (void)dealloc;
- (id)init;
- (void)_sharedSetup;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

