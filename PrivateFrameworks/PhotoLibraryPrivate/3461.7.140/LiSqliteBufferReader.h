//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class LiSqliteBuffer;

@interface LiSqliteBufferReader : NSObject
{
    LiSqliteBuffer *_buffer;
    struct BufferSegment *_bufferLocality;
    unsigned long long _rowIndex;
    unsigned long long _columnIndex;
    unsigned long long _rowCount;
    unsigned long long _columnCount;
    unsigned long long _modelIdIndex;
    unsigned long long _optimisticLockIndex;
    BOOL _skipModelId;
    BOOL _nilForNullObject;
    Class _stringMapper;
}

@property(retain, nonatomic) Class stringMapper; // @synthesize stringMapper=_stringMapper;
@property(readonly, nonatomic) unsigned long long modelIdIndex; // @synthesize modelIdIndex=_modelIdIndex;
@property(readonly, nonatomic) unsigned long long columnCount; // @synthesize columnCount=_columnCount;
@property(readonly, nonatomic) unsigned long long rowCount; // @synthesize rowCount=_rowCount;
@property(readonly, nonatomic) unsigned long long columnIndex; // @synthesize columnIndex=_columnIndex;
@property(readonly, nonatomic) unsigned long long rowIndex; // @synthesize rowIndex=_rowIndex;
@property(nonatomic) BOOL skipModelId; // @synthesize skipModelId=_skipModelId;
@property(nonatomic) BOOL nilForNullObject; // @synthesize nilForNullObject=_nilForNullObject;
@property(readonly, nonatomic) LiSqliteBuffer *buffer; // @synthesize buffer=_buffer;
- (void).cxx_destruct;
- (unsigned long long)mappedColumnForColumn:(unsigned long long)arg1;
- (unsigned long long)nextColumnIndex;
- (const void *)nextBytesWithlength:(int *)arg1;
- (const char *)nextCharsWithlength:(int *)arg1;
- (double)nextDouble;
- (long long)nextInteger;
- (BOOL)nextIsNull;
- (void)skipObject;
- (id)nextObject;
- (unsigned char)nextPropertyType;
- (long long)optimisticLock;
- (long long)modelId;
- (BOOL)nextRow;
- (BOOL)hasMoreData;
- (void)reset;
- (id)description;
- (id)initWithSqliteBuffer:(id)arg1;
- (id)init;

@end

