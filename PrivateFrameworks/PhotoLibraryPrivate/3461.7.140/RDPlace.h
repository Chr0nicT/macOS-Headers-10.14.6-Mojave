//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <PhotoLibraryPrivate/RDPlaceModel.h>

@interface RDPlace : RDPlaceModel
{
}

+ (void)deletePlaces:(id)arg1 withReason:(unsigned short)arg2;
+ (id)placeOfType:(unsigned short)arg1 fromPlaces:(id)arg2;
+ (id)allPlacesWithType:(unsigned short)arg1 forDatabase:(id)arg2;
+ (id)userDefinedPlacesForSearchStringPrefix:(id)arg1 forDatabase:(id)arg2;
+ (id)userDefinedPlacesMatching:(id)arg1 forDatabase:(id)arg2;
+ (id)placeForRecordLocator:(id)arg1 forDatabase:(id)arg2;
+ (id)userDefinedPlacesForLatitude:(double)arg1 longitude:(double)arg2 forDatabase:(id)arg3;
+ (id)placeIdListForDatabase:(id)arg1 withinMinLatitude:(double)arg2 maxLatitude:(double)arg3 minLongitude:(double)arg4 maxLongitude:(double)arg5;
+ (id)placesForLatitude:(double)arg1 longitude:(double)arg2 forDatabase:(id)arg3;
+ (id)orderedPlacesByType:(id)arg1;
+ (id)orderedPlacesByType:(id)arg1 limitToGreaterThanOrEqual:(unsigned short)arg2;
+ (id)mostSpecificPlaceFromPlaces:(id)arg1;
+ (id)smallestPlaceFromPlaces:(id)arg1;
+ (BOOL)allPlaces:(id)arg1 containPoint:(struct CGPoint)arg2;
+ (id)filterPlaces:(id)arg1 byPlaceType:(unsigned short)arg2;
+ (id)filterPlaces:(id)arg1 whereContainsPoint:(struct CGPoint)arg2;
+ (double)distanceFrom:(double)arg1 lng1:(double)arg2 lat2:(double)arg3 lng2:(double)arg4;
- (BOOL)isMatchingPlace:(id)arg1;
- (id)description;
- (void)setMaxLatitude:(double)arg1;
- (void)setMinLatitude:(double)arg1;
- (void)setMaxLongitude:(double)arg1;
- (void)setMinLongitude:(double)arg1;
- (void)setMinLongitude:(double)arg1 maxLongitude:(double)arg2 minLatitude:(double)arg3 maxLatitude:(double)arg4;
- (void)setDefaultName:(id)arg1;
- (BOOL)editable;
- (struct CGRect)boundingBox;
- (double)latitude;
- (double)longitude;
- (id)alternateName;
- (id)name;
- (BOOL)placeContainsPoint:(struct CGPoint)arg1;
- (BOOL)boundingBoxContainsRect:(struct CGRect)arg1;
- (BOOL)boundariesContainsPoint:(struct CGPoint)arg1;
- (double)radiusAsDistanceInMiles;
- (double)radius;
- (double)boundingBoxArea;
- (id)placeTypeKey;
- (id)parentCity;
- (id)parentState;
- (id)parentCountry;
- (id)parentPlaceOfType:(unsigned short)arg1;
- (long long)caseInsensitiveCompareName:(id)arg1;
- (id)localizedPlaceName;
- (id)placesContainedWithinPlace;
- (id)placesContainingPlace;
- (BOOL)moreSpecificPlaceType:(unsigned short)arg1;
- (id)initInDatabase:(id)arg1;

@end

