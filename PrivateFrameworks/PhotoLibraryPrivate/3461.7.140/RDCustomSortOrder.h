//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSString, RDDatabase;

@interface RDCustomSortOrder : NSObject
{
    NSMutableArray *_customEntries;
    NSMutableDictionary *_uuidToCustomEntry;
    NSString *_uuid;
    RDDatabase *_database;
    NSString *_containerUuid;
}

+ (id)removeUuids:(id)arg1 fromDatabase:(id)arg2 withReason:(unsigned short)arg3;
+ (id)containersWithCustomOrdersContainingAnyOfUuids:(id)arg1 fromDatabase:(id)arg2;
+ (void)removeFromAllCustomOrders:(id)arg1 fromDatabase:(id)arg2 withReason:(unsigned short)arg3;
+ (id)convertVersionsToUuids:(id)arg1;
@property(retain, nonatomic) NSString *containerUuid; // @synthesize containerUuid=_containerUuid;
@property(nonatomic) __weak RDDatabase *database; // @synthesize database=_database;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (id)sortVersionUuids:(id)arg1 forAlbum:(id)arg2;
- (id)sortItems:(id)arg1 ascending:(BOOL)arg2;
- (id)sortItems:(id)arg1 ascending:(BOOL)arg2 uuidSelector:(SEL)arg3;
- (id)sortItems:(id)arg1 ascending:(BOOL)arg2 uuidSelector:(SEL)arg3 selectorArg:(id)arg4;
- (id)sortUuidsForItems:(id)arg1 ascending:(BOOL)arg2 limitToItems:(BOOL)arg3;
- (id)sortUuidsForItems:(id)arg1 ascending:(BOOL)arg2 uuidSelector:(SEL)arg3 limitToItems:(BOOL)arg4;
- (id)sortUuidsForItems:(id)arg1 ascending:(BOOL)arg2 uuidSelector:(SEL)arg3 selectorArg:(id)arg4 limitToItems:(BOOL)arg5;
- (id)sortVersions:(id)arg1 ascending:(BOOL)arg2;
- (id)sortModelIds:(id)arg1 ascending:(BOOL)arg2;
- (id)appendVersionsIfMissing:(id)arg1 isAscending:(BOOL)arg2;
- (void)insertObjectUuidIfMissing:(id)arg1 afterUuid:(id)arg2 isAscending:(BOOL)arg3;
- (id)appendObjectUuidsIfMissing:(id)arg1 isAscending:(BOOL)arg2;
- (id)removeVersions:(id)arg1 withReason:(unsigned short)arg2;
- (id)insertVersions:(id)arg1 afterVersion:(id)arg2 isAscending:(BOOL)arg3;
- (id)replaceUuid:(id)arg1 withUuid:(id)arg2;
- (id)removeUuids:(id)arg1 withReason:(unsigned short)arg2;
- (id)insertUuids:(id)arg1 afterUuid:(id)arg2 isAscending:(BOOL)arg3;
- (id)insertUuids:(id)arg1 beforeUuid:(id)arg2 isAscending:(BOOL)arg3;
- (id)removeEntriesAtIndexes:(id)arg1;
- (void)insertNewEntriesForUuids:(id)arg1 atIndexes:(id)arg2;
- (id)insertEntryForObjectUuid:(id)arg1 atIndex:(unsigned long long)arg2 insertCount:(unsigned long long)arg3;
- (id)removeEntryAtIndex:(unsigned long long)arg1;
- (id)appendEntryForObjectUuid:(id)arg1;
- (void)removeEntryFromIndex:(id)arg1;
- (void)addEntryToIndex:(id)arg1;
- (BOOL)renumberDuplicateIndexes;
- (void)renumberOrder;
- (void)deleteCustomOrderWithReason:(unsigned short)arg1;
- (BOOL)loadCustomOrder;
- (id)resetCustomOrderTo:(id)arg1 withReason:(unsigned short)arg2;
- (id)objectUuidsAtIndexes:(id)arg1;
- (unsigned long long)findIndexForVersion:(id)arg1 inSortedVersions:(id)arg2 ascending:(BOOL)arg3;
- (id)findIndexesForUuids:(id)arg1;
- (unsigned long long)indexOfObjectUuid:(id)arg1;
- (BOOL)containsObjectUuid:(id)arg1;
- (unsigned long long)indexOfEntry:(id)arg1;
- (id)customOrderedUuids;
- (BOOL)validCustomOrder;
- (BOOL)hasCustomOrder;
- (void)_setCustomEntries:(id)arg1;
- (id)customOrderArray;
- (id)setInitialCustomOrder:(id)arg1 isAscending:(BOOL)arg2;
- (id)description;
- (id)initWithContainerUuid:(id)arg1 inDatabase:(id)arg2;

@end

