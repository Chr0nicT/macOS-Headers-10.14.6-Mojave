//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <Foundation/NSOperation.h>

@class DMManager, NSBundle, NSError, NSMutableArray, NSMutableData, NSMutableDictionary, NSString, SIUSourceObject, SIUXPCHelper;
@protocol SIUClientProtocol;

@interface CreateImageOperation : NSOperation
{
    char _tempFilePath[1024];
    NSError *_errorCode;
    NSString *_outputPath;
    NSString *_failureKey;
    long long _completionStatus;
    NSMutableDictionary *_buildDict;
    NSMutableDictionary *_privilegedOpDict;
    id <SIUClientProtocol> _proxy;
    SIUXPCHelper *_xpcHelper;
    SIUSourceObject *_imagingSource;
    BOOL _canInteractWithUser;
    double _creationDuration;
    NSBundle *_operationBundle;
    NSMutableArray *_installableArray;
    NSMutableData *_plistData;
    struct __DADisk *_sourceDisk;
    struct __DASession *_daSession;
    DMManager *_dmManager;
}

@property(retain, nonatomic) NSMutableData *plistData; // @synthesize plistData=_plistData;
@property(retain, nonatomic) NSMutableArray *installableArray; // @synthesize installableArray=_installableArray;
@property(retain, nonatomic) SIUSourceObject *imagingSource; // @synthesize imagingSource=_imagingSource;
@property(nonatomic) double creationDuration; // @synthesize creationDuration=_creationDuration;
@property(nonatomic) long long completionStatus; // @synthesize completionStatus=_completionStatus;
@property(retain, nonatomic) SIUXPCHelper *xpcHelper; // @synthesize xpcHelper=_xpcHelper;
@property(retain, nonatomic) NSMutableDictionary *buildDict; // @synthesize buildDict=_buildDict;
@property(retain, nonatomic) NSString *outputPath; // @synthesize outputPath=_outputPath;
@property(retain, nonatomic) NSString *failureKey; // @synthesize failureKey=_failureKey;
@property(retain, nonatomic) NSBundle *operationBundle; // @synthesize operationBundle=_operationBundle;
- (long long)logLevel;
- (BOOL)dumpBuildTemplate;
- (BOOL)diskImageTypeIsUDIF;
- (BOOL)isValidRestoreImage:(id)arg1;
- (void)getImageData:(id)arg1;
- (BOOL)validateInstallType:(id)arg1 withSourceRecord:(id)arg2 error:(id *)arg3;
- (id)volumeOfPath:(id)arg1;
- (id)unixSafeString:(id)arg1;
- (void)logSuccessfulCompletion;
- (void)logCreationType;
- (void)insureAppropriateLanguageDefault;
- (id)doTargetNameMagic:(id)arg1;
- (id)defaultLanguageID;
- (id)addUsersFromImageData:(id)arg1 toVariables:(id)arg2;
- (void)addLanguageDefaultsForLangID:(id)arg1;
- (unsigned long long)usedSpaceOnVolume:(id)arg1 error:(id *)arg2;
- (id)resourcePath;
- (BOOL)preFlightDestination:(id)arg1 forSize:(unsigned long long)arg2 withSource:(id)arg3;
- (void)ifNeededAddDefaultNamingToDictionary:(id)arg1;
- (id)extensionForDiskImage;
- (unsigned long long)availableSpaceOnVolume:(id)arg1 error:(id *)arg2;
- (BOOL)sourceVolumeIsInstallMedia:(id)arg1;
- (id)sourceVolumePathFromRecord:(id)arg1;
- (id)sourceVolumeKindFromRecord:(id)arg1;
- (id)sourceTypeFromRecord:(id)arg1;
- (id)imageSourceAtPath:(id)arg1;
- (id)firstSourceRecordFromDict:(id)arg1;
- (void)resetPermissionsForSource;
- (void)processConfigurationKeys:(id)arg1 resetLocalKDC:(BOOL)arg2;
- (BOOL)prepareImageInstallFromData:(id)arg1 forSource:(id)arg2 paramsDict:(id)arg3;
- (BOOL)prepareForImageCreation;
- (void)postCreationCleanup;
- (void)logAString:(id)arg1;
- (id)localizedStringForKey:(id)arg1;
- (void)insurePermissionsEnabledForSource:(id)arg1;
- (unsigned long long)installablesInstalledSizeInKb;
- (unsigned long long)installablesDiskSizeInKb;
- (BOOL)finalizeImage:(id)arg1;
- (void)addShellVariablesUsingDictionary:(id)arg1;
- (void)addInstallablesFromDictionary:(id)arg1;
- (void)addAutomationInfo:(id)arg1 usingPackage:(id)arg2 additionalEntries:(id)arg3;
- (void)setStopped;
- (void)setErrorCode:(long long)arg1 withDetails:(id)arg2 function:(const char *)arg3 line:(int)arg4;
- (void)setError:(id)arg1;
- (BOOL)runPrivilegedProcess;
- (id)error;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1 forProxy:(id)arg2 allowingInteraction:(BOOL)arg3;

@end

