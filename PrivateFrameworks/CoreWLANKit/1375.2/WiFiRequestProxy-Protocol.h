//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

@class CWChannel, CWNetwork, CWTetherDevice, NSArray, NSData, NSNumber, NSSet, NSString, NSURL;

@protocol WiFiRequestProxy
- (void)sharingServiceAvailability:(void (^)(NSError *, unsigned int))arg1;
- (void)stopPasswordSharingServiceAndReply:(void (^)(NSError *))arg1;
- (void)startPasswordSharingServiceWithNetworkName:(NSString *)arg1 reply:(void (^)(NSError *))arg2;
- (void)createWiFiDiagnosticsReportAtURL:(NSURL *)arg1 reply:(void (^)(NSError *))arg2;
- (void)setWiFiDebugLoggingEnabled:(BOOL)arg1 reply:(void (^)(NSError *))arg2;
- (void)queryWiFiDebugLoggingEnabledAndReply:(void (^)(NSError *, BOOL))arg1;
- (void)submitAWDMetric:(NSData *)arg1 metricID:(NSNumber *)arg2 reply:(void (^)(NSError *))arg3;
- (void)runDiagnosticsTests:(NSArray *)arg1 reply:(void (^)(NSError *, NSArray *))arg2;
- (void)connectToTetherDevice:(CWTetherDevice *)arg1 remember:(BOOL)arg2 interfaceName:(NSString *)arg3 reply:(void (^)(NSError *))arg4;
- (void)stopBrowsingForTetherDevicesAndReply:(void (^)(NSError *))arg1;
- (void)startBrowsingForTetherDevicesAndReply:(void (^)(NSError *))arg1;
- (void)stopIBSSForInterfaceName:(NSString *)arg1 reply:(void (^)(void))arg2;
- (void)createIBSSNetworkWithSSID:(NSData *)arg1 securityType:(unsigned long long)arg2 channel:(CWChannel *)arg3 password:(NSString *)arg4 interfaceName:(NSString *)arg5 reply:(void (^)(NSError *))arg6;
- (void)disassociateForInterfaceName:(NSString *)arg1 reply:(void (^)(void))arg2;
- (void)associateToEnterpriseNetworkUsingSystemKeychain:(CWNetwork *)arg1 interfaceName:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)associateToNetworkUsingSystemKeychain:(CWNetwork *)arg1 interfaceName:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)associateToWPSNetwork:(CWNetwork *)arg1 pin:(NSString *)arg2 remember:(BOOL)arg3 interfaceName:(NSString *)arg4 reply:(void (^)(NSError *))arg5;
- (void)associateToPasspointWiFiNetwork:(CWNetwork *)arg1 domainName:(NSString *)arg2 interfaceName:(NSString *)arg3 reply:(void (^)(NSError *))arg4;
- (void)associateToEnterpriseNetwork:(CWNetwork *)arg1 identity:(NSData *)arg2 username:(NSString *)arg3 password:(NSString *)arg4 remember:(BOOL)arg5 possiblyHidden:(BOOL)arg6 interfaceName:(NSString *)arg7 reply:(void (^)(NSError *))arg8;
- (void)associateToNetwork:(CWNetwork *)arg1 password:(NSString *)arg2 remember:(BOOL)arg3 possiblyHidden:(BOOL)arg4 interfaceName:(NSString *)arg5 reply:(void (^)(NSError *))arg6;
- (void)stopMonitoringAllEventsAndReply:(void (^)(NSError *))arg1;
- (void)stopMonitoringEventWithType:(long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)startMonitoringEventWithType:(long long)arg1 reply:(void (^)(NSError *))arg2;
- (void)queryANQPElements:(unsigned long long)arg1 network:(CWNetwork *)arg2 maxAge:(double)arg3 interfaceName:(NSString *)arg4 waitForWiFi:(BOOL)arg5 waitForBluetooth:(BOOL)arg6 reply:(void (^)(NSError *, NSSet *))arg7;
- (void)performScanWithChannels:(NSSet *)arg1 ssidList:(NSSet *)arg2 legacyScanSSID:(NSString *)arg3 includeHiddenNetworks:(BOOL)arg4 mergeScanResults:(BOOL)arg5 maxAge:(double)arg6 maxMissCount:(long long)arg7 maxWakeCount:(long long)arg8 maxAutoJoinCount:(long long)arg9 interfaceName:(NSString *)arg10 waitForWiFi:(BOOL)arg11 waitForBluetooth:(BOOL)arg12 reply:(void (^)(NSError *, NSSet *))arg13;
- (void)setWiFiPowerState:(BOOL)arg1 interfaceName:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
- (void)setWiFiKeychainPassword:(NSString *)arg1 ssid:(NSData *)arg2 reply:(void (^)(NSError *))arg3;
- (void)queryWiFiKeychainPasswordWithSSID:(NSData *)arg1 reply:(void (^)(NSError *, NSString *))arg2;
@end

