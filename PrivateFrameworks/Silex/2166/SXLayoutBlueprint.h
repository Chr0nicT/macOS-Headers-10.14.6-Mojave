//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Silex/NSCopying-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSOrderedSet, SXComponentDependencyResolver, SXLayoutOptions;
@protocol SXComponentBlueprintFactory, SXUnitConverterFactory;

@interface SXLayoutBlueprint : NSObject <NSCopying>
{
    BOOL _isComplete;
    BOOL _updating;
    SXLayoutBlueprint *_parentLayoutBlueprint;
    SXLayoutOptions *_layoutOptions;
    id <SXComponentBlueprintFactory> _componentBlueprintFactory;
    id <SXUnitConverterFactory> _unitConverterFactory;
    NSMutableDictionary *_blueprint;
    NSMutableDictionary *_flattenedBlueprint;
    NSMutableArray *_orderedComponentIdentifiers;
    NSMutableSet *_invalidatedComponents;
    SXComponentDependencyResolver *_dependencySolver;
    NSOrderedSet *_snapLines;
    struct CGSize _blueprintSize;
}

@property(retain, nonatomic) NSOrderedSet *snapLines; // @synthesize snapLines=_snapLines;
@property(retain, nonatomic) SXComponentDependencyResolver *dependencySolver; // @synthesize dependencySolver=_dependencySolver;
@property(retain, nonatomic) NSMutableSet *invalidatedComponents; // @synthesize invalidatedComponents=_invalidatedComponents;
@property(nonatomic, getter=isUpdating) BOOL updating; // @synthesize updating=_updating;
@property(retain, nonatomic) NSMutableArray *orderedComponentIdentifiers; // @synthesize orderedComponentIdentifiers=_orderedComponentIdentifiers;
@property(retain, nonatomic) NSMutableDictionary *flattenedBlueprint; // @synthesize flattenedBlueprint=_flattenedBlueprint;
@property(retain, nonatomic) NSMutableDictionary *blueprint; // @synthesize blueprint=_blueprint;
@property(readonly, nonatomic) id <SXUnitConverterFactory> unitConverterFactory; // @synthesize unitConverterFactory=_unitConverterFactory;
@property(readonly, nonatomic) id <SXComponentBlueprintFactory> componentBlueprintFactory; // @synthesize componentBlueprintFactory=_componentBlueprintFactory;
@property(readonly, nonatomic) SXLayoutOptions *layoutOptions; // @synthesize layoutOptions=_layoutOptions;
@property(nonatomic) struct CGSize blueprintSize; // @synthesize blueprintSize=_blueprintSize;
@property(readonly, nonatomic) BOOL isComplete; // @synthesize isComplete=_isComplete;
@property(nonatomic) __weak SXLayoutBlueprint *parentLayoutBlueprint; // @synthesize parentLayoutBlueprint=_parentLayoutBlueprint;
- (void).cxx_destruct;
- (id)layoutDescriptionForBlueprint:(id)arg1 depth:(unsigned long long)arg2;
- (id)debugDescription;
- (id)description;
@property(readonly, nonatomic) SXLayoutBlueprint *rootLayoutBlueprint;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)snapLinesIncludingChildren:(BOOL)arg1;
- (void)storeComponentsFromBlueprint:(id)arg1 inDictionary:(id)arg2;
- (void)endUpdates;
- (void)startUpdatesForWidth:(double)arg1;
- (id)componentsInRect:(struct CGRect)arg1;
- (id)componentIdentifiers;
- (id)containerComponentIdentifierContainingComponentWithIdentifier:(id)arg1;
- (id)componentBlueprintForComponentIdentifier:(id)arg1 includeChildren:(BOOL)arg2;
- (id)componentBlueprintForComponentIdentifier:(id)arg1;
- (void)updatePosition:(struct CGPoint)arg1 forComponentWithIdentifier:(id)arg2;
- (void)updateSize:(struct CGSize)arg1 forComponentWithIdentifier:(id)arg2;
- (void)invalidateBlueprintPosition;
- (void)invalidateBlueprint;
- (void)invalidateDependentsOfComponentNode:(id)arg1 forDependencyResolver:(id)arg2;
- (void)invalidateDependentsOfInvalidatedComponents;
- (void)invalidateSizeForComponentWithIdentifier:(id)arg1 suggestedSize:(struct CGSize)arg2;
- (void)invalidateSizeForComponentWithIdentifier:(id)arg1;
- (void)invalidatePositionForComponentWithIdentifier:(id)arg1;
- (void)unregisterLayout:(id)arg1;
- (void)registerLayout:(id)arg1 sizer:(id)arg2 forComponent:(id)arg3;
- (void)registerLayout:(id)arg1 sizer:(id)arg2 forComponent:(id)arg3 atIndex:(unsigned long long)arg4;
- (id)initWithLayoutOptions:(id)arg1 componentBlueprintFactory:(id)arg2 unitConverterFactory:(id)arg3;

@end

