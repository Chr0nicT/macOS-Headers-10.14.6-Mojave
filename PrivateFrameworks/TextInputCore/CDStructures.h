//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AlignedBuffer<408, 8> {
    char _field1[408];
};

struct ByteString {
    union {
        struct {
            unsigned short _field1;
            char *_field2;
        } _field1;
        struct {
            unsigned short _field1;
            unsigned char _field2[14];
        } _field2;
    } _field1;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct Candidate {
    struct Vector<KB::Word, 3> _field1;
    float _field2;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field3;
    unsigned int _field4;
    unsigned int _field5;
    struct LanguageModelContext _field6;
    struct String _field7;
    struct ByteString _field8;
    _Bool _field9;
    _Bool _field10;
    struct retain_ptr<const __CFDictionary *> _field11;
};

struct CandidateCollection {
    struct vector<KB::Candidate, std::__1::allocator<KB::Candidate>> _field1;
    struct vector<KB::Candidate, std::__1::allocator<KB::Candidate>> _field2;
};

struct DictionaryContainer;

struct Input;

struct InputManagerSpecialization;

struct KeyboardLayout;

struct LanguageModel;

struct LanguageModelContainer {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::shared_ptr<KB::LanguageModel>, std::__1::allocator<std::__1::shared_ptr<KB::LanguageModel>>> _field2;
    struct vector<float, std::__1::allocator<float>> _field3;
};

struct LanguageModelContext {
    vector_5bda1073 _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct LockedInput {
    unsigned int _field1;
    unsigned int _field2;
};

struct RefPtr<KB::DictionaryContainer> {
    struct DictionaryContainer *m_ptr;
};

struct RefPtr<TI::Favonius::KeyboardLayout> {
    struct KeyboardLayout *_field1;
};

struct RefPtr<TI::Favonius::LayoutKey>;

struct String {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4;
    char *_field5;
    char _field6[16];
};

struct StrokeBuildManager;

struct TIInputManager {
    CDUnknownFunctionPointerType *_field1;
    struct vector<KB::Input, std::__1::allocator<KB::Input>> _field2;
    struct String _field3;
    struct String _field4;
    unsigned int _field5;
    struct String _field6;
    struct retain_ptr<const __CFLocale *> _field7;
    struct LockedInput _field8;
    struct StrokeBuildManager *_field9;
    struct String _field10;
    RefPtr_9bddf3b2 _field11;
    shared_ptr_e9f752ce _field12;
    unsigned int _field13;
    struct Vector<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> _field14;
    _Bool _field15;
    struct RefPtr<TI::Favonius::KeyboardLayout> _field16;
    struct String _field17;
    struct LanguageModelContext _field18;
    struct shared_ptr<KB::InputManagerSpecialization> _field19;
    CDUnknownBlockType _field20;
    struct shared_ptr<KB::TypologyLogger> _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
};

struct TITokenID {
    unsigned int lexicon_id;
    unsigned int word_id;
};

struct TypologyLogger;

struct Vector<KB::Word, 3> {
    unsigned long long _field1;
    struct VectorBuffer<KB::Word, 3> _field2;
};

struct Vector<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> {
    unsigned long long _field1;
    struct VectorBuffer<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> _field2;
};

struct VectorBuffer<KB::Word, 3> {
    struct Word *_field1;
    unsigned long long _field2;
    struct AlignedBuffer<408, 8> _field3;
};

struct VectorBuffer<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> {
    struct RefPtr<TI::Favonius::LayoutKey> *_field1;
    unsigned long long _field2;
};

struct Word;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _TIRevisionHistoryTokenIterator {
    unsigned long long tokenIndex;
    unsigned long long documentLocation;
};

struct __shared_weak_count;

struct retain_ptr<const __CFDictionary *> {
    struct __CFDictionary *_field1;
};

struct retain_ptr<const __CFLocale *> {
    struct __CFLocale *_field1;
};

struct shared_ptr<KB::InputManagerSpecialization> {
    struct InputManagerSpecialization *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<KB::LanguageModel> {
    struct LanguageModel *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<KB::TypologyLogger> {
    struct TypologyLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct vector<KB::Candidate, std::__1::allocator<KB::Candidate>> {
    struct Candidate *_field1;
    struct Candidate *_field2;
    struct __compressed_pair<KB::Candidate *, std::__1::allocator<KB::Candidate>> {
        struct Candidate *_field1;
    } _field3;
};

struct vector<KB::Input, std::__1::allocator<KB::Input>> {
    struct Input *_field1;
    struct Input *_field2;
    struct __compressed_pair<KB::Input *, std::__1::allocator<KB::Input>> {
        struct Input *_field1;
    } _field3;
};

struct vector<KB::LexiconInfo, std::__1::allocator<KB::LexiconInfo>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<KB::LexiconInfo *, std::__1::allocator<KB::LexiconInfo>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TITokenID, std::__1::allocator<TITokenID>> {
    struct TITokenID *__begin_;
    struct TITokenID *__end_;
    struct __compressed_pair<TITokenID *, std::__1::allocator<TITokenID>> {
        struct TITokenID *__value_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<KB::LanguageModel>, std::__1::allocator<std::__1::shared_ptr<KB::LanguageModel>>> {
    shared_ptr_e9f752ce *_field1;
    shared_ptr_e9f752ce *_field2;
    struct __compressed_pair<std::__1::shared_ptr<KB::LanguageModel>*, std::__1::allocator<std::__1::shared_ptr<KB::LanguageModel>>> {
        shared_ptr_e9f752ce *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct CDStruct_183601bc;

typedef struct {
    struct String _field1;
    struct String _field2;
    struct String _field3;
    struct String _field4;
    struct String _field5;
    unsigned int _field6;
    float _field7;
} CDStruct_69b8fb94;

// Template types
typedef struct RefPtr<KB::DictionaryContainer> {
    struct DictionaryContainer *m_ptr;
} RefPtr_9bddf3b2;

typedef struct shared_ptr<KB::LanguageModel> {
    struct LanguageModel *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e9f752ce;

typedef struct vector<KB::LexiconInfo, std::__1::allocator<KB::LexiconInfo>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<KB::LexiconInfo *, std::__1::allocator<KB::LexiconInfo>> {
        CDStruct_183601bc *_field1;
    } _field3;
} vector_4dc11a9b;

typedef struct vector<TITokenID, std::__1::allocator<TITokenID>> {
    struct TITokenID *__begin_;
    struct TITokenID *__end_;
    struct __compressed_pair<TITokenID *, std::__1::allocator<TITokenID>> {
        struct TITokenID *__value_;
    } __end_cap_;
} vector_5bda1073;

