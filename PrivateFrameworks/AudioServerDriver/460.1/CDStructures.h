//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASDBufferList;

struct ASDDSPGraphHelper {
    shared_ptr_f6ac7592 _field1;
    struct unique_ptr<DSPGraph::Graph, std::__1::default_delete<DSPGraph::Graph>> _field2;
    struct unique_ptr<AUProcessingBlock_DSPGraph, std::__1::default_delete<AUProcessingBlock_DSPGraph>> _field3;
    unsigned long long _field4;
};

struct ASDDSPStreamHelper;

struct ASDSRCStreamHelper;

struct AUProcessingBlock_DSPGraph;

struct AudioChannelDescription {
    unsigned int _field1;
    unsigned int _field2;
    float _field3[3];
};

struct AudioObjectPropertyAddress {
    unsigned int mSelector;
    unsigned int mScope;
    unsigned int mElement;
};

struct AudioRingBuffer;

struct AudioServerPlugInClientInfo {
    unsigned int _field1;
    int _field2;
    unsigned char _field3;
    struct __CFString *_field4;
};

struct AudioServerPlugInDriverInterface {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
    CDUnknownFunctionPointerType _field21;
    CDUnknownFunctionPointerType _field22;
    CDUnknownFunctionPointerType _field23;
};

struct AudioServerPlugInHostInterface {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct AudioStreamBasicDescription {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct AudioStreamRangedDescription {
    struct AudioStreamBasicDescription _field1;
    struct AudioValueRange _field2;
};

struct AudioUnitParameterInfo {
    char _field1[52];
    struct __CFString *_field2;
    unsigned int _field3;
    struct __CFString *_field4;
    unsigned int _field5;
    float _field6;
    float _field7;
    float _field8;
    unsigned int _field9;
};

struct AudioValueRange {
    double _field1;
    double _field2;
};

struct Box {
    CDUnknownFunctionPointerType *_field1;
    struct Graph *_field2;
    struct IsoGroup *_field3;
    struct Subset *_field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    long long _field6;
    struct vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>> _field7;
    struct vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>> _field8;
    struct unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>> _field9;
    struct vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>> _field10;
    struct vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>> _field11;
    struct vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>> _field12;
    struct vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>> _field13;
    struct function<void (double)> _field14;
    struct function<void (DSPGraph::Box *)> _field15;
    struct function<void (DSPGraph::Box *)> _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    long long _field21;
};

struct Graph;

struct InputPort;

struct Interpreter;

struct IsoGroup;

struct OutputPort;

struct ParameterTap;

struct PropertyTap;

struct Subset;

struct __CFString;

struct __hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> *_field1;
};

struct __list_node_base<ASDDSPGraphHelper, void *> {
    struct __list_node_base<ASDDSPGraphHelper, void *> *__prev_;
    struct __list_node_base<ASDDSPGraphHelper, void *> *__next_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct function<void (DSPGraph::Box *)> {
    struct type _field1;
    struct __base<void (DSPGraph::Box *)> *_field2;
};

struct function<void (double)> {
    struct type _field1;
    struct __base<void (double)> *_field2;
};

struct guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3>;

struct list<ASDDSPGraphHelper, std::__1::allocator<ASDDSPGraphHelper>> {
    struct __list_node_base<ASDDSPGraphHelper, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<ASDDSPGraphHelper, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct shared_ptr<DSPGraph::Graph> {
    struct Graph *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct type {
    unsigned char _field1[32];
};

struct unique_ptr<ASDBufferList, std::__1::default_delete<ASDBufferList>> {
    struct __compressed_pair<ASDBufferList *, std::__1::default_delete<ASDBufferList>> {
        struct ASDBufferList *__value_;
    } __ptr_;
};

struct unique_ptr<ASDDSPStreamHelper, std::__1::default_delete<ASDDSPStreamHelper>> {
    struct __compressed_pair<ASDDSPStreamHelper *, std::__1::default_delete<ASDDSPStreamHelper>> {
        struct ASDDSPStreamHelper *__value_;
    } __ptr_;
};

struct unique_ptr<ASDSRCStreamHelper, std::__1::default_delete<ASDSRCStreamHelper>> {
    struct __compressed_pair<ASDSRCStreamHelper *, std::__1::default_delete<ASDSRCStreamHelper>> {
        struct ASDSRCStreamHelper *__value_;
    } __ptr_;
};

struct unique_ptr<AUProcessingBlock_DSPGraph, std::__1::default_delete<AUProcessingBlock_DSPGraph>> {
    struct __compressed_pair<AUProcessingBlock_DSPGraph *, std::__1::default_delete<AUProcessingBlock_DSPGraph>> {
        struct AUProcessingBlock_DSPGraph *_field1;
    } _field1;
};

struct unique_ptr<AudioRingBuffer, std::__1::default_delete<AudioRingBuffer>> {
    struct __compressed_pair<AudioRingBuffer *, std::__1::default_delete<AudioRingBuffer>> {
        struct AudioRingBuffer *__value_;
    } __ptr_;
};

struct unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>;

struct unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>;

struct unique_ptr<DSPGraph::Graph, std::__1::default_delete<DSPGraph::Graph>> {
    struct __compressed_pair<DSPGraph::Graph *, std::__1::default_delete<DSPGraph::Graph>> {
        struct Graph *_field1;
    } _field1;
};

struct unique_ptr<DSPGraph::Interpreter, std::__1::default_delete<DSPGraph::Interpreter>> {
    struct __compressed_pair<DSPGraph::Interpreter *, std::__1::default_delete<DSPGraph::Interpreter>> {
        struct Interpreter *__value_;
    } __ptr_;
};

struct unique_ptr<ca::concurrent::guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3>, std::__1::default_delete<ca::concurrent::guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3>>> {
    struct __compressed_pair<ca::concurrent::guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3>*, std::__1::default_delete<ca::concurrent::guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3>>> {
        struct guarded_lookup_hash_table<unsigned long long, ASDDSPGraphHelper *, 3> *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>> {
    struct __hash_table<DSPGraph::Box *, std::__1::hash<DSPGraph::Box *>, std::__1::equal_to<DSPGraph::Box *>, std::__1::allocator<DSPGraph::Box *>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*>, std::__1::allocator<std::__1::__hash_node<DSPGraph::Box *, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<DSPGraph::Box *, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<DSPGraph::Box *>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<DSPGraph::Box *>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<DSPGraph::InputPort, std::__1::allocator<DSPGraph::InputPort>> {
    struct InputPort *_field1;
    struct InputPort *_field2;
    struct __compressed_pair<DSPGraph::InputPort *, std::__1::allocator<DSPGraph::InputPort>> {
        struct InputPort *_field1;
    } _field3;
};

struct vector<DSPGraph::OutputPort, std::__1::allocator<DSPGraph::OutputPort>> {
    struct OutputPort *_field1;
    struct OutputPort *_field2;
    struct __compressed_pair<DSPGraph::OutputPort *, std::__1::allocator<DSPGraph::OutputPort>> {
        struct OutputPort *_field1;
    } _field3;
};

struct vector<DSPGraph::ParameterTap, std::__1::allocator<DSPGraph::ParameterTap>> {
    struct ParameterTap *_field1;
    struct ParameterTap *_field2;
    struct __compressed_pair<DSPGraph::ParameterTap *, std::__1::allocator<DSPGraph::ParameterTap>> {
        struct ParameterTap *_field1;
    } _field3;
};

struct vector<DSPGraph::PropertyTap, std::__1::allocator<DSPGraph::PropertyTap>> {
    struct PropertyTap *_field1;
    struct PropertyTap *_field2;
    struct __compressed_pair<DSPGraph::PropertyTap *, std::__1::allocator<DSPGraph::PropertyTap>> {
        struct PropertyTap *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>> {
    struct unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *_field1;
    struct unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>*, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>>>> {
        struct unique_ptr<DSPGraph::FileInjector, std::__1::default_delete<DSPGraph::FileInjector>> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>> {
    struct unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *_field1;
    struct unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>*, std::__1::allocator<std::__1::unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>>>> {
        struct unique_ptr<DSPGraph::FileRecorder, std::__1::default_delete<DSPGraph::FileRecorder>> *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct shared_ptr<DSPGraph::Graph> {
    struct Graph *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f6ac7592;

typedef struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_0ace0ab1;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
} vector_9492931a;

