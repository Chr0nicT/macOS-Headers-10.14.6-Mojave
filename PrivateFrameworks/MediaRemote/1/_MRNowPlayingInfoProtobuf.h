//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <ProtocolBuffer/PBCodable.h>

#import <MediaRemote/NSCopying-Protocol.h>

@class NSData, NSString;

@interface _MRNowPlayingInfoProtobuf : PBCodable <NSCopying>
{
    double _duration;
    double _elapsedTime;
    long long _radioStationIdentifier;
    double _timestamp;
    unsigned long long _uniqueIdentifier;
    NSString *_album;
    NSString *_artist;
    NSData *_artworkDataDigest;
    float _playbackRate;
    NSString *_radioStationHash;
    NSString *_radioStationName;
    int _repeatMode;
    int _shuffleMode;
    NSString *_title;
    BOOL _isAdvertisement;
    BOOL _isAlwaysLive;
    BOOL _isExplicitTrack;
    BOOL _isMusicApp;
    struct {
        unsigned int duration:1;
        unsigned int elapsedTime:1;
        unsigned int radioStationIdentifier:1;
        unsigned int timestamp:1;
        unsigned int uniqueIdentifier:1;
        unsigned int playbackRate:1;
        unsigned int repeatMode:1;
        unsigned int shuffleMode:1;
        unsigned int isAdvertisement:1;
        unsigned int isAlwaysLive:1;
        unsigned int isExplicitTrack:1;
        unsigned int isMusicApp:1;
    } _has;
}

@property(nonatomic) BOOL isAdvertisement; // @synthesize isAdvertisement=_isAdvertisement;
@property(nonatomic) BOOL isAlwaysLive; // @synthesize isAlwaysLive=_isAlwaysLive;
@property(retain, nonatomic) NSData *artworkDataDigest; // @synthesize artworkDataDigest=_artworkDataDigest;
@property(retain, nonatomic) NSString *radioStationName; // @synthesize radioStationName=_radioStationName;
@property(retain, nonatomic) NSString *radioStationHash; // @synthesize radioStationHash=_radioStationHash;
@property(nonatomic) long long radioStationIdentifier; // @synthesize radioStationIdentifier=_radioStationIdentifier;
@property(nonatomic) BOOL isMusicApp; // @synthesize isMusicApp=_isMusicApp;
@property(nonatomic) BOOL isExplicitTrack; // @synthesize isExplicitTrack=_isExplicitTrack;
@property(nonatomic) unsigned long long uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) float playbackRate; // @synthesize playbackRate=_playbackRate;
@property(nonatomic) double elapsedTime; // @synthesize elapsedTime=_elapsedTime;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) NSString *artist; // @synthesize artist=_artist;
@property(retain, nonatomic) NSString *album; // @synthesize album=_album;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (BOOL)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) BOOL hasIsAdvertisement;
@property(nonatomic) BOOL hasIsAlwaysLive;
@property(readonly, nonatomic) BOOL hasArtworkDataDigest;
@property(readonly, nonatomic) BOOL hasRadioStationName;
@property(readonly, nonatomic) BOOL hasRadioStationHash;
@property(nonatomic) BOOL hasRadioStationIdentifier;
@property(nonatomic) BOOL hasIsMusicApp;
@property(nonatomic) BOOL hasIsExplicitTrack;
@property(nonatomic) BOOL hasUniqueIdentifier;
@property(readonly, nonatomic) BOOL hasTitle;
@property(nonatomic) BOOL hasTimestamp;
- (int)StringAsShuffleMode:(id)arg1;
- (id)shuffleModeAsString:(int)arg1;
@property(nonatomic) BOOL hasShuffleMode;
@property(nonatomic) int shuffleMode; // @synthesize shuffleMode=_shuffleMode;
- (int)StringAsRepeatMode:(id)arg1;
- (id)repeatModeAsString:(int)arg1;
@property(nonatomic) BOOL hasRepeatMode;
@property(nonatomic) int repeatMode; // @synthesize repeatMode=_repeatMode;
@property(nonatomic) BOOL hasPlaybackRate;
@property(nonatomic) BOOL hasElapsedTime;
@property(nonatomic) BOOL hasDuration;
@property(readonly, nonatomic) BOOL hasArtist;
@property(readonly, nonatomic) BOOL hasAlbum;

@end

