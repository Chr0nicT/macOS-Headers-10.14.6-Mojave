//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSMutableArray, NSMutableDictionary, NSRecursiveLock, NSString, ODSession, WPOfflineCacheAgent, WPWorkerAgent;

@interface WPSession : NSObject
{
    ODSession *_defaultODSession;
    BOOL _interestedInResults;
    WPOfflineCacheAgent *_agent;
    id _delegate;
    NSMutableDictionary *_results;
    NSMutableArray *_tempResults;
    NSString *_sessionUID;
    NSString *_nodePath;
    struct CGSize _defaultBadgeShadowPictureSize;
    double _defaultBadgeShadowScalingRatio;
    long long mLoadIntoMemoryRecordThreshold;
    BOOL _uidFilteringIsActive;
    BOOL mShouldReadAllRecordsIntoMemory;
    NSMutableDictionary *_authenticatedNodes;
    NSString *_URI;
    NSRecursiveLock *_sessionLock;
    BOOL _filterSystemRecords;
    int _defaultQuerySourceMode;
    WPWorkerAgent *_asyncQueryWorkerAgent;
    int _authenticationMethod;
    NSArray *_cachedConfiguredNodes;
    NSArray *_cachedUnreachableNodes;
    NSArray *_cachedAvailableNodes;
    NSString *_contactSearchNodePath;
    NSString *_localNodePath;
    BOOL _workaroundIsInitied;
    BOOL _useJapaneseWorkaround;
    struct __CFRunLoopSource *_rls;
    NSMutableDictionary *_adminGroups;
}

+ (id)mainMACAddress;
+ (id)mainMACAddressWithNumberOfTries:(unsigned long long)arg1 sleep:(unsigned long long)arg2;
+ (id)memberListFromArray:(id)arg1;
+ (id)valueForLabel:(id)arg1 person:(id)arg2;
+ (id)stringsFromNSError:(id)arg1;
+ (id)makeUID;
+ (id)supportedChatProtocols;
+ (id)stringByAppendingEllipsisToString:(id)arg1;
+ (id)dictionaryToPlist:(id)arg1 error:(out id *)arg2;
+ (id)plistToDictionary:(id)arg1 error:(out id *)arg2;
+ (id)makeLDAPCompoundStringWithValues:(id)arg1 attributes:(id)arg2 matchType:(unsigned int)arg3;
+ (id)blessedStandardAttributesToBeReturned;
+ (id)blessedResourceAttributesToBeReturned;
+ (id)blessedMapAttributesToBeReturned;
+ (id)blessedPlaceAttributesToBeReturned;
+ (id)blessedGroupAttributesToBeReturned;
+ (id)blessedUserAttributesToBeReturned;
+ (id)blessedPersonAttributesToBeReturned;
+ (id)blessedResourceAttributesToBeSearched;
+ (id)blessedMapAttributesToBeSearched;
+ (id)blessedPlaceAttributesToBeSearched;
+ (id)blessedGroupAttributesToBeSearched;
+ (id)blessedUserAttributesToBeSearched;
+ (id)blessedPersonAttributesToBeSearched;
+ (id)collaborationServicesRecordInNodeWithPath:(id)arg1 withSession:(id)arg2;
+ (id)collaborationServicesRecordInNodeWithPath:(id)arg1;
+ (id)defaultURI;
+ (id)nameOfLocalhostWithNodePath:(id)arg1;
+ (id)nameOfHost:(id)arg1;
+ (id)nameOfHostWithIPAddress:(id)arg1;
+ (unsigned int)defaultContactSearchNodeType;
+ (id)session;
+ (id)defaultSession;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
- (void)updateDirectoryServicesCachedNodesAndNotify:(id)arg1;
- (void)synchronizeRecord:(id)arg1 verifyingAttributes:(id)arg2;
- (id)nextAvailableIDForRecordType:(id)arg1 nodePath:(id)arg2;
- (void)postQueryHasBeenCanceledNotification;
- (void)postQueryHasFinishedNotification;
- (void)postResults:(id)arg1 areInNotificationForRecordType:(id)arg2;
- (id)cleanDirtyResourceRecords:(id)arg1;
- (id)resolveRecordsWithGUIDs:(id)arg1 instantiatingWithWPType:(id)arg2;
- (id)queryCacheWithRecordTypes:(id)arg1 values:(id)arg2 matchType:(unsigned int)arg3 sqlQuery:(id)arg4;
- (void)queryAddressBookWithAttributes:(id)arg1 values:(id)arg2 matchType:(unsigned int)arg3;
- (id)whitePagesAttributes;
- (id)WPAttributeToABProperty:(id)arg1;
- (long long)WPMatchTypeToABSearchComparison:(unsigned int)arg1;
- (id)makeABSearchElementsUsingAttributes:(id)arg1 values:(id)arg2 matchType:(unsigned int)arg3;
- (void)resetWPSession;
- (id)sessionUID;
- (void)setSessionUID:(id)arg1;
- (void)addValuesFromMultivalueAddress:(id)arg1 withProperty:(id)arg2 dictionary:(id *)arg3;
- (void)addValuesFromMultivalue:(id)arg1 prefix:(id)arg2 withProperty:(id)arg3 dictionary:(id *)arg4;
- (id)createRecordWithType:(id)arg1 attributes:(id)arg2 inNode:(id)arg3 resolveNamingConflict:(BOOL)arg4 error:(out id *)arg5;
- (id)createRecordWithType:(id)arg1 attributes:(id)arg2 inNode:(id)arg3 error:(out id *)arg4;
- (id)writableRecord:(id)arg1 inNode:(id)arg2 includeAttributes:(id)arg3 error:(out id *)arg4;
- (id)excludeLocalNodesFromArray:(id)arg1;
- (void)setCachedAvailableNodes:(id)arg1;
- (id)cacheAvailableNodes;
- (void)setCachedUnreachableNodes:(id)arg1;
- (id)cacheUnreachableNodes;
- (void)setCachedConfiguredNodes:(id)arg1;
- (id)cacheConfiguredNodes;
- (void)updateDirectoryServicesCachedNodes;
- (void)cacheResults:(id)arg1 withRecordType:(id)arg2;
- (void)setResults:(id)arg1 recordIdentifier:(id)arg2 sessionUID:(id)arg3 postNotification:(BOOL)arg4;
- (void)setResults:(id)arg1 postNotification:(BOOL)arg2;
- (void)handlePartialResultsInNotification:(id)arg1;
- (void)fromThreadPartialResultsReady:(id)arg1;
- (BOOL)_setupCachingSchemaAndReturnError:(out id *)arg1;
- (id)suggestShortNameFromLongName:(id)arg1;
- (BOOL)useJapaneseWorkaround;
- (id)badgePictureForUserWithCommand:(id)arg1 tempFilePath:(id)arg2;
- (id)badgePictureForUserWithEmail:(id)arg1;
- (id)badgePictureForUserWithName:(id)arg1;
- (id)addABPersons:(id)arg1 toNode:(id)arg2;
- (void)setDefaultBadgeShadowScalingRatio:(double)arg1;
- (double)defaultBadgeShadowScalingRatio;
- (void)setDefaultBadgeShadowPictureSize:(struct CGSize)arg1;
- (struct CGSize)defaultBadgeShadowPictureSize;
- (void)setOfflineCacheAgent:(id)arg1;
- (void)setActivateCache:(BOOL)arg1 filePath:(id)arg2;
- (void)setReadFromCache:(BOOL)arg1;
- (void)setActivateCacheFilePath:(id)arg1;
- (id)webServicesRecordsForServiceOfType:(id)arg1;
- (id)allWebServicesRecordsExcludingLocalNodes:(BOOL)arg1;
- (id)allWebServicesRecords;
- (BOOL)deleteRecord:(id)arg1 inNode:(id)arg2 error:(out id *)arg3;
- (BOOL)updateRecord:(id)arg1 inNode:(id)arg2 error:(out id *)arg3;
- (BOOL)performFakeACLCheckForRecord:(id)arg1 usingAttribute:(id)arg2;
- (id)createWebServices:(id)arg1 withName:(id)arg2 inNode:(id)arg3 error:(out id *)arg4;
- (id)createResource:(id)arg1 description:(id)arg2 attributes:(id)arg3 inNode:(id)arg4 error:(out id *)arg5;
- (id)createMap:(id)arg1 description:(id)arg2 attributes:(id)arg3 inNode:(id)arg4 error:(out id *)arg5;
- (id)createLocation:(id)arg1 description:(id)arg2 attributes:(id)arg3 inNode:(id)arg4 error:(out id *)arg5;
- (id)createGroup:(id)arg1 attributes:(id)arg2 members:(id)arg3 inNode:(id)arg4 error:(out id *)arg5;
- (id)createUser:(id)arg1 attributes:(id)arg2 inNode:(id)arg3 error:(out id *)arg4;
- (id)createPerson:(id)arg1 attributes:(id)arg2 inNode:(id)arg3 error:(out id *)arg4;
- (id)addressBookPersonToWhitePagesPerson:(id)arg1 inNode:(id)arg2 error:(out id *)arg3;
- (id)recordsOfType:(id)arg1 nodePath:(id)arg2 webServiceName:(id)arg3 hostName:(id)arg4 serviceType:(id)arg5 status:(int)arg6 attributesToBeReturned:(id)arg7 excludingLocalAccounts:(BOOL)arg8 withQueryMode:(int)arg9 error:(out id *)arg10;
- (id)recordsOfType:(id)arg1 hostName:(id)arg2 serviceType:(id)arg3 status:(int)arg4 attributesToBeReturned:(id)arg5 excludingLocalAccounts:(BOOL)arg6 withQueryMode:(int)arg7 error:(out id *)arg8;
- (id)recordsOfType:(id)arg1 withTimestampLaterThan:(id)arg2 attributesToBeReturned:(id)arg3;
- (id)allAddressBookPeople;
- (id)allRecordsOfType:(id)arg1 excludingLocalAccounts:(BOOL)arg2 withQueryMode:(int)arg3 attributesToBeReturned:(id)arg4 error:(out id *)arg5;
- (id)allResourcesExcludingLocalAccounts:(BOOL)arg1 withQueryMode:(int)arg2 attributesToBeReturned:(id)arg3 error:(out id *)arg4;
- (id)allLocationsExcludingLocalAccounts:(BOOL)arg1 withQueryMode:(int)arg2 attributesToBeReturned:(id)arg3 error:(out id *)arg4;
- (id)allMapsExcludingLocalAccounts:(BOOL)arg1 withQueryMode:(int)arg2 attributesToBeReturned:(id)arg3 error:(out id *)arg4;
- (id)allGroupsExcludingLocalAccounts:(BOOL)arg1 withQueryMode:(int)arg2 attributesToBeReturned:(id)arg3 error:(out id *)arg4;
- (id)allGroupsWithQueryMode:(int)arg1 attributesToBeReturned:(id)arg2 error:(out id *)arg3;
- (id)allSharedContactsExcludingLocalAccounts:(BOOL)arg1 withQueryMode:(int)arg2 attributesToBeReturned:(id)arg3 error:(out id *)arg4;
- (id)allSharedContactsWithQueryMode:(int)arg1 attributesToBeReturned:(id)arg2 error:(out id *)arg3;
- (id)allPeopleExcludingLocalAccounts:(BOOL)arg1 withQueryMode:(int)arg2 attributesToBeReturned:(id)arg3 error:(out id *)arg4;
- (id)allPeopleWithQueryMode:(int)arg1 attributesToBeReturned:(id)arg2 error:(out id *)arg3;
- (id)resultsForRecordType:(id)arg1;
- (id)addressBookPeople;
- (id)maps;
- (id)locations;
- (id)resources;
- (id)groups;
- (id)sharedContacts;
- (id)people;
- (id)results;
- (void)allRecordsExcludingLocalAccounts:(BOOL)arg1 withQueryMode:(int)arg2 error:(out id *)arg3;
- (void)allRecordsWithQueryMode:(int)arg1 error:(out id *)arg2;
- (void)checkIfWeShouldReadAllRecordsIntoMemory;
- (void)queryWorkerAgentHasCalled:(id)arg1;
- (id)directQueryRecordType:(id)arg1 nodePaths:(id)arg2 excludeLocalNodes:(BOOL)arg3 attributesToBeSearched:(id)arg4 withValues:(id)arg5 attributesToBeReturned:(id)arg6 matchType:(unsigned int)arg7 maxResults:(long long)arg8 querySourceMode:(int)arg9 offlineAgent:(id)arg10 sqlQuery:(id)arg11 error:(out id *)arg12;
- (id)directQueryRecordType:(id)arg1 nodePaths:(id)arg2 attributesToBeSearched:(id)arg3 withValues:(id)arg4 attributesToBeReturned:(id)arg5 matchType:(unsigned int)arg6 maxResults:(long long)arg7 querySourceMode:(int)arg8 offlineAgent:(id)arg9 sqlQuery:(id)arg10 error:(out id *)arg11;
- (id)directQueryRecordType:(id)arg1 nodePaths:(id)arg2 attributesToBeSearched:(id)arg3 withValues:(id)arg4 attributesToBeReturned:(id)arg5 matchType:(unsigned int)arg6 maxResults:(long long)arg7 error:(out id *)arg8;
- (id)directQueryRecordType:(id)arg1 nodePath:(id)arg2 attributesToBeSearched:(id)arg3 withValues:(id)arg4 attributesToBeReturned:(id)arg5 matchType:(unsigned int)arg6 maxResults:(long long)arg7 error:(out id *)arg8;
- (BOOL)isSessionFinished;
- (void)cancelQueriesInterestedInResults:(BOOL)arg1;
- (void)cancelQueries:(BOOL)arg1;
- (void)queryRecordTypes:(id)arg1 nodePaths:(id)arg2 attributesToBeSearched:(id)arg3 withValues:(id)arg4 matchType:(unsigned int)arg5 attributesToBeReturned:(id)arg6 maxResults:(long long)arg7 createNewSessionUID:(BOOL)arg8 offlineAgent:(id)arg9 sqlQuery:(id)arg10 error:(out id *)arg11;
- (void)queryRecordTypes:(id)arg1 nodePaths:(id)arg2 attributesToBeSearched:(id)arg3 withValues:(id)arg4 matchType:(unsigned int)arg5 attributesToBeReturned:(id)arg6 maxResults:(long long)arg7 createNewSessionUID:(BOOL)arg8 error:(out id *)arg9;
- (BOOL)isNodeAvailable:(id)arg1;
- (BOOL)isNodeWithFullPathCollaborationServer:(id)arg1;
- (id)collaborationServersInfoWithSession:(id)arg1;
- (id)collaborationServersInfo;
- (id)availableNodesExcludingLocalNodes:(BOOL)arg1 error:(out id *)arg2;
- (id)unreachableNodesExcludingLocalNodes:(BOOL)arg1 error:(out id *)arg2;
- (id)configuredNodesExcludingLocalNodes:(BOOL)arg1 error:(out id *)arg2;
- (id)performFilterOnSystemRecords:(id)arg1;
- (BOOL)filterSystemRecords;
- (void)setFilterSystemRecords:(BOOL)arg1;
- (id)passwordInKeychainItemWithNodePath:(id)arg1;
- (id)nameInKeychainItemWithNodePath:(id)arg1;
- (BOOL)addToKeychainWithFullNodePath:(id)arg1 userName:(id)arg2 password:(id)arg3;
- (BOOL)loadKeychainItemWithNodePath:(id)arg1;
- (id)whoAmIInNode:(id)arg1 promptIfNeeded:(BOOL)arg2;
- (id)whoAmIPromptingIfNeeded:(BOOL)arg1;
- (BOOL)isUserAdmin:(id)arg1 inNodeWithFullPath:(id)arg2;
- (id)authenticatedCachedAccountWithNodePath:(id)arg1;
- (id)authenticatedCachedNodeWithNodePath:(id)arg1;
- (id)authenticatedCachedInfoWithNodePath:(id)arg1;
- (id)genericAuthenticationWithNodePath:(id)arg1 userName:(id)arg2 password:(id)arg3 error:(out id *)arg4;
- (BOOL)isNodeWithFullPathAuthenticated:(id)arg1;
- (id)namePasswordAuthenticationWithNodePath:(id)arg1 error:(out id *)arg2;
- (id)kerberosAuthenticationWithNodePath:(id)arg1 promptIfNeeded:(BOOL)arg2 error:(out id *)arg3;
- (id)rootAuthenticationWithError:(out id *)arg1 wasAuthenticatedAsRoot:(char *)arg2;
- (void)setUIDFilteringIsActive:(BOOL)arg1;
- (BOOL)UIDFilteringIsActive;
- (void)setShouldReadAllRecordsIntoMemory:(BOOL)arg1;
- (BOOL)shouldReadAllRecordsIntoMemory;
- (void)setLoadIntoMemoryRecordThreshold:(long long)arg1;
- (long long)loadIntoMemoryRecordThreshold;
- (void)setURI:(id)arg1;
- (id)URI;
- (void)setDefaultQuerySourceMode:(int)arg1;
- (int)defaultQuerySourceMode;
- (id)localNodePath;
- (id)contactSearchNodePath;
- (id)authenticationSearchNodePath;
- (void)setAuthenticationMethod:(int)arg1;
- (int)authenticationMethod;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;
- (id)ODSession;
- (void)setODSession:(id)arg1;

@end

