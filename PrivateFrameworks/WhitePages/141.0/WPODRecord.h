//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <WhitePages/WPGenericRecord.h>

@class NSData, NSDictionary, ODRecord, WPBadgePicture;

@interface WPODRecord : WPGenericRecord
{
    ODRecord *_record;
    NSDictionary *_cachedAttributes;
    WPBadgePicture *_badgePictureManager;
    NSData *_cachedImageData;
    WPODRecord *_normalizedRecord;
}

+ (id)countryInfoForCountryNamed:(id)arg1;
+ (id)countryInfoForCode:(id)arg1;
+ (id)supportedCountries;
+ (id)supportedAddresses;
+ (id)convertWPAttributesToODAttributes:(id)arg1;
+ (id)mapWPProperty:(id)arg1;
+ (void)initStaticVariables;
+ (id)NSImageToJPEG:(id)arg1 compressionfactor:(double)arg2;
+ (id)NSImageToJPEG:(id)arg1;
+ (id)NSImageToPDF:(id)arg1;
+ (id)reflectedImage:(id)arg1;
+ (id)defaultLargeImage;
+ (id)defaultImage;
+ (id)recordsWithName:(id)arg1 forRecordType:(id)arg2 inNodesWithPaths:(id)arg3 attributesToBeReturned:(id)arg4 session:(id)arg5;
+ (id)recordsWithName:(id)arg1 forRecordType:(id)arg2 inNodeWithPath:(id)arg3 attributesToBeReturned:(id)arg4 session:(id)arg5;
+ (id)recordsWithName:(id)arg1 forRecordType:(id)arg2 inNodeWithPath:(id)arg3 attributesToBeReturned:(id)arg4;
+ (id)recordsWithName:(id)arg1 forRecordType:(id)arg2 attributesToBeReturned:(id)arg3 session:(id)arg4;
+ (id)recordsWithName:(id)arg1 forRecordType:(id)arg2 attributesToBeReturned:(id)arg3;
+ (id)recordWithGUID:(id)arg1 forRecordType:(id)arg2 inNodesWithPaths:(id)arg3 attributesToBeReturned:(id)arg4 session:(id)arg5;
+ (id)recordWithGUID:(id)arg1 forRecordType:(id)arg2 inNodeWithPath:(id)arg3 attributesToBeReturned:(id)arg4 session:(id)arg5;
+ (id)recordWithGUID:(id)arg1 forRecordType:(id)arg2 inNodeWithPath:(id)arg3 attributesToBeReturned:(id)arg4;
+ (id)recordWithGUID:(id)arg1 forRecordType:(id)arg2 attributesToBeReturned:(id)arg3 session:(id)arg4;
+ (id)recordWithGUID:(id)arg1 forRecordType:(id)arg2 attributesToBeReturned:(id)arg3;
+ (id)recordWithODRecord:(id)arg1 session:(id)arg2;
+ (void)initialize;
- (void)reset;
- (long long)compareDisplayedName:(id)arg1;
- (id)valueForProperty:(id)arg1 returnMultiValueIfSingleValue:(BOOL)arg2;
- (id)valuesWithPrefix:(id)arg1 forProperty:(id)arg2;
- (id)multiValueForProperty:(id)arg1;
- (id)singleValueForProperty:(id)arg1;
- (id)valuesForAttribute:(id)arg1 error:(out id *)arg2;
- (id)mainPhone;
- (BOOL)setValue:(id)arg1 forAttribute:(id)arg2;
- (BOOL)setValues:(id)arg1;
- (void)clearWebServicesReferences;
- (void)removeWebServicesReferenceWithRecord:(id)arg1 webServiceVirtualHost:(id)arg2 serviceOfType:(id)arg3;
- (void)setWebServicesReferenceWithRecord:(id)arg1 webServiceVirtualHost:(id)arg2 serviceOfType:(id)arg3 enabled:(BOOL)arg4;
- (BOOL)assignToVirtualHost:(id)arg1 error:(out id *)arg2;
- (BOOL)recordIsAssociatedWithHostKey:(id)arg1 forServiceType:(id)arg2;
- (id)webServicesVirtualHostWithKey:(id)arg1 ofServiceType:(id)arg2;
- (id)webServicesVirtualHostsOfServiceType:(id)arg1;
- (id)webServicesVirtualHosts;
- (id)webServicesReferencesOfServiceType:(id)arg1;
- (id)webServicesReferences;
- (void)rebuildWebServicesReferences;
- (BOOL)updateWebServiceCalendarReferenceWithDelegate:(id)arg1;
- (id)recordsWithCalendaringDelegate;
- (BOOL)isCalendarEnabled;
- (id)relativePrincipalURI;
- (id)mainCalendarPrincipalURI;
- (id)calendarPrincipalURIsForSnowLeopard;
- (id)calendarPrincipalURIs;
- (id)printableAttributedString;
- (id)badgeImage;
- (void)setReflectedImage:(id)arg1;
- (id)reflectedImage;
- (id)badgePictureManager;
- (id)image;
- (void)setImage:(id)arg1;
- (id)imageData;
- (void)setImageData:(id)arg1;
- (void)resetAndFetchUsingAttributes:(id)arg1;
- (void)resetAndSynchronize:(BOOL)arg1;
- (void)setAttributes:(id)arg1;
- (id)attributes;
- (BOOL)isNewRecord;
- (void)setXMLPlist:(id)arg1 error:(out id *)arg2;
- (id)xml;
- (unsigned long long)UID;
- (id)GUID;
- (void)setMapCoordinates:(id)arg1;
- (id)mapCoordinates;
- (void)setMap:(id)arg1;
- (id)map;
- (id)timestamp;
- (id)nodePath;
- (void)setComments:(id)arg1;
- (id)comments;
- (id)sortableDescription;
- (id)recordNameWithoutSuffix;
- (id)recordNames;
- (id)recordName;
- (void)setDisplayedName:(id)arg1;
- (id)displayedName;
- (id)displayedStringForPickerTextField:(id)arg1;
- (id)displayedStringForPickerTableView:(id)arg1;
- (id)secondaryInfoString;
- (id)recordType;
- (id)normalizedRecordNeedingAttributes:(id)arg1;
- (id)odRecord;
- (void)dealloc;
- (id)init;
- (id)initRecordWithCachedAttributes:(id)arg1 session:(id)arg2;
- (id)initRecordWithODRecord:(id)arg1 session:(id)arg2;

@end

