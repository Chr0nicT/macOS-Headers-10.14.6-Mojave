//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface CSUtils : NSObject
{
}

+ (id)timeStampWithSaltGrain;
+ (id)deviceBuildVersion;
+ (id)deviceUserAssignedName;
+ (double)systemUpTime;
+ (id)_osxDeviceProductVersion;
+ (id)_osxDeviceProductType;
+ (id)deviceProductVersion;
+ (id)deviceProductType;
+ (id)getFixedHighPrioritySerialQueueWithLabel:(id)arg1;
+ (id)getFixedPrioritySerialQueueWithLabel:(id)arg1 fixedPriority:(int)arg2;
+ (id)rootQueueWithFixedPriority:(int)arg1;
+ (BOOL)supportCircularBuffer;
+ (BOOL)shouldDeinterleaveAudioOnCS;
+ (BOOL)supportBluetoothDeviceVoiceTrigger;
+ (BOOL)supportJarvisVoiceTrigger;
+ (BOOL)supportHearstVoiceTrigger;
+ (id)boardID;
+ (BOOL)hasRemoteCoreSpeech;
+ (BOOL)supportSessionActivateDelay;
+ (BOOL)shouldDelayPhaticForMyriadDecision;
+ (BOOL)supportPhatic;
+ (BOOL)supportPremiumModel;
+ (BOOL)supportRaiseToSpeak;
+ (BOOL)supportTTS;
+ (BOOL)supportSAT;
+ (BOOL)supportImplicitTraining;
+ (BOOL)supportSmartVolume;
+ (BOOL)supportHybridEndpointer;
+ (BOOL)supportCSTwoShotDecision;
+ (BOOL)supportSelfTriggerSuppression;
+ (BOOL)supportOpportunisticZLL;
+ (BOOL)supportPremiumAssets;
+ (BOOL)supportKeywordDetector;
+ (BOOL)supportContinuousVoiceTrigger;
+ (BOOL)shouldRunVTOnCS;
+ (id)_contentsOfDirectoryAtURL:(id)arg1 matchingPattern:(id)arg2 includingPropertiesForKeys:(id)arg3 error:(id *)arg4;
+ (void)_sortedURLsInDirectory:(id)arg1 matchingPattern:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)URLsInDirectory:(id)arg1 matchingPattern:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)clearLogFilesInDirectory:(id)arg1 matchingPattern:(id)arg2 exceedNumber:(unsigned long long)arg3;
+ (void)removeLogFilesInDirectory:(id)arg1 matchingPattern:(id)arg2 beforeDays:(float)arg3;
+ (unsigned long long)macHostTimeFromBridgeHostTime:(unsigned long long)arg1;
+ (unsigned long long)sampleCountFromHostTime:(unsigned long long)arg1 anchorHostTime:(unsigned long long)arg2 anchorSampleCount:(unsigned long long)arg3;
+ (unsigned long long)hostTimeFromSampleCount:(unsigned long long)arg1 anchorHostTime:(unsigned long long)arg2 anchorSampleCount:(unsigned long long)arg3;
+ (double)getHostClockFrequency;
+ (double)hostTimeToTimeInterval:(unsigned long long)arg1;
+ (float)hostTimeToSeconds:(unsigned long long)arg1;
+ (unsigned long long)secondsToHostTime:(float)arg1;
+ (id)getSiriLanguageWithFallback:(id)arg1;
+ (void)apply12dBGain:(id)arg1;
+ (id)convertToShortLPCMBufFromFloatLPCMBuf:(id)arg1;
+ (id)convertToFloatLPCMBufFromShortLPCMBuf:(id)arg1;
+ (BOOL)isCurrentDeviceCompatibleWithVoiceProfileAt:(id)arg1;
+ (BOOL)isCurrentDeviceCompatibleWithNewerVoiceProfileAt:(id)arg1;
+ (unsigned long long)deviceCategoryForDeviceProductType:(id)arg1;
+ (id)deviceCategoryStringRepresentationForCategoryType:(unsigned long long)arg1;
+ (void)updateVoiceProfileVersionFileForLanguageCode:(id)arg1;
+ (BOOL)migrateVoiceProfileToVersion:(unsigned long long)arg1 forLanguageCode:(id)arg2;
+ (BOOL)checkIfMigrationNecessaryForCompatibilityVersion:(unsigned long long)arg1 forLanguageCode:(id)arg2;
+ (unsigned long long)getVoiceProfileProductCategoryFromVersionFilePath:(id)arg1;
+ (unsigned long long)getCurrentVoiceProfileProductCategoryForLanguageCode:(id)arg1;
+ (unsigned long long)getVoiceProfileVersionFromVersionFilePath:(id)arg1;
+ (unsigned long long)getCurrentVoiceProfileVersionForLanguageCode:(id)arg1;
+ (id)getProfileVersionFilePathForLanguageCode:(id)arg1;
+ (BOOL)isSpidAssetsAvailable;
+ (void)streamAudioFromFileUrl:(id)arg1 audioStreamBasicDescriptor:(struct AudioStreamBasicDescription)arg2 samplesPerStreamChunk:(unsigned long long)arg3 audioDataAvailableHandler:(CDUnknownBlockType)arg4;
+ (id)spidAudioTrainUtterancesDir;
+ (id)spIdSiriDebugVoiceProfileRootDirectoryForProfile:(id)arg1 locale:(id)arg2;
+ (id)spIdSiriDebugTrainedUsersFilePathForLocale:(id)arg1;
+ (id)spIdSiriDebugVoiceProfileStoreRootDirectoryForLocale:(id)arg1;
+ (id)spIdSiriDebugVoiceProfileStoreRootDirectory;
+ (id)spIdSiriDebugGradingDataRootDirectory;
+ (id)spIdSiriDebugVTDataDirectory;
+ (BOOL)spIdAudioLogsCountLimitReached;
+ (id)spIdAudioLogsGradingDir;
+ (id)spIdAudioLogsDir;
+ (void)createDirectoryIfDoesNotExist:(id)arg1;
+ (id)spIdVoiceProfileImportRootDir;
+ (id)spIdSATModelDirForLocale:(id)arg1 spidType:(unsigned long long)arg2;
+ (id)spIdSATModelDirForLocale:(id)arg1 profileId:(id)arg2 spidType:(unsigned long long)arg3;
+ (id)spIdSATAudioDirForLocale:(id)arg1 spidType:(unsigned long long)arg2;
+ (id)spIdSATAudioDirForLocale:(id)arg1 profileId:(id)arg2 spidType:(unsigned long long)arg3;
+ (id)spIdSATImplicitAudioCacheDirForLocale:(id)arg1 profileId:(id)arg2;
+ (id)spIdSATDirForLocale:(id)arg1 profileId:(id)arg2 spidType:(unsigned long long)arg3;
+ (id)spIdSATDirForLocale:(id)arg1 profileId:(id)arg2;
+ (id)spIdSATDirForLocale:(id)arg1;
+ (id)satConfigFileNameForCSSpIdType:(unsigned long long)arg1;
+ (id)stringForCSSATRunMode:(unsigned long long)arg1;
+ (unsigned long long)spIdTypeForString:(id)arg1;
+ (id)stringForCSSpIdType:(unsigned long long)arg1;
+ (id)stringForInvocationStyle:(unsigned long long)arg1;
+ (BOOL)_gibraltarHasBuiltInMic;
+ (BOOL)hasRemoteBuiltInMic;
+ (id)speexRecordSettings;
+ (id)opusRecordSettings;
+ (id)lpcmRecordSettings;
+ (id)jarvisVoiceTriggerRecordContext:(id)arg1;
+ (id)hearstVoiceTriggerRecordContext:(id)arg1;
+ (id)voiceTriggerRecordContext;
+ (struct AudioStreamBasicDescription)aiffFileASBD;
+ (struct AudioStreamBasicDescription)utteranceFileASBD;
+ (struct AudioStreamBasicDescription)lpcmNarrowBandASBD;
+ (struct AudioStreamBasicDescription)lpcmASBD;
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedWithRemoteVADASBD;
+ (struct AudioStreamBasicDescription)lpcmNonInterleavedASBD;
+ (struct AudioStreamBasicDescription)lpcmInterleavedWithRemoteVADASBD;
+ (struct AudioStreamBasicDescription)lpcmInterleavedASBD;
+ (struct AudioStreamBasicDescription)opusNarrowBandASBD;
+ (struct AudioStreamBasicDescription)opusASBD;
+ (struct AudioStreamBasicDescription)lpcmInt16NarrowBandASBD;
+ (struct AudioStreamBasicDescription)lpcmInt16ASBD;
+ (unsigned long long)macHostTimeFromBridgeHostTime:(unsigned long long)arg1;
+ (unsigned long long)sampleCountFromHostTime:(unsigned long long)arg1 anchorHostTime:(unsigned long long)arg2 anchorSampleCount:(unsigned long long)arg3;
+ (unsigned long long)hostTimeFromSampleCount:(unsigned long long)arg1 anchorHostTime:(unsigned long long)arg2 anchorSampleCount:(unsigned long long)arg3;
+ (double)getHostClockFrequency;
+ (double)hostTimeToTimeInterval:(unsigned long long)arg1;
+ (float)hostTimeToSeconds:(unsigned long long)arg1;
+ (unsigned long long)secondsToHostTime:(float)arg1;
+ (BOOL)readAudioChunksFrom:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)iterateBitset:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
+ (unsigned int)getNumElementInBitset:(unsigned long long)arg1;
+ (unsigned long long)macHostTimeFromBridgeHostTime:(unsigned long long)arg1;
+ (unsigned long long)sampleCountFromHostTime:(unsigned long long)arg1 anchorHostTime:(unsigned long long)arg2 anchorSampleCount:(unsigned long long)arg3;
+ (unsigned long long)hostTimeFromSampleCount:(unsigned long long)arg1 anchorHostTime:(unsigned long long)arg2 anchorSampleCount:(unsigned long long)arg3;
+ (double)getHostClockFrequency;
+ (double)hostTimeToTimeInterval:(unsigned long long)arg1;
+ (float)hostTimeToSeconds:(unsigned long long)arg1;
+ (unsigned long long)secondsToHostTime:(float)arg1;
+ (id)recordContextString:(id)arg1;
+ (BOOL)isRecordContextJarvisButtonPress:(id)arg1;
+ (BOOL)isRecordContextJarvisVoiceTrigger:(id)arg1;
+ (BOOL)isRecordContextRaiseToSpeak:(id)arg1;
+ (BOOL)isRecordContextHearstDoubleTap:(id)arg1;
+ (BOOL)isRecordContextHearstVoiceTrigger:(id)arg1;
+ (BOOL)isRecordContextSpeakerIdTrainingTrigger:(id)arg1;
+ (BOOL)isRecordContextAutoPrompt:(id)arg1;
+ (BOOL)isRecordContextHomeButtonPress:(id)arg1;
+ (BOOL)isRecordContextVoiceTrigger:(id)arg1;
+ (id)assetHashInResourcePath:(id)arg1;

@end

