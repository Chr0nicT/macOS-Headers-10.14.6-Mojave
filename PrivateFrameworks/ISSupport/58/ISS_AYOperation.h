//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <ISSupport/NSCopying-Protocol.h>

@class NSError, NSLock, NSMutableDictionary, NSThread;
@protocol AYGroup, AYNotificationDelegate;

@interface ISS_AYOperation : NSObject <NSCopying>
{
    id _asyncProxy;
    NSThread *_currentThread;
    NSThread *_baseThread;
    ISS_AYOperation *_parentOperation;
    ISS_AYOperation *_mainOperation;
    ISS_AYOperation *_currentChildOperation;
    id <AYGroup> _group;
    NSLock *_operationLock;
    NSError *_error;
    BOOL _operationEnded;
    BOOL _operationAborted;
    BOOL _silent;
    int _currentMark;
    void *_reserved;
    id _derivedResult;
    int _derivedHttpStatusCode;
    id <AYNotificationDelegate> _notificationDelegate;
    NSMutableDictionary *_privateInfos;
}

+ (void)_delayCurrentThreadForRecentlyAbortedOperations;
+ (void)waitForOperationsToEndWithDelegate:(id)arg1;
+ (void)abortAllOperations;
+ (void)endAllPendingOperationsOfGroup:(id)arg1 withError:(id)arg2;
+ (void)unblockAllOperationsForGroup:(id)arg1;
+ (BOOL)popOperation:(id)arg1;
+ (void)pushInvocation:(id)arg1;
+ (void)_launchOneThread;
+ (void)_workerThread;
+ (BOOL)_dispatchNextOperationInQueue;
+ (id)mainThread;
+ (void)unlockOperations;
+ (void)lockOperations;
+ (BOOL)_lockWaitingForOperation;
+ (void)_lockForAllThreads;
+ (void)_noLockForThread:(id)arg1;
+ (void)initialize;
+ (void)_initMainThread;
+ (void)_initCurrentThread;
- (int)_attemptNum;
- (void)setDerivedHttpStatusCode:(int)arg1;
- (int)derivedHttpStatusCode;
- (void)setDerivedResult:(id)arg1;
- (id)derivedResult;
- (void)removeInfoForKey:(id)arg1;
- (id)infoForKey:(id)arg1;
- (void)setInfo:(id)arg1 forKey:(id)arg2;
- (void)postOperation;
- (void)finalizeOperation;
- (id)error;
- (void)setError:(id)arg1;
- (BOOL)operationWasAborted;
- (void)operationHasAborted;
- (void)operationWillAbort;
- (BOOL)operationCanAbort;
- (long long)operationTotal;
- (long long)operationProgress;
- (id)notificationDelegate;
- (void)setNotificationDelegate:(id)arg1;
- (void)notifyWithName:(id)arg1 infos:(id)arg2;
- (void)handleNotificationOfChildOperation:(id)arg1 notification:(id)arg2;
- (BOOL)isSilent;
- (void)setSilent:(BOOL)arg1;
- (int)currentMark;
- (void)markWithTag:(int)arg1 notify:(BOOL)arg2;
- (void)markWithTag:(int)arg1;
- (void)endOperationWithError:(id)arg1;
- (void)runOperationWithTimeOut:(unsigned int)arg1;
- (BOOL)isRunLoopBased;
- (id)operationGroup;
- (void)setOperationGroup:(id)arg1;
- (void)resetOperation;
- (void)abortOperation;
- (BOOL)handleEventInThread:(id)arg1;
- (void)sendEventToThread:(id)arg1;
- (void)_sendEventToThreadLocked:(id)arg1;
- (void)_handleEventRecursively:(id)arg1;
- (void)unlockOperation;
- (void)lockOperation;
- (BOOL)isAsync;
- (id)baseThread;
- (id)operationThread;
- (id)mainOperation;
- (id)parentOperation;
- (id)_currentChildOperation;
- (void)_setCurrentChildOperation:(id)arg1;
- (id)syncFor:(id)arg1;
- (id)async;
- (void)finalize;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)_setCurrentThread:(id)arg1;

@end

