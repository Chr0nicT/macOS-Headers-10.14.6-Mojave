//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MCMontage, MRCameraCaptureSession, MRContext, MRLayerParallelizer, MRRendererInternal, NSDictionary, NSString;
@protocol MRAsynchronousOperationsDelegate, MREditingDelegate, MRFeatureDelegate, MRLiveSlideshowDelegate, MRRenderingDelegate, MZMediaManagement, OS_dispatch_queue;

@interface MRRenderer : NSObject
{
    MCMontage *mMontage;
    MRLayerParallelizer *mTopMRLayer;
    struct CGSize mSize;
    MRRendererInternal *mInternal;
    id <MREditingDelegate> mEditingDelegate;
    id <MRRenderingDelegate> mRenderingDelegate;
    id <MRFeatureDelegate> mFeatureDelegate;
    NSDictionary *mDescriptionsForRandomTransitionPresetIDs;
    BOOL _interactivityIsEnabled;
    BOOL _slideshowIsPaused;
    struct __CVDisplayLink *mDisplayLink;
    CDStruct_489f4f2f mDisplayLinkTimestamp;
    double _slideFocusModeBackgroundColor[4];
    double _lastRenderedTime;
    BOOL _needsToUpdateGeometry;
    BOOL _isFrozen;
    int _currentOSThermalPressureLevel;
    int _thermalNotificationToken;
    BOOL mIsEditing;
    BOOL mPushRendering;
    BOOL mRequestRenderingOnChanges;
    BOOL mDisplaysFPS;
    BOOL mDisplaysPlayingIDs;
    BOOL mDisplaysIsPreloadingImages;
    BOOL mDisplaysTouchVisualFeedback;
    BOOL mDisplaysHitZonesVisualFeedback;
    BOOL _ignoresBackgroundAudio;
    BOOL mIsCleanedUp;
    BOOL _asynchronousOperationsAreSuspended;
    BOOL _allowsThumbnails;
    BOOL _logRenderingTimes;
    int mMode;
    int mOrientation;
    float mVolume;
    id <MZMediaManagement> mAssetManagementDelegate;
    double mTimeQuantum;
    NSDictionary *mParameters;
    MRCameraCaptureSession *_cameraCaptureSession;
    double _fadeInStartTime;
    double _fadeInDuration;
    double _fadeOutStartTime;
    double _fadeOutDuration;
    NSString *_renderingLogFilePath;
    double _timestampOfLastRenderPass;
}

+ (BOOL)isDiskImageCacheEnabled;
+ (void)enableDiskImageCache;
+ (void)initialize;
+ (double)textScaleForResolution:(struct CGSize)arg1;
@property(nonatomic) double timestampOfLastRenderPass; // @synthesize timestampOfLastRenderPass=_timestampOfLastRenderPass;
@property(readonly) NSString *renderingLogFilePath; // @synthesize renderingLogFilePath=_renderingLogFilePath;
@property(nonatomic) BOOL logRenderingTimes; // @synthesize logRenderingTimes=_logRenderingTimes;
@property(nonatomic) double fadeOutDuration; // @synthesize fadeOutDuration=_fadeOutDuration;
@property(nonatomic) double fadeOutStartTime; // @synthesize fadeOutStartTime=_fadeOutStartTime;
@property(nonatomic) double fadeInDuration; // @synthesize fadeInDuration=_fadeInDuration;
@property(nonatomic) double fadeInStartTime; // @synthesize fadeInStartTime=_fadeInStartTime;
@property(nonatomic) BOOL allowsThumbnails; // @synthesize allowsThumbnails=_allowsThumbnails;
@property(retain, nonatomic) MRCameraCaptureSession *cameraCaptureSession; // @synthesize cameraCaptureSession=_cameraCaptureSession;
@property(nonatomic) BOOL interactivityIsEnabled; // @synthesize interactivityIsEnabled=_interactivityIsEnabled;
@property(setter=suspendAsynchronousOperations:) BOOL asynchronousOperationsAreSuspended; // @synthesize asynchronousOperationsAreSuspended=_asynchronousOperationsAreSuspended;
@property(readonly) BOOL isCleanedUp; // @synthesize isCleanedUp=mIsCleanedUp;
@property(readonly) NSDictionary *parameters; // @synthesize parameters=mParameters;
@property(nonatomic) double timeQuantum; // @synthesize timeQuantum=mTimeQuantum;
@property(nonatomic) BOOL ignoresBackgroundAudio; // @synthesize ignoresBackgroundAudio=_ignoresBackgroundAudio;
@property(nonatomic) float volume; // @synthesize volume=mVolume;
@property(retain) id <MREditingDelegate> editingDelegate; // @synthesize editingDelegate=mEditingDelegate;
@property(retain) id <MRRenderingDelegate> renderingDelegate; // @synthesize renderingDelegate=mRenderingDelegate;
@property(retain) id <MRFeatureDelegate> featureDelegate; // @synthesize featureDelegate=mFeatureDelegate;
@property(retain, nonatomic) id <MZMediaManagement> assetManagementDelegate; // @synthesize assetManagementDelegate=mAssetManagementDelegate;
@property(nonatomic) BOOL displaysHitZonesVisualFeedback; // @synthesize displaysHitZonesVisualFeedback=mDisplaysHitZonesVisualFeedback;
@property(nonatomic) BOOL displaysTouchVisualFeedback; // @synthesize displaysTouchVisualFeedback=mDisplaysTouchVisualFeedback;
@property(nonatomic) BOOL displaysIsPreloadingImages; // @synthesize displaysIsPreloadingImages=mDisplaysIsPreloadingImages;
@property(nonatomic) BOOL displaysPlayingIDs; // @synthesize displaysPlayingIDs=mDisplaysPlayingIDs;
@property(nonatomic) BOOL displaysFPS; // @synthesize displaysFPS=mDisplaysFPS;
@property(nonatomic) BOOL requestRenderingOnChanges; // @synthesize requestRenderingOnChanges=mRequestRenderingOnChanges;
@property(nonatomic) BOOL pushRendering; // @synthesize pushRendering=mPushRendering;
@property(nonatomic) BOOL isEditing; // @synthesize isEditing=mIsEditing;
@property(nonatomic) int mode; // @synthesize mode=mMode;
@property(nonatomic) struct CGSize size; // @synthesize size=mSize;
@property(retain, nonatomic) MCMontage *montage; // @synthesize montage=mMontage;
- (void)applyStateForMontageSwap:(id)arg1;
- (void)swapMontage:(id)arg1;
- (id)currentStateForMontageSwap;
- (id)currentlyShowingAssetPaths;
- (void)setSlideFocusModeBackgroundColor:(struct CGColor *)arg1;
@property(readonly) NSString *currentFocusedSlideAsset;
- (void)_playbackIsOverWithTime:(double)arg1 sendNotification:(BOOL)arg2;
- (void)_r_endMorphing;
- (void)_r_beginMorphingToAspectRatio:(double)arg1 andOrientation:(int)arg2 withDuration:(double)arg3;
- (void)endMorphing;
- (void)beginMorphingToAspectRatio:(double)arg1 andOrientation:(int)arg2 withDuration:(double)arg3;
- (void)addIDToDisplay:(id)arg1:(id)arg2;
- (void)imagePreloadingEnded;
- (void)imagePreloadingBegan;
- (void)stall;
- (void)effect:(id)arg1 requestedNumberOfSlides:(unsigned long long)arg2 firstSlideIndexStillNeeded:(unsigned long long)arg3;
- (void)nearingEndForSerializer:(id)arg1;
- (void)dumpActiveHierarchy;
- (id)snapshotOfStates:(id)arg1 atSize:(struct CGSize)arg2;
- (void)gotoState:(id)arg1;
- (id)currentState;
- (id)plugForCurrentSublayerInNavigatorForPlug:(id)arg1;
- (id)_layerForPlugObjectID:(id)arg1;
- (void)transitionToPreviousPlugInContainerOfPlug:(id)arg1;
- (void)transitionToNextPlugInContainerOfPlug:(id)arg1;
@property(readonly) BOOL isOffscreen;
@property(nonatomic) unsigned char currentLayoutIndex;
- (struct CGPoint)_fixPointForUnprojectionForOrientation:(struct CGPoint)arg1;
- (struct CGPoint)_fixProjectedPointForOrientation:(struct CGPoint)arg1;
- (void)disableFadeInAndOut;
- (void)resetFadeInAndOut;
@property(nonatomic) int orientation; // @synthesize orientation=mOrientation;
@property(nonatomic) struct CGPoint contextOffset;
- (void)setTemporarySize:(struct CGSize)arg1;
- (double)_unalteredTime;
- (void)_r_setTime:(double)arg1 isResyncing:(BOOL)arg2;
- (void)_r_syncTimeToOuter;
- (double)_time;
@property(nonatomic) double time;
- (void)setUsesExternalDisplayLink:(BOOL)arg1;
- (void)moveNavigatorFromForthToBackHistory:(id)arg1;
- (void)moveNavigatorFromBackToForthHistory:(id)arg1;
- (void)removeNavigatorFromForthHistory:(id)arg1;
- (void)removeNavigatorFromBackHistory:(id)arg1;
- (void)addNavigatorToForthHistory:(id)arg1;
- (void)addNavigatorToBackHistory:(id)arg1;
- (BOOL)canGoForth;
- (BOOL)canGoBack;
- (void)goForth;
- (void)goBack;
- (void)stepBackward;
- (void)stepForward;
- (void)unfreeze;
- (void)freeze;
- (void)_r_doSnapshot;
- (void)_r_renderForScreenBurnTestAtTime:(double)arg1;
- (void)_r_renderRotation;
- (void)_r_renderWithPassParameters:(id)arg1;
- (void)_r_render;
- (void)render;
- (BOOL)_r_prerenderWithPassParameters:(id)arg1;
- (BOOL)prerenderWithPassParameters:(id)arg1;
- (void)_r_stopRenderTimer;
- (void)_r_startRenderTimer;
- (void)_renderOnDisplayLink:(struct __CVDisplayLink *)arg1 withTimeStamp:(const CDStruct_489f4f2f *)arg2;
- (void)updateTimeWithDisplayLinkTimestamp:(const CDStruct_489f4f2f *)arg1;
- (void)_r_updateTimeWithDisplayLinkTimestamp:(const CDStruct_489f4f2f *)arg1;
- (void)warmupVideo:(BOOL)arg1;
- (void)warmupAudio:(BOOL)arg1;
- (BOOL)requestRenderingWithin:(double)arg1;
- (void)requestRendering:(BOOL)arg1;
- (void)pauseWhenStill;
- (void)_r_resume;
- (void)_r_pause;
- (void)_r_syncIsPlayingToOuter;
- (void)resume;
- (void)pause;
@property(readonly) BOOL isPlaying;
@property BOOL slaveFrameMode;
@property(readonly) NSObject<OS_dispatch_queue> *renderDispatchQueue;
- (void)setCGLContext:(struct _CGLContextObject *)arg1 andCGLPixelFormat:(struct _CGLPixelFormatObject *)arg2;
- (void)setOpenGLContext:(id)arg1 andPixelFormat:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)cleanup;
- (void)dealloc;
- (id)init;
- (id)initWithParameters:(id)arg1;
- (void)_displayHitZonesVisualFeedback;
- (void)_displayTouchVisualFeedback;
- (void)_displayIsPreloadingImages;
- (void)_displayPlayingIDs;
- (void)_displayFPS:(double)arg1 actuallyDisplay:(BOOL)arg2;
- (id)slideInfosForCurrentElements;
- (id)slideInfoForCurrentElement:(id)arg1;
- (double)animateCurrentFocuserToSlideFocusModeWithDuration:(double)arg1;
- (double)exitSlideZoomMode:(BOOL)arg1;
- (double)enterSlideZoomMode;
- (double)exitSlideFocusMode;
- (double)enterSlideFocusModeWithState:(id)arg1 animate:(BOOL)arg2;
- (void)_createSlideFocusLayer;
- (void)setUseCGLFlushDrawableWorkaround:(BOOL)arg1;
@property BOOL hideTextWhileEditing;
@property BOOL screenBurnTest;
@property(retain) id <MRAsynchronousOperationsDelegate> asynchronousOperationsDelegate;
@property(retain) id <MRLiveSlideshowDelegate> liveSlideshowDelegate;
- (void)setMasterStartTime:(double)arg1 andDuration:(double)arg2 mode:(int)arg3;
- (void)setMasterStartTime:(double)arg1 andDuration:(double)arg2 loop:(BOOL)arg3;
- (struct CGImage *)currentFrameAsCGImage;
- (struct CGImage *)snapshotAsCGImageForTime:(double)arg1 andSize:(struct CGSize)arg2;
- (id)layerAtPath:(id)arg1 fromLayer:(id)arg2;
- (void)undimAllLayers;
- (void)dimLayersExceptForPathTo:(id)arg1;
- (void)_undimAllLayersInLayer:(id)arg1;
- (void)_dimLayersExceptForPathTo:(id)arg1;
- (id)selectedLayers;
- (void)deselectAllLayers;
- (void)deselectLayer:(id)arg1;
- (void)selectLayer:(id)arg1;
- (void)_updateSelectionLayer;
@property(readonly) BOOL isFlipped;
- (void)setFreezeSizeOfImageRequests:(BOOL)arg1;
@property double masterClock;
@property(readonly) MRContext *context;
- (void)sendNotification:(id)arg1;
- (id)chooseTransitionIDForRandomTransitionPresetID:(id)arg1;
- (void)_stopMonitoringThermalPressureLevelChanges;
- (void)_startMonitoringThermalPressureLevelChanges;
- (void)_adaptToPressureLevel:(int)arg1;
- (void)removeAudioObject:(id)arg1;
- (void)addAudioObject:(id)arg1;
- (void)processAudioObjects;
- (id)actionByEvaluatingConditionalAction:(id)arg1 withStates:(id)arg2;
- (void)sendMCAction:(id)arg1 fromSender:(id)arg2 toTarget:(id)arg3;
- (void)sendMCAction:(id)arg1 fromSender:(id)arg2;
- (void)doAction:(id)arg1;
- (BOOL)_doActions;
- (double)_doAction:(id)arg1;
- (double)slideZoomCancel:(id)arg1;
- (double)slideZoomEnd:(id)arg1;
- (double)slideZoomUpdate:(id)arg1;
- (double)slideZoomStart:(id)arg1;
- (double)focusedTransitionCancel:(id)arg1;
- (double)focusedTransitionEnd:(id)arg1;
- (double)focusedTransitionUpdate:(id)arg1;
- (double)focusedTransitionStart:(id)arg1;
- (double)slideshowTransitionCancel:(id)arg1;
- (double)slideshowTransitionEnd:(id)arg1;
- (double)slideshowTransitionUpdate:(id)arg1;
- (double)slideshowTransitionStart:(id)arg1;
- (void)didGoToPreviousOrNextFocusedSlide:(BOOL)arg1 withAction:(id)arg2;
- (void)willGoToPreviousOrNextFocusedSlide:(BOOL)arg1 withAction:(id)arg2 animate:(BOOL)arg3;
- (id)layerHitAtPoint:(struct CGPoint)arg1 onlyIfHitElement:(BOOL)arg2 localPoint:(struct CGPoint *)arg3;
- (void)_findAndHandleBestRecognizerInRecognizers:(id)arg1;
- (void)touchesCancelled:(id)arg1;
- (void)touchesEnded:(id)arg1;
- (void)touchesMoved:(id)arg1;
- (void)touchesBegan:(id)arg1;
@property(copy, nonatomic) NSString *transitionLayerPlugObjectID;
- (id)defaultActionsWithHitLayer:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)gotoPreviousFocusedSlide:(BOOL)arg1;
- (void)gotoNextFocusedSlide:(BOOL)arg1;
- (void)gotoPreviousInterestingTime:(BOOL)arg1;
- (void)gotoNextInterestingTime:(BOOL)arg1;
- (void)jumpToPreviousMarker;
- (void)jumpToNextMarker;
- (void)setSlideshowTime:(double)arg1;
@property(readonly) double currentSlideshowTime;
- (void)pauseSlideshow;
- (void)resumeSlideshow;
@property(readonly) BOOL slideshowIsPlaying;
- (double)defaultPauseResumeOnTap:(BOOL)arg1;
- (void)_doLayerTrackingAtLocation:(struct CGPoint)arg1;
- (id)_computeMatrixChainForLayer:(id)arg1;
- (void)_cleanupGestureRecognizers;
- (void)endTextEditing:(BOOL)arg1;
- (BOOL)beginTextEditingOfElement:(id)arg1 inPlug:(id)arg2 callDelegate:(BOOL)arg3;
- (BOOL)beginTextEditingOfElement:(id)arg1 inLayer:(id)arg2 callDelegate:(BOOL)arg3;
- (long long)_maxLinesForCurrentEditingTextElement;
- (struct CGSize)_maxSizeForCurrentEditingTextElement;
- (BOOL)getVerticesCoordinatesForCurrentlyEditedTextElement:(struct CGPoint (*)[4])arg1;

@end

