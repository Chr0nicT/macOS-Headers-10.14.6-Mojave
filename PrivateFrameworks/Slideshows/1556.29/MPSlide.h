//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Slideshows/MPAnimationSupport-Protocol.h>
#import <Slideshows/MPFilterSupport-Protocol.h>
#import <Slideshows/NSCoding-Protocol.h>
#import <Slideshows/NSCopying-Protocol.h>

@class MCSlide, MPFrame, MPLayerGroup, NSMutableArray, NSMutableDictionary, NSString;
@protocol MPEffectSupport;

@interface MPSlide : NSObject <NSCoding, NSCopying, MPFilterSupport, MPAnimationSupport>
{
    MPFrame *_frame;
    NSMutableDictionary *_attributes;
    NSString *_path;
    MPLayerGroup *_layerGroup;
    NSMutableArray *_filters;
    NSMutableDictionary *_animationPaths;
    MCSlide *_slide;
    NSObject<MPEffectSupport> *_parent;
    double _startTime;
    double _duration;
    double _audioFadeInDuration;
    double _audioFadeOutDuration;
    double _audioDuckInDuration;
    double _audioDuckOutDuration;
    double _audioDuckLevel;
    double _scale;
    double _rotation;
    struct CGPoint _center;
    double _audioVolume;
    NSString *_sizingMode;
    unsigned long long _mediaType;
    BOOL _isSecondary;
    BOOL _mirrorToDuplicatePaths;
    double _cachedShowTime;
    double _cachedShowDuration;
    struct CGSize _cachedSize;
}

+ (id)slideWithPath:(id)arg1;
+ (id)slide;
- (double)originalAspectRatio;
- (BOOL)needsTimingUpdateOnSlideChange;
- (BOOL)needsStyleUpdateOnSlideChange;
- (BOOL)hasMovie;
- (void)setUserInfoAttribute:(id)arg1 forKey:(id)arg2;
- (id)userInfoAttributeForKey:(id)arg1;
- (BOOL)isSecondary;
@property(nonatomic) double rotation;
@property(nonatomic) double scale;
@property(nonatomic) struct CGPoint center;
- (id)parentSubtitleEffect;
- (id)parent;
- (id)parentEffect;
- (double)aspectRatio;
- (long long)liveIndex;
- (long long)index;
@property(copy, nonatomic) NSString *sizingMode;
@property(nonatomic) double audioDuckLevel;
@property(nonatomic) double audioDuckOutDuration;
@property(nonatomic) double audioDuckInDuration;
@property(nonatomic) double audioFadeOutDuration;
@property(nonatomic) double audioFadeInDuration;
@property(nonatomic) double audioVolume;
@property(nonatomic) double duration;
@property(nonatomic) double startTime;
- (double)showDisplayStartTime;
- (double)showDisplayTime;
- (double)showDuration;
- (double)showTime;
- (void)removeAnimationPathForKey:(id)arg1;
- (void)setAnimationPath:(id)arg1 forKey:(id)arg2;
- (void)setKeyframedAnimationPath:(id)arg1 forKey:(id)arg2;
- (id)keyframedAnimationPathForKey:(id)arg1;
- (BOOL)hasAnimationPathForKey:(id)arg1;
- (id)animationPathForKey:(id)arg1;
- (id)animationPaths;
- (void)moveFiltersFromIndices:(id)arg1 toIndex:(long long)arg2;
- (void)removeAllFilters;
- (void)removeFiltersAtIndices:(id)arg1;
- (void)insertFilters:(id)arg1 atIndex:(long long)arg2;
- (void)addFilters:(id)arg1;
- (void)addFilter:(id)arg1;
- (id)filters;
@property(retain, nonatomic) MPLayerGroup *layerGroup;
@property(copy, nonatomic) NSString *absolutePath;
@property(copy, nonatomic) NSString *path;
@property(retain, nonatomic) MPFrame *frame;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLayerGroup:(id)arg1;
- (id)initWithPath:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (BOOL)canZoom;
- (double)maxDuration;
- (void)setMediaType:(unsigned long long)arg1;
- (id)fullDebugLog;
- (void)dump;
- (id)slide;
- (BOOL)isPanoramaInDocument:(id)arg1;
- (void)setParent:(id)arg1;
- (void)duplicateAnimationPaths;
- (void)setSlide:(id)arg1;
- (BOOL)determineShowTime:(double *)arg1 showDuration:(double *)arg2;
- (id)nearestLayer;
- (id)parentDocument;
- (void)cleanup;
- (void)copyAnimationPaths:(id)arg1;
- (void)copyFilters:(id)arg1;
- (void)copyLayerGroup:(id)arg1;
- (void)copyFrame:(id)arg1;
- (void)copyVars:(id)arg1;
- (void)setIsSecondary:(BOOL)arg1;
- (void)setMirrorToDuplicatePaths:(BOOL)arg1;
- (void)resetCachedTimes;
- (id)action;
- (id)objectSpecifier;
- (void)setScriptingFrame:(id)arg1;
- (id)scriptingFrame;
- (void)setScriptingAnimations:(id)arg1;
- (id)scriptingAnimations;
- (void)replaceObjectInFilterAtIndex:(long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromFilterAtIndex:(long long)arg1;
- (void)insertObject:(id)arg1 inFilterAtIndex:(long long)arg2;
- (id)objectInFilterAtIndex:(long long)arg1;
- (long long)countOfFilter;

@end

