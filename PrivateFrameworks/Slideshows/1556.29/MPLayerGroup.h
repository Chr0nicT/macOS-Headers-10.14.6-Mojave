//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Slideshows/MPActionSupport-Protocol.h>
#import <Slideshows/MPActionableSupport-Protocol.h>
#import <Slideshows/MPActionableSupportInternal-Protocol.h>
#import <Slideshows/MPAnimationSupport-Protocol.h>
#import <Slideshows/MPAudioSupport-Protocol.h>
#import <Slideshows/MPAutomaticLayerSupport-Protocol.h>
#import <Slideshows/MPGeometrySupport-Protocol.h>
#import <Slideshows/MPLayerableSupport-Protocol.h>
#import <Slideshows/MPLayerableSupportInternal-Protocol.h>
#import <Slideshows/MPManualLayerSupport-Protocol.h>
#import <Slideshows/MPNavigatorSupport-Protocol.h>
#import <Slideshows/MPNavigatorSupportInternal-Protocol.h>
#import <Slideshows/MPTimingSupport-Protocol.h>
#import <Slideshows/NSCoding-Protocol.h>
#import <Slideshows/NSCopying-Protocol.h>

@class MCContainerParallelizer, MCPlugParallel, MPAudioPlaylist, MPLayerGroupInternal, NSArray, NSColor, NSDictionary, NSMutableArray, NSMutableDictionary, NSString;

@interface MPLayerGroup : NSObject <MPActionableSupportInternal, MPNavigatorSupportInternal, MPLayerableSupportInternal, NSCoding, NSCopying, MPAnimationSupport, MPActionableSupport, MPAudioSupport, MPLayerableSupport, MPNavigatorSupport, MPGeometrySupport, MPTimingSupport, MPActionSupport, MPAutomaticLayerSupport, MPManualLayerSupport>
{
    MPLayerGroupInternal *_internal;
    NSMutableArray *_userProvidedVideoPaths;
    NSMutableArray *_userProvidedAudioPaths;
    MCPlugParallel *_plug;
    MCContainerParallelizer *_parallelizer;
    MPAudioPlaylist *_audioPlaylist;
    NSMutableArray *_layers;
    NSMutableDictionary *_layerDictionary;
    id _parent;
    NSMutableDictionary *_authoringOptions;
    NSMutableDictionary *_animationPaths;
    NSMutableDictionary *_actions;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)removeActionForKey:(id)arg1;
- (void)setAction:(id)arg1 forKey:(id)arg2;
- (id)actionForKey:(id)arg1;
- (id)actions;
- (void)setZIndex:(long long)arg1;
- (long long)zIndex;
- (void)setScale:(double)arg1;
- (double)scale;
- (void)setYRotationAngle:(double)arg1;
- (double)yRotationAngle;
- (void)setXRotationAngle:(double)arg1;
- (double)xRotationAngle;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)size;
- (void)setRotationAngle:(double)arg1;
- (double)rotationAngle;
- (void)setZPosition:(double)arg1;
- (double)zPosition;
- (void)setPosition:(struct CGPoint)arg1;
- (struct CGPoint)position;
- (void)setOpacity:(double)arg1;
- (double)opacity;
- (void)removeAnimationPathForKey:(id)arg1;
- (void)setAnimationPath:(id)arg1 forKey:(id)arg2;
- (id)animationPathForKey:(id)arg1;
- (id)animationPaths;
- (void)removeLayerForKey:(id)arg1;
- (void)setLayer:(id)arg1 forKey:(id)arg2;
- (id)layerForKey:(id)arg1;
- (id)keyedLayers;
- (id)layerKey;
@property(nonatomic) BOOL autoAdjustDuration; // @dynamic autoAdjustDuration;
- (void)setPhaseOutDuration:(double)arg1;
- (double)phaseOutDuration;
- (void)setPhaseInDuration:(double)arg1;
- (double)phaseInDuration;
- (void)setNumberOfLoops:(double)arg1;
- (double)numberOfLoops;
- (id)mainLayers;
- (void)removeAllAudioPaths;
- (void)removeAllVideoPaths;
@property(copy, nonatomic) NSArray *audioPaths; // @dynamic audioPaths;
@property(copy, nonatomic) NSArray *videoPaths; // @dynamic videoPaths;
- (id)orderedVideoPaths;
- (void)removePaths:(id)arg1;
- (void)removePath:(id)arg1;
- (void)addAudioPaths:(id)arg1;
- (void)addAudioPath:(id)arg1;
- (void)addVideoPaths:(id)arg1;
- (void)addVideoPath:(id)arg1;
@property(nonatomic) NSDictionary *initialState;
@property(readonly, nonatomic) NSString *uuid;
@property(nonatomic) struct CGColor *backgroundCGColor; // @dynamic backgroundCGColor;
- (void)setBackgroundColorString:(id)arg1;
@property(copy, nonatomic) NSColor *backgroundColor; // @dynamic backgroundColor;
@property(nonatomic) unsigned long long loopingMode; // @dynamic loopingMode;
- (void)setAudioPlaylist:(id)arg1;
- (id)audioPlaylist;
- (id)parent;
- (void)setStartsPaused:(BOOL)arg1;
- (BOOL)startsPaused;
- (void)setIsTriggered:(BOOL)arg1;
- (BOOL)isTriggered;
- (void)setTimeIn:(double)arg1;
- (double)timeIn;
- (void)setDuration:(double)arg1;
- (double)duration;
- (double)videoDuration;
- (void)moveLayersFromIndices:(id)arg1 toIndex:(long long)arg2;
- (void)removeLayersAtIndices:(id)arg1;
- (void)removeAllLayers;
- (void)insertLayers:(id)arg1 atIndex:(long long)arg2;
- (void)addLayers:(id)arg1;
- (void)addLayer:(id)arg1;
- (id)layers;
- (void)setAuthoringOptions:(id)arg1;
- (id)authoringOptionForKey:(id)arg1;
- (void)setAuthoringOption:(id)arg1 forKey:(id)arg2;
- (id)authoringOptions;
- (unsigned long long)setStyleID:(id)arg1;
- (id)styleID;
- (id)navigatorKey;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)parentDocument;
- (id)absoluteVideoPaths;
- (double)posterTime;
- (id)allSongs;
- (id)allSlides:(BOOL)arg1;
- (id)allEffects;
- (id)allEffectContainers;
- (id)plug;
- (BOOL)detectFacesInBackground;
- (id)layerKeyDictionary;
- (id)actionableObjectForID:(id)arg1;
- (void)setIsDocumentLayerGroup:(BOOL)arg1;
- (long long)lastSlideUsed;
- (void)setLastSlideUsed:(long long)arg1;
- (void)setUsedAllPaths:(BOOL)arg1;
- (double)aspectRatioDidChange:(double)arg1 atTime:(double)arg2;
- (BOOL)nearingEndWithOptions:(id)arg1;
- (id)liveLock;
- (void)setAuthoredVersionInfo:(id)arg1;
- (id)authoredVersionInfo;
- (void)copyActions:(id)arg1;
- (void)copyAnimationPaths:(id)arg1;
- (void)copyAudioPlaylist:(id)arg1;
- (void)copyLayerDictionary:(id)arg1;
- (void)copyLayers:(id)arg1;
- (void)copyStruct:(id)arg1;
- (void)reconfigureLoopingMode;
- (void)reconnectAll;
- (void)setDurationPadding:(double)arg1;
- (double)durationPadding;
- (void)resetDuration;
- (void)cleanup;
- (void)setPlug:(id)arg1;
- (void)setContainer:(id)arg1;
- (id)container;
- (void)configureActions;
- (void)setParent:(id)arg1;
- (id)observer;
- (void)cachePaths;
- (BOOL)layersCanPositionZIndex;
- (id)objectID;
- (id)plugID;
- (void)replaceObjectInLayersAtIndex:(long long)arg1 withObject:(id)arg2;
- (void)removeObjectFromLayersAtIndex:(long long)arg1;
- (void)insertObject:(id)arg1 inLayersAtIndex:(long long)arg2;
- (id)valueInLayersWithName:(id)arg1;
- (id)objectInLayersAtIndex:(long long)arg1;
- (long long)countOfLayers;

@end

