//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface DMAPFS : NSObject
{
    id _instPriv;
}

- (int)isNoBrowseRoleVolume:(struct __DADisk *)arg1 shouldNotBrowse:(char *)arg2;
- (int)isInstallerVolume:(struct __DADisk *)arg1 installerRole:(char *)arg2;
- (int)isVMVolume:(struct __DADisk *)arg1 vmRole:(char *)arg2;
- (int)isRecoveryVolume:(struct __DADisk *)arg1 recoveryRole:(char *)arg2;
- (int)isSystemVolume:(struct __DADisk *)arg1 systemRole:(char *)arg2;
- (int)isUserVolume:(struct __DADisk *)arg1 userRole:(char *)arg2;
- (int)isPrebootVolume:(struct __DADisk *)arg1 prebootRole:(char *)arg2;
- (int)capacityQuotaForVolume:(struct __DADisk *)arg1 quotaOrNull:(id *)arg2;
- (int)capacityReserveForVolume:(struct __DADisk *)arg1 reserveOrNull:(id *)arg2;
- (int)rawCapacityInUseForVolume:(struct __DADisk *)arg1 used:(id *)arg2;
- (int)capacityInUseForVolume:(struct __DADisk *)arg1 used:(id *)arg2;
- (int)isFusionContainer:(struct __DADisk *)arg1 fusion:(char *)arg2;
- (int)capacityResizeMinimumForContainer:(struct __DADisk *)arg1 minimum:(id *)arg2 dpsMinimum:(id *)arg3 designatedPhysicalStore:(struct __DADisk **)arg4;
- (int)capacityFreeForContainer:(struct __DADisk *)arg1 free:(id *)arg2;
- (int)capacityCeilingForContainer:(struct __DADisk *)arg1 size:(id *)arg2;
- (int)volumeForVolumeUUID:(id)arg1 volume:(struct __DADisk **)arg2;
- (int)volumeUUIDForVolume:(struct __DADisk *)arg1 UUID:(id *)arg2;
- (int)physicalStoreForPhysicalStoreUUID:(id)arg1 physicalStore:(struct __DADisk **)arg2;
- (int)physicalStoreUUIDForPhysicalStore:(struct __DADisk *)arg1 UUID:(id *)arg2;
- (int)containerForContainerUUID:(id)arg1 container:(struct __DADisk **)arg2;
- (int)containerUUIDForContainer:(struct __DADisk *)arg1 UUID:(id *)arg2;
- (int)snapshotForMountPoint:(id)arg1 id:(id *)arg2 name:(id *)arg3 volume:(struct __DADisk **)arg4 container:(struct __DADisk **)arg5;
- (int)containerForVolume:(struct __DADisk *)arg1 container:(struct __DADisk **)arg2;
- (int)containerForPhysicalStore:(struct __DADisk *)arg1 container:(struct __DADisk **)arg2;
- (int)mountPointForSnapshot:(id)arg1 forVolume:(struct __DADisk *)arg2 mountPoint:(id *)arg3;
- (int)nameForSnapshot:(id)arg1 forVolume:(struct __DADisk *)arg2 name:(id *)arg3;
- (int)snapshotForName:(id)arg1 forVolume:(struct __DADisk *)arg2 snapshotXID:(id *)arg3;
- (int)snapshotsForVolume:(struct __DADisk *)arg1 snapshots:(id *)arg2;
- (int)snapshotsForVolumeOnly:(struct __DADisk *)arg1 snapshots:(id *)arg2;
- (int)containerSchemeDiskForContainer:(struct __DADisk *)arg1 schemeDisk:(struct __DADisk **)arg2;
- (int)volumesForContainer:(struct __DADisk *)arg1 volumes:(id *)arg2;
- (int)designatedPhysicalStoreForContainer:(struct __DADisk *)arg1 designatedPhysicalStore:(struct __DADisk **)arg2;
- (int)physicalStoresForContainer:(struct __DADisk *)arg1 physicalStores:(id *)arg2;
- (int)containers:(id *)arg1;
- (int)prebootInfoForLockedOrUnlockedVolume:(struct __DADisk *)arg1 user:(id)arg2 info:(id *)arg3 options:(id)arg4;
- (int)macOSUserForCryptoUserForVolume:(struct __DADisk *)arg1 cryptoUser:(id)arg2 macOSUserGUID:(id *)arg3 options:(id)arg4;
- (int)cryptoUserForMacOSUserForVolume:(struct __DADisk *)arg1 macOSUser:(id)arg2 apfsCryptoUser:(id *)arg3 options:(id)arg4;
- (int)dataRecordForVolume:(struct __DADisk *)arg1 user:(id)arg2 data:(id *)arg3 options:(id)arg4;
- (int)cryptoMigrationTimeForVolume:(struct __DADisk *)arg1 timeRemaining:(double *)arg2;
- (int)cryptoMigrationProgressForVolume:(struct __DADisk *)arg1 percentComplete:(id *)arg2;
- (int)cryptoMigrationStateForVolume:(struct __DADisk *)arg1 type:(unsigned char *)arg2 state:(unsigned char *)arg3 pausedState:(unsigned char *)arg4;
- (int)isCryptoMigratingForVolume:(struct __DADisk *)arg1 migrating:(char *)arg2 encrypting:(char *)arg3;
- (int)stateForLockedVolume:(struct __DADisk *)arg1 user:(id)arg2 rateLimitBackoff:(char *)arg3 backoffTime:(double *)arg4 rateLimitLockout:(char *)arg5;
- (int)isEncryptedVolumeLocked:(struct __DADisk *)arg1 locked:(char *)arg2;
- (int)isEncryptedVolume:(struct __DADisk *)arg1 encrypted:(char *)arg2;
- (int)isFileVaultEnabled:(struct __DADisk *)arg1 enabled:(char *)arg2;
- (int)cryptoUserPassdataHintForVolume:(struct __DADisk *)arg1 user:(id)arg2 hintMessage:(id *)arg3;
- (int)verifyCryptoUserPassdataForVolume:(struct __DADisk *)arg1 user:(id)arg2 passdata:(id)arg3 success:(char *)arg4;
- (int)cryptoUserTypeForVolume:(struct __DADisk *)arg1 user:(id)arg2 type:(unsigned char *)arg3;
- (int)cryptoUsersForVolume:(struct __DADisk *)arg1 users:(id *)arg2;
- (int)hasCryptoUserForVolume:(struct __DADisk *)arg1 user:(id)arg2 hasUser:(char *)arg3;
- (int)credentialRequirementsForVolume:(struct __DADisk *)arg1 details:(id *)arg2;
- (int)updatePrebootForVolume:(struct __DADisk *)arg1 options:(id)arg2;
- (int)updatePrebootForVolumeFire:(struct __DADisk *)arg1 completion:(CDUnknownBlockType)arg2 options:(id)arg3;
- (int)startMigrationToDecryptedVolume:(struct __DADisk *)arg1 options:(id)arg2;
- (int)startMigrationToEncryptedVolume:(struct __DADisk *)arg1 user:(id)arg2 passdata:(id)arg3 newUserRecords:(id)arg4 options:(id)arg5;
- (int)setDataRecordForVolume:(struct __DADisk *)arg1 user:(id)arg2 data:(id)arg3 options:(id)arg4;
- (int)setCryptoUserPassdataHintForVolume:(struct __DADisk *)arg1 user:(id)arg2 hintMessage:(id)arg3 options:(id)arg4;
- (int)resetCryptoUserPassdataForVolume:(struct __DADisk *)arg1 recoveryUser:(id)arg2 recoveryUserPassdata:(id)arg3 userToReset:(id)arg4 userNewPassdata:(id)arg5 options:(id)arg6;
- (int)changeCryptoUserPassdataForVolume:(struct __DADisk *)arg1 user:(id)arg2 oldPassdata:(id)arg3 newPassdata:(id)arg4 options:(id)arg5;
- (int)deleteCryptoUserFromVolume:(struct __DADisk *)arg1 user:(id)arg2 options:(id)arg3;
- (int)addCryptoUsersToVolume:(struct __DADisk *)arg1 user:(id)arg2 passdata:(id)arg3 newUserRecords:(id)arg4 options:(id)arg5;
- (int)unlockEncryptedVolume:(struct __DADisk *)arg1 diskUser:(BOOL)arg2 anyUser:(BOOL)arg3 user:(id)arg4 passphrase:(const char *)arg5 passdata:(id)arg6 options:(id)arg7;
- (int)unlockEncryptedVolume:(struct __DADisk *)arg1 diskUser:(BOOL)arg2 anyUser:(BOOL)arg3 user:(id)arg4 passphrase:(const char *)arg5 passdata:(id)arg6 options:(id)arg7 details:(id *)arg8;
- (int)isDefragmentationEnabledForVolume:(struct __DADisk *)arg1 enabled:(char *)arg2;
- (int)isDefragmentationEnabledForContainer:(struct __DADisk *)arg1 enabled:(char *)arg2;
- (int)setDefragmentationForVolume:(struct __DADisk *)arg1 enable:(BOOL)arg2 options:(id)arg3;
- (int)immediatelyDefragmentContainer:(struct __DADisk *)arg1 options:(id)arg2;
- (int)setDefragmentationForContainer:(struct __DADisk *)arg1 enable:(BOOL)arg2 options:(id)arg3;
- (int)deleteSnapshotForVolume:(struct __DADisk *)arg1 xid:(id)arg2 options:(id)arg3;
- (int)setRoleForVolume:(struct __DADisk *)arg1 options:(id)arg2;
- (int)eraseVolume:(struct __DADisk *)arg1 newFilesystem:(id)arg2 newName:(id)arg3 options:(id)arg4;
- (int)deleteVolume:(struct __DADisk *)arg1 options:(id)arg2;
- (int)addVolumeToContainer:(struct __DADisk *)arg1 newFilesystem:(id)arg2 newName:(id)arg3 options:(id)arg4;
- (int)resizeContainer:(struct __DADisk *)arg1 newSize:(id)arg2 newMapEntries:(id)arg3 options:(id)arg4;
- (int)deleteContainer:(struct __DADisk *)arg1 reformatToNewNames:(id)arg2 options:(id)arg3;
- (int)createContainerFromDisks:(id)arg1 options:(id)arg2;
- (int)ensureRecoveryBooter:(struct __DADisk *)arg1 options:(id)arg2;
- (int)convertFromHFSDryRun:(struct __DADisk *)arg1 options:(id)arg2;
- (int)convertFromHFS:(struct __DADisk *)arg1 options:(id)arg2;
- (int)convertFromHFS:(struct __DADisk *)arg1 dryRun:(BOOL)arg2 options:(id)arg3;
- (int)isDiskSuitableForConversionFromHFS:(struct __DADisk *)arg1 suitable:(char *)arg2 why:(int *)arg3 options:(id)arg4;
- (int)institutionalRecoveryKeyBlobForVolume:(struct DMUDSPrivRec *)arg1 keychainFilePath:(id)arg2 keyBlob:(id *)arg3;
- (void)cancelCurrentOperation;
- (void)dealloc;
- (id)initWithManager:(id)arg1;
- (id)init;

@end

