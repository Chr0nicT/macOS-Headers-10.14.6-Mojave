//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GEOUserSessionEntity, GEOUserSessionSnapshot, NSData, NSLock;
@protocol OS_dispatch_queue;

@interface GEOUserSession : NSObject
{
    struct GEOSessionID _sessionID;
    double _sessionCreationTime;
    unsigned int _sequenceNumber;
    struct GEOSessionID _usageCollectionSessionID;
    double _usageSessionIDGenerationTime;
    BOOL _shareSessionWithMaps;
    GEOUserSessionEntity *_mapsUserSessionEntity;
    BOOL _zeroSessionIDMode;
    struct GEOSessionID _cohortSessionID;
    double _cohortSessionStartTime;
    NSLock *_lock;
    NSData *_navigationDirectionsID;
    struct GEOSessionID _navigationSessionID;
    double _navigationSessionStartTime;
    NSData *_previousNavigationDirectionsID;
    struct GEOSessionID _previousNavigationSessionID;
    double _previousNavigationSessionStartTime;
    double _previousNavigationSessionEndTime;
    struct GEOSessionID _zeroSessionID;
    unsigned char _shortSessionMachElapsedShiftFactor;
    struct GEOSessionID _shortSessionID;
    double _shortSessionCreationTime;
    unsigned long long _shortSessionMachTimeBasis;
    NSObject<OS_dispatch_queue> *_snapshotQueue;
    int _shortSessionChangedToken;
}

+ (id)sharedInstance;
+ (void)setIsGeod;
+ (BOOL)isGeod;
@property BOOL zeroSessionIDMode; // @synthesize zeroSessionIDMode=_zeroSessionIDMode;
@property(nonatomic) BOOL shareSessionWithMaps; // @synthesize shareSessionWithMaps=_shareSessionWithMaps;
- (void).cxx_destruct;
- (void)prepareForNewShortSession;
- (void)endNavigationSession;
- (void)startNavigationSessionWithDirectionsID:(id)arg1 originalDirectionsID:(id)arg2;
@property(readonly) GEOUserSessionEntity *navSessionEntity;
@property(readonly) GEOUserSessionEntity *longSessionEntity;
- (void)_updateNavSessionID;
- (void)_generateNewNavSessionID;
- (void)setSharedMapsUserSessionEntity:(id)arg1 shareSessionIDWithMaps:(BOOL)arg2;
@property(readonly) GEOUserSessionSnapshot *userSessionSnapshot;
@property(retain, nonatomic) GEOUserSessionEntity *mapsUserSessionEntity; // @synthesize mapsUserSessionEntity=_mapsUserSessionEntity;
- (id)shortSessionEntity;
@property(readonly) struct GEOSessionID usageCollectionSessionID;
- (void)mapsSessionEntityWithCallback:(CDUnknownBlockType)arg1 shareSessionIDWithMaps:(BOOL)arg2 resetSession:(BOOL)arg3;
- (void)_resetSessionID;
- (void)_renewUsageCollectionSessionID;
@property(readonly) GEOUserSessionEntity *cohortSessionEntity;
- (void)_safe_renewCohortSessionID;
- (void)_renewCohortSessionID;
- (void)_safe_renewUsageCollectionSessionID;
- (id)_defaultForKey:(id)arg1;
- (void)_setDefault:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)init;
- (double)_getCFAbsoluteCurrentTime;
- (void)_overrideShortSessionId:(struct GEOSessionID)arg1 sessionMachBasisTime:(unsigned long long)arg2 sessionStartTime:(double)arg3;
- (void)_shortSessionWithBasisComponentsCompletion:(CDUnknownBlockType)arg1;
- (void)_updateWithNewUUIDForSessionID:(struct GEOSessionID *)arg1;

@end

