//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface PKImageResizingConstraints : NSObject
{
    int _constraintType;
    double _fixedDimension;
    struct CGSize _size;
    double _minAspectRatio;
    double _maxAspectRatio;
    BOOL _respectAspectRatioRange;
    BOOL _outputMirrored;
    double _outputScale;
    double _outputBorderTrim;
    double _outputCornerRadius;
}

+ (id)constraintsWithAspectFitToSize:(struct CGSize)arg1;
+ (id)constraintsWithAspectFillToSize:(struct CGSize)arg1;
+ (id)constraintsWithFixedSize:(struct CGSize)arg1;
+ (id)constraintsWithMinSize:(struct CGSize)arg1;
+ (id)constraintsWithMaxSize:(struct CGSize)arg1;
+ (id)constraintsWithMinSize:(struct CGSize)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3;
+ (id)constraintsWithMaxSize:(struct CGSize)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3;
+ (id)constraintsWithFixedSmallDimenstion:(double)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3;
+ (id)constraintsWithFixedLargeDimenstion:(double)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3;
+ (id)constraintsWithFixedHeight:(double)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3;
+ (id)constraintsWithFixedWidth:(double)arg1 minAspectRatio:(double)arg2 maxAspectRatio:(double)arg3;
@property(nonatomic) BOOL outputMirrored; // @synthesize outputMirrored=_outputMirrored;
@property(nonatomic) double outputCornerRadius; // @synthesize outputCornerRadius=_outputCornerRadius;
@property(nonatomic) double outputBorderTrim; // @synthesize outputBorderTrim=_outputBorderTrim;
@property(nonatomic) double outputScale; // @synthesize outputScale=_outputScale;
- (id)_flippedConstraints;
- (BOOL)_reasonable;
- (struct CGRect)_getDrawRectForImage:(struct CGImage *)arg1 withOutputSize:(struct CGSize)arg2;
- (BOOL)_getPixelCropRect:(struct CGRect *)arg1 pixelOutputSize:(struct CGSize *)arg2 forImageSize:(struct CGSize)arg3 scale:(double)arg4;
- (BOOL)getPixelCropRect:(struct CGRect *)arg1 pixelOutputSize:(struct CGSize *)arg2 forImage:(id)arg3;
- (id)resizedImage:(id)arg1;
- (id)init;

@end

