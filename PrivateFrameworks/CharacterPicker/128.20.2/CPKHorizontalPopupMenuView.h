//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AppKit/NSView.h>

@class CPKHorizontalPopupMenu, NSArray, NSButton;

__attribute__((visibility("hidden")))
@interface CPKHorizontalPopupMenuView : NSView
{
    NSArray *_buttons;
    BOOL _selected;
    BOOL _trackingCanceled;
    BOOL _doubleClicked;
    BOOL _isRTLLayout;
    CPKHorizontalPopupMenu *_parentMenu;
    NSArray *_menuItems;
    double _cellGap;
    double _dividerGap;
    double _menuOpenedTime;
    NSButton *_highlightedButton;
    struct CGSize _cellSize;
}

@property BOOL isRTLLayout; // @synthesize isRTLLayout=_isRTLLayout;
@property(readonly) NSButton *highlightedButton; // @synthesize highlightedButton=_highlightedButton;
@property BOOL doubleClicked; // @synthesize doubleClicked=_doubleClicked;
@property BOOL trackingCanceled; // @synthesize trackingCanceled=_trackingCanceled;
@property BOOL selected; // @synthesize selected=_selected;
@property double menuOpenedTime; // @synthesize menuOpenedTime=_menuOpenedTime;
@property(readonly) double dividerGap; // @synthesize dividerGap=_dividerGap;
@property(readonly) double cellGap; // @synthesize cellGap=_cellGap;
@property(readonly) struct CGSize cellSize; // @synthesize cellSize=_cellSize;
@property(readonly) NSArray *menuItems; // @synthesize menuItems=_menuItems;
@property CPKHorizontalPopupMenu *parentMenu; // @synthesize parentMenu=_parentMenu;
- (void)_myHorizontalMenuSelected:(id)arg1;
- (id)_buttonAtPoint:(struct CGPoint)arg1;
- (void)_highlightButton:(id)arg1;
- (void)_moveHighlightToBackward:(BOOL)arg1;
- (void)mouseDown:(id)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)shouldDelayWindowOrderingForEvent:(id)arg1;
- (void)clearHighlightedButton;
- (void)highlightButtonAtIndex:(long long)arg1;
- (void)highlightButtonAt:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithItems:(id)arg1 cellSize:(struct CGSize)arg2;

@end

