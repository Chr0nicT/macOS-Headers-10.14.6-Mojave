//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSData, NSString, UIColor, UIImage;

__attribute__((visibility("hidden")))
@interface UIKBRenderer : NSObject
{
    struct CGContext *_cachingContext;
    CDUnknownBlockType _cachingContextCompletion;
    long long _forceColorFormat;
    UIColor *_singleColor;
    int _colorCount;
    BOOL _opaque;
    BOOL _colorDetectMode;
    BOOL _disableInternalCaching;
    struct CGContext *_ctx;
    double _scale;
    long long _renderFlags;
    NSString *_cacheKey;
    UIImage *_renderedImage;
    long long _contentColorFormat;
    long long _assetIdiom;
    struct CGSize _size;
}

+ (void)clearInternalCaches;
+ (struct CGContext *)imageContextWithSize:(struct CGSize)arg1 scale:(double)arg2 colorFormat:(long long)arg3 opaque:(BOOL)arg4 invert:(BOOL)arg5;
+ (id)rendererWithContext:(struct CGContext *)arg1 withSize:(struct CGSize)arg2 withScale:(double)arg3 opaque:(BOOL)arg4 renderFlags:(long long)arg5 assetIdiom:(long long)arg6;
@property(nonatomic) BOOL disableInternalCaching; // @synthesize disableInternalCaching=_disableInternalCaching;
@property(readonly, nonatomic) long long assetIdiom; // @synthesize assetIdiom=_assetIdiom;
@property(nonatomic) BOOL colorDetectMode; // @synthesize colorDetectMode=_colorDetectMode;
@property(retain, nonatomic) NSString *cacheKey; // @synthesize cacheKey=_cacheKey;
@property(readonly, nonatomic) long long renderFlags; // @synthesize renderFlags=_renderFlags;
@property(readonly, nonatomic) BOOL opaque; // @synthesize opaque=_opaque;
@property(readonly, nonatomic) double scale; // @synthesize scale=_scale;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
- (id)pathForSplitGeometry:(id)arg1;
- (id)pathForFlickPopupGeometries:(id)arg1;
- (id)pathForFlickGeometry:(id)arg1;
- (id)pathForFlickWidth:(double)arg1 height:(double)arg2 handleLength:(double)arg3 keyMiddle:(struct CGPoint)arg4 angle:(double)arg5;
- (id)pathForRenderGeometry:(id)arg1;
- (id)pathForConcaveCornerWithGeometry:(id)arg1;
- (void)addPathForSplitGeometry:(id)arg1;
- (void)addPathForFlickPopupGeometries:(id)arg1;
- (void)addPathForFlickGeometry:(id)arg1;
- (void)addPathForRenderGeometry:(id)arg1;
- (void)addPathForTraits:(id)arg1 displayRect:(struct CGRect *)arg2;
- (void)addRoundRect:(struct CGRect)arg1 radius:(double)arg2 corners:(unsigned long long)arg3;
- (BOOL)renderKeyPathContents:(id)arg1 withTraits:(id)arg2;
- (void)drawShiftPath:(BOOL)arg1 weight:(double)arg2 transform:(struct CGAffineTransform)arg3 color:(struct CGColor *)arg4;
- (void)drawPath:(struct CGPath *)arg1 weight:(double)arg2 transform:(struct CGAffineTransform)arg3 color:(struct CGColor *)arg4 fill:(BOOL)arg5;
- (struct CGPath *)_deleteGlyphPaths;
- (struct CGPath *)_thickShiftGlyphPath;
- (struct CGPath *)_thinShiftGlyphPath;
- (unsigned long long)renderKeyStringContents:(id)arg1 withTraits:(id)arg2 status:(unsigned long long)arg3;
- (BOOL)_drawKeyString:(id)arg1 inRect:(struct CGRect)arg2 withStyle:(id)arg3;
- (BOOL)_drawSingleSymbol:(id)arg1 inRect:(struct CGRect)arg2 withStyle:(id)arg3;
- (unsigned long long)renderKeyImageContents:(id)arg1 withTraits:(id)arg2 status:(unsigned long long)arg3;
- (void)_drawKeyImage:(id)arg1 inRect:(struct CGRect)arg2 withStyle:(id)arg3 force1xImages:(BOOL)arg4 flipHorizontally:(BOOL)arg5;
- (void)_renderVariantsFromKeyContents:(id)arg1 withTraits:(id)arg2;
- (void)renderKeyContents:(id)arg1 withTraits:(id)arg2;
- (void)renderBackgroundTraits:(id)arg1;
- (void)_completeCacheImageWithTraitsIfNecessary:(id)arg1;
- (BOOL)loadCachedImageForHashString:(id)arg1;
- (void)renderBackgroundTraits:(id)arg1 allowCaching:(BOOL)arg2;
- (void)_drawLinearGradient:(id)arg1 inRect:(struct CGRect)arg2;
- (void)renderDivotEffect:(id)arg1 withTraits:(id)arg2;
- (void)renderShadowEffect:(id)arg1 withTraits:(id)arg2;
- (void)renderEdgeEffect:(id)arg1 withTraits:(id)arg2;
- (void)renderNullEffect:(id)arg1 withTraits:(id)arg2;
@property(readonly, nonatomic) NSData *contextData;
@property(readonly, nonatomic) UIImage *renderedImage; // @synthesize renderedImage=_renderedImage;
@property(readonly, nonatomic) struct CGContext *context; // @synthesize context=_ctx;
- (void)ensureContext;
- (void)detectColorsForEffect:(id)arg1;
- (void)detectColorsForGradient:(id)arg1;
- (void)detectColorsForNamedColor:(id)arg1;
- (void)_addDetectedColor:(struct CGColor *)arg1;
@property(readonly, nonatomic) long long contentColorFormat; // @synthesize contentColorFormat=_contentColorFormat;
@property(readonly, nonatomic) UIColor *singleColor;
- (void)forceColorFormat:(long long)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithContext:(struct CGContext *)arg1 withSize:(struct CGSize)arg2 withScale:(double)arg3 opaque:(BOOL)arg4 renderFlags:(long long)arg5 assetIdiom:(long long)arg6;

@end

