//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <UIKitCore/UIView.h>

#import <UIKitCore/RTIInputSystemClientDelegate-Protocol.h>
#import <UIKitCore/RTIInputSystemSessionDelegate-Protocol.h>
#import <UIKitCore/TIKeyboardInputManagerToImplProtocol-Protocol.h>
#import <UIKitCore/UIKeyboardCandidateListDelegate-Protocol.h>
#import <UIKitCore/UITextInputSuggestionDelegate-Protocol.h>
#import <UIKitCore/_UIIVCResponseDelegateImpl-Protocol.h>
#import <UIKitCore/_UIKeyboardTextSelectionGestureControllerDelegate-Protocol.h>

@class NSDictionary, NSMutableArray, NSMutableDictionary, NSString, RTIDocumentState, RTIDocumentTraits, RTIInputSystemClient, TICandidateRequestToken, TIKeyboardCandidateResultSet, TIKeyboardInputManagerState, TIKeyboardInputManagerStub, TIKeyboardLayout, TIKeyboardState, TIKeyboardTouchEvent, TISmartPunctuationController, UIAlertView, UIAutocorrectInlinePrompt, UIDelayedAction, UIKBAutofillController, UIKeyboardAutocorrectionController, UIKeyboardLayout, UIKeyboardScheduledTask, UIKeyboardTaskQueue, UILexicon, UIPhysicalKeyboardEvent, UIResponder, UITextInputArrowKeyHistory, UITextInputTraits, UITextSelectionView, _UIActionWhenIdle, _UIKeyboardImplProxy, _UIKeyboardTextSelectionController;
@protocol UIKeyInput, UIKeyInputPrivate, UIKeyboardCandidateList, UIKeyboardImplGeometryDelegate, UIKeyboardInput, UITextInput, UITextInputPrivate, UIWKInteractionViewProtocol;

@interface UIKeyboardImpl : UIView <_UIIVCResponseDelegateImpl, _UIKeyboardTextSelectionGestureControllerDelegate, UITextInputSuggestionDelegate, TIKeyboardInputManagerToImplProtocol, RTIInputSystemClientDelegate, RTIInputSystemSessionDelegate, UIKeyboardCandidateListDelegate>
{
    id <UIKeyInput> m_delegate;
    UIKeyboardTaskQueue *m_taskQueue;
    CDUnknownBlockType m_externalTask;
    TIKeyboardState *m_keyboardState;
    TIKeyboardInputManagerState *m_inputManagerState;
    BOOL m_keyboardDelegateStateNeedsRefresh;
    UIView *m_languageIndicator;
    NSString *m_previousInputString;
    UIKeyboardAutocorrectionController *m_autocorrectionController;
    UIAutocorrectInlinePrompt *m_autocorrectPrompt;
    TIKeyboardCandidateResultSet *m_candidateResultSet;
    id <UIKeyboardCandidateList> m_candidateList;
    UIView *m_markedTextOverlay;
    id <UIKeyboardImplGeometryDelegate> m_geometryDelegate;
    UIKeyboardLayout *m_layout;
    NSMutableDictionary *m_keyedLayouts;
    UIKeyboardScheduledTask *m_autoDeleteTask;
    unsigned int m_autoDeleteCount;
    double m_autoDeleteLastDelete;
    double m_autoDeleteInterval;
    unsigned int m_autoDeleteShiftCharacter;
    double m_autoDeleteCurrentForceMultipler;
    double m_autoDeleteCurrentForce;
    BOOL m_autoDeleteUseForce;
    UIDelayedAction *m_longPressAction;
    long long m_originalOrientation;
    struct CGPoint m_inputPoint;
    int m_changeCount;
    double m_changeTime;
    id m_changedDelegate;
    struct __CFRunLoopObserver *m_observer;
    BOOL m_hasOutstandingObserverCallbackTask;
    unsigned long long m_textInputChangingCount;
    BOOL m_textInputChangingText;
    BOOL m_textInputChangingDirection;
    BOOL m_textInputChangesIgnored;
    BOOL m_textInputUpdatingSelection;
    BOOL m_insideKeyInputDelegateCall;
    BOOL m_disableSyncTextChanged;
    UITextInputTraits *m_defaultTraits;
    UITextInputTraits *m_traits;
    int m_returnKeyState;
    long long m_currentDirection;
    UILexicon *m_recentInputs;
    BOOL m_autoDeleteOK;
    BOOL m_autocapitalizationPreference;
    BOOL m_autocorrectionPreference;
    BOOL m_autoshift;
    BOOL m_caretShowingNow;
    BOOL m_changeNotificationDisabled;
    BOOL m_correctionLearningAllowed;
    BOOL m_delegateIsSMSTextView;
    BOOL m_delegateRequiresKeyEvents;
    BOOL m_doubleSpacePeriodWasAppliedInCurrentContext;
    BOOL m_doubleSpacePeriodPreference;
    BOOL m_hardwareKeyboardAttached;
    BOOL m_inDealloc;
    BOOL m_initializationDone;
    BOOL m_selecting;
    BOOL m_shift;
    BOOL m_shiftLocked;
    BOOL m_shiftLockedEnabled;
    BOOL m_settingShift;
    BOOL m_suggestionsShownForCurrentDeletion;
    BOOL m_originalShouldSkipCandidateSelection;
    BOOL m_updatingPreferences;
    BOOL m_suppressGeometryChangeNotifications;
    BOOL m_acceptingCandidate;
    BOOL m_didAutomaticallyInsertSpace;
    BOOL m_didSyncDocumentStateToInputDelegate;
    BOOL m_userChangedSelection;
    BOOL m_shouldChargeKeys;
    BOOL m_longPress;
    BOOL m_replacingWord;
    BOOL m_shiftNeedsUpdate;
    BOOL m_shiftPreventAutoshift;
    BOOL m_shiftHeldDownNeedsUpdated;
    BOOL m_delegateAdoptsTextInput;
    BOOL m_delegateAdoptsTextInputPrivate;
    BOOL m_delegateAdoptsWebTextInputPrivate;
    BOOL m_delegateAdoptsKeyboardInput;
    BOOL m_delegateAdoptsWKInteraction;
    BOOL m_delegateAdoptsKeyInputPrivate;
    BOOL m_clientVariantSupportEnabled;
    BOOL m_clientVariantSupportEnabledEver;
    NSMutableArray *m_keyplaneNamesPreviousDelegate;
    NSMutableArray *m_keyplaneNamesCurrentDelegate;
    UITextInputArrowKeyHistory *m_arrowKeyHistory;
    BOOL m_isRotating;
    BOOL m_preRotateShift;
    BOOL m_preRotateShiftLocked;
    BOOL m_showInputModeIndicator;
    BOOL m_suppressUpdateCandidateView;
    BOOL m_shouldUpdateCacheOnInputModesChange;
    BOOL m_rivenCenterFilled;
    double m_splitProgress;
    BOOL m_needsCandidates;
    BOOL m_shouldSkipCandidateGeneration;
    BOOL m_updateLayoutOnShowKeyboard;
    BOOL m_receivedCandidatesInCurrentInputMode;
    BOOL m_prewarmsPredictiveCandidates;
    int _currentAlertReason;
    BOOL m_canUpdateIdleTimer;
    BOOL m_scrolling;
    BOOL m_hasInputOnAcceptCandidate;
    BOOL m_maximizing;
    BOOL m_usesAutoShiftFor3PK;
    unsigned long long m_previousSpaceKeyBehavior;
    unsigned long long m_previousReturnKeyBehavior;
    BOOL m_usesCandidateSelection;
    BOOL m_UsedCandidateSelection;
    BOOL m_hasEditedMarkedTextInExtendedView;
    BOOL m_updatingLayout;
    BOOL m_suppressUpdateLayout;
    BOOL m_animateUpdateBars;
    BOOL m_needsToRecomputeDesirableModes;
    BOOL m_isCapsLocked;
    UITextInputTraits *m_traitsForPreviousDelegate;
    UIDelayedAction *m_detachHardwareKeyboardAction;
    UIView *m_capsLockSign;
    BOOL m_didAutomaticallyInsertSpaceBeforeChangingInputMode;
    BOOL m_disableSmartInsertDelete;
    BOOL m_isPerformingRemoteOperations;
    int m_predictionType;
    BOOL m_repeatDeleteFromHardwareKeyboard;
    UIDelayedAction *m_disablePredictionViewTimer;
    double m_lastDisablePredictionViewTime;
    UIKBAutofillController *m_autofillController;
    long long m_cachedAutofillMode;
    BOOL m_isAutofilling;
    long long m_pendingAutofillIndex;
    BOOL m_ignoreSelectionChange;
    NSDictionary *m_autofillCustomInfo;
    unsigned long long m_numCPwords;
    _UIKeyboardImplProxy *m_implProxy;
    BOOL m_showsCandidateBar;
    BOOL m_showsCandidateInline;
    BOOL committingCandidate;
    BOOL geometryIsChanging;
    BOOL m_softwareKeyboardShownByTouch;
    BOOL _forceEnablePredictionView;
    BOOL _handlingKeyCommandFromHardwareKeyboard;
    BOOL _suppressRTIClient;
    BOOL _applicationStateIsActiveForRTI;
    BOOL _viewServiceStateIsActiveForRTI;
    TISmartPunctuationController *m_smartPunctuationController;
    TIKeyboardTouchEvent *m_touchEventWaitingForKeyInputEvent;
    _UIActionWhenIdle *m_delayedCandidateRequest;
    _UIActionWhenIdle *m_deferredDidSetDelegateAction;
    UIPhysicalKeyboardEvent *m_hardwareRepeatEvent;
    UIKeyboardScheduledTask *m_hardwareRepeatTask;
    UIAlertView *keyboardAlertView;
    RTIInputSystemClient *m_rtiClient;
    RTIDocumentTraits *m_rtiDocumentTraits;
    RTIDocumentState *m_rtiDocumentState;
    _UIKeyboardTextSelectionController *_textSelectionController;
    unsigned long long _requestedInteractionModel;
    NSDictionary *_candidateRequestInfo;
    UIKeyboardScheduledTask *_autocorrectPromptTask;
    TICandidateRequestToken *_currentCandidateRequest;
}

+ (void)hardwareKeyboardAvailabilityChanged;
+ (id)uniqueNumberPadInputModesFromInputModes:(id)arg1 forKeyboardType:(long long)arg2;
+ (Class)layoutClassForInputMode:(id)arg1 keyboardType:(long long)arg2 screenTraits:(id)arg3;
+ (struct CGPoint)persistentOffset;
+ (struct CGPoint)normalizedPersistentOffsetIgnoringState;
+ (struct CGPoint)normalizedPersistentOffset;
+ (void)setPersistentOffset:(struct CGPoint)arg1;
+ (void)suppressSetPersistentOffset:(BOOL)arg1;
+ (void)setPersistentSplitProgress:(double)arg1;
+ (double)splitProgress;
+ (double)persistentSplitProgress;
+ (double)keyboardWidthForScreen:(id)arg1 withOrientation:(long long)arg2;
+ (BOOL)supportsSplit;
+ (BOOL)isSplit;
+ (BOOL)rivenTranslationPreference;
+ (BOOL)rivenPreference;
+ (BOOL)rivenInstalled;
+ (void)refreshRivenStateWithTraits:(id)arg1 isKeyboard:(BOOL)arg2;
+ (BOOL)showsGlobeAndDictationKeysExternallyForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;
+ (BOOL)showsGlobeAndDictationKeysExternallyForInterfaceOrientation:(long long)arg1;
+ (BOOL)shouldMergeAssistantBarWithKeyboardLayout;
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)arg1;
+ (double)additionalInstanceHeight;
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)arg1 hasInputView:(BOOL)arg2;
+ (double)topMarginForInterfaceOrientation:(long long)arg1;
+ (id)normalizedInputModesFromPreference;
+ (struct CGSize)keyboardSizeForInterfaceOrientation:(long long)arg1;
+ (BOOL)keyboardOrientation:(long long)arg1 isEquivalentToOrientation:(long long)arg2;
+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1 ignoreInputView:(BOOL)arg2;
+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1;
+ (struct CGSize)defaultSizeForInterfaceOrientation:(long long)arg1;
+ (struct UIEdgeInsets)deviceSpecificStaticHitBufferForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;
+ (struct UIEdgeInsets)deviceSpecificPaddingForInterfaceOrientation:(long long)arg1 inputMode:(id)arg2;
+ (Class)layoutClassForCurrentInputMode;
+ (BOOL)isActivatingForeground;
+ (void)applicationDidReceiveMemoryWarning:(id)arg1;
+ (void)applicationWillEnterForeground:(id)arg1;
+ (void)applicationDidEnterBackground:(id)arg1;
+ (void)screenModeDidChange:(id)arg1;
+ (void)applicationDidRemoveDeactivationReason:(id)arg1;
+ (void)applicationWillAddDeactivationReason:(id)arg1;
+ (void)viewServiceHostDidBecomeActive:(id)arg1;
+ (void)viewServiceHostWillResignActive:(id)arg1;
+ (void)applicationDidBecomeActive:(id)arg1;
+ (void)applicationWillResignActive:(id)arg1;
+ (void)applicationWillSuspend:(id)arg1;
+ (void)purgeImageCache;
+ (void)releaseSharedInstance;
+ (id)activeInstance;
+ (id)sharedInstance;
+ (void)sendPerformanceNotification:(id)arg1 userInfo:(id)arg2;
+ (void)sendPerformanceNotification:(id)arg1;
+ (void)setParentTestForProfiling:(id)arg1;
+ (void)_clearHardwareKeyboardMinimizationPreference;
+ (BOOL)overrideNativeScreen;
+ (id)keyboardScreen;
+ (id)keyboardWindow;
@property(retain, nonatomic) TICandidateRequestToken *currentCandidateRequest; // @synthesize currentCandidateRequest=_currentCandidateRequest;
@property(nonatomic) BOOL viewServiceStateIsActiveForRTI; // @synthesize viewServiceStateIsActiveForRTI=_viewServiceStateIsActiveForRTI;
@property(nonatomic) BOOL applicationStateIsActiveForRTI; // @synthesize applicationStateIsActiveForRTI=_applicationStateIsActiveForRTI;
@property(nonatomic) BOOL suppressRTIClient; // @synthesize suppressRTIClient=_suppressRTIClient;
@property(nonatomic) BOOL handlingKeyCommandFromHardwareKeyboard; // @synthesize handlingKeyCommandFromHardwareKeyboard=_handlingKeyCommandFromHardwareKeyboard;
@property(retain, nonatomic) UIKeyboardScheduledTask *autocorrectPromptTask; // @synthesize autocorrectPromptTask=_autocorrectPromptTask;
@property(retain, nonatomic) NSDictionary *candidateRequestInfo; // @synthesize candidateRequestInfo=_candidateRequestInfo;
@property(nonatomic) unsigned long long requestedInteractionModel; // @synthesize requestedInteractionModel=_requestedInteractionModel;
@property(retain, nonatomic) _UIKeyboardTextSelectionController *textSelectionController; // @synthesize textSelectionController=_textSelectionController;
@property(nonatomic) BOOL forceEnablePredictionView; // @synthesize forceEnablePredictionView=_forceEnablePredictionView;
@property(retain, nonatomic) RTIDocumentState *rtiDocumentState; // @synthesize rtiDocumentState=m_rtiDocumentState;
@property(retain, nonatomic) RTIDocumentTraits *rtiDocumentTraits; // @synthesize rtiDocumentTraits=m_rtiDocumentTraits;
@property(retain, nonatomic) RTIInputSystemClient *rtiClient; // @synthesize rtiClient=m_rtiClient;
@property(retain, nonatomic) UIKBAutofillController *autofillController; // @synthesize autofillController=m_autofillController;
@property(nonatomic) BOOL animateUpdateBars; // @synthesize animateUpdateBars=m_animateUpdateBars;
@property(nonatomic) BOOL suppressUpdateLayout; // @synthesize suppressUpdateLayout=m_suppressUpdateLayout;
@property(nonatomic) BOOL softwareKeyboardShownByTouch; // @synthesize softwareKeyboardShownByTouch=m_softwareKeyboardShownByTouch;
@property(nonatomic) BOOL disableSmartInsertDelete; // @synthesize disableSmartInsertDelete=m_disableSmartInsertDelete;
@property(nonatomic) BOOL prewarmsPredictiveCandidates; // @synthesize prewarmsPredictiveCandidates=m_prewarmsPredictiveCandidates;
@property(nonatomic) BOOL geometryIsChanging; // @synthesize geometryIsChanging;
@property(nonatomic) BOOL committingCandidate; // @synthesize committingCandidate;
@property(retain, nonatomic) UIAlertView *keyboardAlertView; // @synthesize keyboardAlertView;
@property(nonatomic) BOOL showsCandidateInline; // @synthesize showsCandidateInline=m_showsCandidateInline;
@property(nonatomic) BOOL receivedCandidatesInCurrentInputMode; // @synthesize receivedCandidatesInCurrentInputMode=m_receivedCandidatesInCurrentInputMode;
@property(nonatomic) BOOL showsCandidateBar; // @synthesize showsCandidateBar=m_showsCandidateBar;
@property(nonatomic) BOOL showInputModeIndicator; // @synthesize showInputModeIndicator=m_showInputModeIndicator;
@property(retain, nonatomic) UIKeyboardScheduledTask *hardwareRepeatTask; // @synthesize hardwareRepeatTask=m_hardwareRepeatTask;
@property(retain, nonatomic) UIPhysicalKeyboardEvent *hardwareRepeatEvent; // @synthesize hardwareRepeatEvent=m_hardwareRepeatEvent;
@property(retain, nonatomic) id changedDelegate; // @synthesize changedDelegate=m_changedDelegate;
@property(retain, nonatomic) _UIActionWhenIdle *deferredDidSetDelegateAction; // @synthesize deferredDidSetDelegateAction=m_deferredDidSetDelegateAction;
@property(retain, nonatomic) _UIActionWhenIdle *delayedCandidateRequest; // @synthesize delayedCandidateRequest=m_delayedCandidateRequest;
@property(retain, nonatomic) TIKeyboardTouchEvent *touchEventWaitingForKeyInputEvent; // @synthesize touchEventWaitingForKeyInputEvent=m_touchEventWaitingForKeyInputEvent;
@property(readonly, nonatomic) UIKeyboardAutocorrectionController *autocorrectionController; // @synthesize autocorrectionController=m_autocorrectionController;
@property(retain, nonatomic) TIKeyboardInputManagerState *inputManagerState; // @synthesize inputManagerState=m_inputManagerState;
@property(copy, nonatomic) CDUnknownBlockType externalTask; // @synthesize externalTask=m_externalTask;
@property(nonatomic) id <UIKeyboardImplGeometryDelegate> geometryDelegate; // @synthesize geometryDelegate=m_geometryDelegate;
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory; // @synthesize arrowKeyHistory=m_arrowKeyHistory;
@property(nonatomic) BOOL canUpdateIdleTimer; // @synthesize canUpdateIdleTimer=m_canUpdateIdleTimer;
- (void)performSendCurrentLocation;
- (id)responderForSendCurrentLocation;
- (void)trackUsageForCandidateAcceptedAction:(id)arg1;
- (void)trackUsageForPromptedCorrection:(id)arg1 inputString:(id)arg2 previousPrompt:(id)arg3;
- (void)trackUsageForAcceptedAutocorrection:(id)arg1 promptWasShowing:(BOOL)arg2;
- (BOOL)isAutoFillMode;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (BOOL)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (BOOL)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (BOOL)canHandleKeyHitTest;
- (void)updateNoContentViews;
- (id)dynamicCaretList;
- (void)clearSelection;
- (BOOL)caretVisible;
- (BOOL)caretBlinks;
- (void)setCaretVisible:(BOOL)arg1;
- (void)setCaretBlinks:(BOOL)arg1;
- (void)startCaretBlinkIfNeeded;
- (BOOL)canHandleEvent:(id)arg1;
- (void)_moveWithEvent:(id)arg1;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)remoteControlReceivedWithEvent:(id)arg1;
- (void)showKeyboardIfNeeded;
- (void)ejectKeyDown;
- (void)toggleSoftwareKeyboard;
- (void)completeHandleKeyEvent:(id)arg1;
- (void)handleKeyWithString:(id)arg1 forKeyEvent:(id)arg2 executionContext:(id)arg3;
- (void)handleModifiersChangeForKeyEvent:(id)arg1 executionContext:(id)arg2;
- (void)handleKeyEvent:(id)arg1 executionContext:(id)arg2;
- (void)handleKeyEvent:(id)arg1;
- (void)_handleKeyEvent:(id)arg1 executionContext:(id)arg2;
- (void)flushTouchEventWaitingForKeyInputEventIfNecessary;
- (void)_remapKeyEvent:(id)arg1 withKeyEventMap:(id)arg2;
- (void)_handleWebKeyEvent:(id)arg1 withInputString:(id)arg2 executionContext:(id)arg3;
- (void)updateKeyboardEventsLagging:(id)arg1;
- (BOOL)isValidKeyInput:(id)arg1;
- (void)cancelAllKeyEvents;
- (void)dismissKeyboard;
- (void)proceedShouldReturnIfNeededForASP;
@property(nonatomic, getter=isInHardwareKeyboardMode) BOOL inHardwareKeyboardMode;
- (void)showKeyboard;
- (void)hideKeyboard;
- (void)firstHardwareAutoRepeatWithExecutionContext:(id)arg1;
- (void)hardwareKeyboardAvailabilityChanged;
- (void)detachHardwareKeyboard;
- (void)clearDetachHardwareKeyboardAction;
- (void)updateHardwareKeyboardLayout;
- (int)changeCount;
- (void)updateChangeTimeAndIncrementCount;
- (void)clearChangeTimeAndCount;
- (void)clearTimers;
- (BOOL)isLongPress;
- (void)longPressAction;
- (void)longPressAction:(id)arg1;
- (void)handleDelayedActionLongPress:(id)arg1;
- (double)shouldExtendLongPressAction:(id)arg1;
- (void)clearLongPressTimer;
- (void)touchLongPressTimer;
- (void)touchLongPressTimerWithDelay:(double)arg1;
- (void)touchLongPressTimerWithDelay:(double)arg1 userInfo:(id)arg2;
- (void)stopAutoDelete;
- (void)adjustAutoDeleteTimerForForce:(double)arg1;
- (void)startAutoDeleteTimerForForce:(double)arg1;
- (double)timeoutForCurrentForce;
- (double)scaleCurrentForceFrom:(double)arg1 to:(double)arg2;
- (double)convertForceToGrams:(double)arg1;
- (void)startAutoDeleteTimer;
- (void)completeHandleAutoDelete;
- (void)handleAutoDeleteWithExecutionContext:(id)arg1;
- (void)touchAutoDeleteTimerWithThreshold:(double)arg1 adjustForPartialCompletion:(BOOL)arg2;
- (void)clearAutoDeleteTimer;
- (id)generateAutocorrectionListForSelectedText;
- (id)generateAutocorrectionReplacements:(id)arg1;
- (void)generateCandidatesFromReplacements;
- (id)replacementsFromSelectedText;
- (void)generateCandidatesWithOptions:(int)arg1;
- (void)generateCandidates;
- (BOOL)canShowAppConnections;
- (BOOL)delegateSuggestionsForCurrentInput;
- (id)autocorrectionRecordForWord:(id)arg1;
- (void)autocorrectionAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)fadeAutocorrectPrompt;
- (void)animateAutocorrectionToRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2;
- (void)animateAutocorrectionToText:(id)arg1 fromRect:(struct CGRect)arg2;
- (BOOL)applyAutocorrection:(id)arg1;
- (void)updateAutocorrectPrompt:(id)arg1 correctionRects:(id)arg2;
- (id)autocorrectPromptRectsForInput:(id)arg1;
- (void)updateAutocorrectPrompt:(id)arg1 executionContext:(id)arg2;
- (void)updateAutocorrectPrompt:(id)arg1;
- (id)autocorrectPromptRectsFromFirstDelegateRect:(struct CGRect)arg1 lastDelegateRect:(struct CGRect)arg2;
- (id)_rangeForAutocorrectionText:(id)arg1;
- (void)clearAutocorrectPromptTimer;
- (void)touchAutocorrectPromptTimer;
- (void)sendCallbacksForPostCorrectionsRemoval;
- (void)sendCallbacksForPreCorrectionsDisplay;
- (struct CGRect)convertRectToAutocorrectRect:(struct CGRect)arg1 delegateView:(id)arg2 container:(id)arg3;
- (void)updateTextCandidateView;
- (struct CGRect)correctionRect;
- (id)inputOverlayContainer;
- (void)callLayoutUpdateRecentInputs;
- (void)callLayoutUpdateAllLocalizedKeys;
- (void)callLayoutUpdateLocalizedKeys;
- (void)callLayoutLongPressAction;
- (void)callLayoutSetAutoshift:(BOOL)arg1;
- (void)callLayoutSetShift:(BOOL)arg1;
- (BOOL)callLayoutIsShiftKeyBeingHeld;
- (BOOL)callLayoutIsShiftKeyPlaneChooser;
- (BOOL)callLayoutIgnoresShiftState;
- (BOOL)callLayoutUsesAutoShift;
- (void)callLayoutUpdateReturnKey;
- (void)_updateKeyboardConfigurations;
- (id)updatedKeyBehaviors;
- (id)updateKeyBehaviors:(id)arg1 withBehaviors:(id)arg2 forState:(id)arg3;
- (id)_keyboardBehaviorState;
- (void)performKeyBehaviorCommitInline;
- (void)performKeyBehaviorConfirmFirstCandidate;
- (void)performKeyBehaviorConfirm;
- (void)_handleKeyBehavior:(unsigned long long)arg1 forKeyType:(id)arg2;
- (void)_nop;
- (BOOL)shouldShowDictationKey;
- (BOOL)shouldShowInternationalKey;
- (void)updateReturnKey:(BOOL)arg1;
- (void)updateReturnKey;
- (void)setReturnKeyEnabled:(BOOL)arg1;
- (BOOL)returnKeyEnabled;
- (id)returnKeyDisplayName;
- (int)returnKeyType;
- (BOOL)noContent;
- (void)setCandidates:(id)arg1;
- (void)removeAutocorrectPromptAndCandidateList;
- (void)removeCandidateList;
- (void)removeAutocorrectPrompt;
- (id)autocorrectPrompt;
- (void)setAutocorrectionList:(id)arg1;
- (void)setAutocorrection:(id)arg1;
- (void)responseContextDidChange;
- (BOOL)maximizing;
- (BOOL)isMinimized;
- (void)resizeCandidateBarWithDelta:(double)arg1;
- (void)updateCandidateDisplay;
- (BOOL)needsToDeferUpdateTextCandidateView;
- (void)updateCandidateDisplayAsyncWithCandidateSet:(id)arg1;
- (void)_conditionallyNotifyPredictionsAreAvailableForCandidates:(id)arg1 containingProactiveTriggers:(BOOL)arg2;
- (BOOL)displaysCandidates;
- (void)setCandidateList:(id)arg1;
- (void)pushAutocorrections:(id)arg1 requestToken:(id)arg2;
- (void)processPayloadInfo:(id)arg1;
- (BOOL)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2 forInput:(id)arg3;
- (BOOL)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2;
- (void)scheduleReplacementsWithOptions:(unsigned long long)arg1;
- (void)replaceText:(id)arg1;
- (void)clearDelegate;
- (void)clearAnimations;
- (void)clearTransientState;
- (void)completeAcceptCandidateBeforeAddingInputObject:(id)arg1 executionContext:(id)arg2;
- (void)addInputObject:(id)arg1 executionContext:(id)arg2;
- (void)addInputObject:(id)arg1;
- (void)acceptRecentInput:(id)arg1;
- (void)removeRecentInput:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)clearRecentInput;
- (void)clearInputWithCandidatesCleared:(BOOL)arg1;
- (void)clearInput;
- (id)candidateList;
- (void)candidateListInvalidateSelection:(id)arg1;
- (void)candidateListSelectionDidChange:(id)arg1;
- (void)candidateListAcceptCandidate:(id)arg1;
- (void)revealHiddenCandidates;
- (void)jumpToCompositions;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidates;
- (void)completeAcceptCandidate:(id)arg1;
- (void)acceptCurrentCandidateIfSelectedWithExecutionContext:(id)arg1;
- (void)acceptCurrentCandidateIfSelected;
- (void)setUserSelectedCurrentCandidate:(BOOL)arg1;
- (BOOL)userSelectedCurrentCandidate;
- (void)acceptFirstCandidate;
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2 executionContext:(id)arg3;
- (id)acceptInlineCandidateForInput:(id)arg1;
- (id)acceptCurrentCandidateForInput:(id)arg1;
- (id)acceptInlineCandidate;
- (id)acceptCurrentCandidate;
- (void)handleDeletionForCandidate:(id)arg1;
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2;
- (void)acceptCandidate:(id)arg1;
- (void)acceptPredictiveInput:(id)arg1 executionContext:(id)arg2;
- (void)rejectAutocorrection:(id)arg1;
- (void)acceptPredictiveInput:(id)arg1;
- (id)emojiCandidate:(id)arg1;
- (void)insertTextSuggestionCandidate:(id)arg1;
- (void)insertTextSuggestion:(id)arg1;
- (void)removeAutocorrection;
- (void)acceptAutocorrection;
- (void)willReplaceTextInRangedSelectionWithKeyboardInput;
- (void)completeDeleteFromInput;
- (void)deleteFromInputWithFlags:(unsigned long long)arg1 executionContext:(id)arg2;
- (void)deleteFromInputWithFlags:(unsigned long long)arg1;
- (void)deleteFromInput;
- (void)didHandleWebKeyEvent;
- (void)completeDeleteOnceFromInputWithCharacterBefore:(unsigned int)arg1;
- (void)scheduleReplacementsAfterDeletionToEndOfWord;
- (void)moveSelectionToEndOfWord;
- (void)collapseSelectionAndAdjustByOffset:(long long)arg1;
- (void)collapseSelection;
- (BOOL)selectionIsEndOfWord;
- (BOOL)nextCharacterIsWordCharacter;
- (void)deleteOnceFromInputWithExecutionContext:(id)arg1;
- (void)updateLayoutAndSetShift;
- (BOOL)shouldEnableShiftForDeletedCharacter:(unsigned int)arg1;
- (void)movePhraseBoundaryToDirection:(long long)arg1 granularity:(long long)arg2;
- (unsigned long long)phraseBoundary;
- (void)didChangePhraseBoundary;
- (void)completeAddInputString:(id)arg1 generateCandidates:(BOOL)arg2;
- (void)completeAddInputString:(id)arg1;
- (void)addWordTerminator:(id)arg1 afterSpace:(BOOL)arg2 afterAcceptingCandidate:(id)arg3 elapsedTime:(double)arg4 executionContext:(id)arg5;
- (void)didApplyAutocorrection:(id)arg1 autocorrectPromptFrame:(struct CGRect)arg2;
- (BOOL)shouldApplyAcceptedAutocorrection:(id)arg1;
- (void)acceptAutocorrection:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;
- (void)setDocumentStateForAutocorrection:(id)arg1;
- (void)syncInputManagerToAcceptedAutocorrection:(id)arg1 forInput:(id)arg2;
- (void)didAcceptAutocorrection:(id)arg1 wordTerminator:(id)arg2;
- (id)inputWordForTerminatorAtSelection;
- (void)acceptAutocorrectionForWordTerminator:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;
- (id)acceptAutocorrectionForWordTerminator:(id)arg1;
- (void)addInputEvent:(id)arg1 executionContext:(id)arg2;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 executionContext:(id)arg4;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 executionContext:(id)arg3;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)removeSpaceAfterEmojiForInputString:(id)arg1;
- (BOOL)shouldAcceptCandidate:(id)arg1 beforeInputString:(id)arg2;
- (id)handleReplacement:(id)arg1 forSpaceAndInput:(id)arg2;
- (id)handleDeleteAutospaceForInputString:(id)arg1 afterSpace:(BOOL)arg2;
- (BOOL)shouldDeleteAutospaceBeforeTerminator:(id)arg1;
- (BOOL)willDoubleSpacePeriodForInputString:(id)arg1 afterSpace:(BOOL)arg2 elapsedTime:(double)arg3;
- (void)updateDoubleSpacePeriodStateForString:(id)arg1;
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned int)arg1;
- (id)inputEventForInputString:(id)arg1;
- (void)addInputString:(id)arg1 fromVariantKey:(BOOL)arg2;
- (void)addInputString:(id)arg1;
- (void)deleteBackward;
- (void)deleteForwardAndNotify:(BOOL)arg1;
- (void)updateKeyboardStateForDeletion;
- (void)deleteBackwardAndNotify:(BOOL)arg1;
- (void)moveCursorByAmount:(long long)arg1;
- (void)insertTextAfterSelection:(id)arg1;
- (void)updateKeyboardStateForInsertion:(id)arg1;
- (void)insertAttributedText:(id)arg1;
- (void)insertText:(id)arg1;
- (void)setPreviousInputString:(id)arg1;
- (BOOL)acceptInputString:(id)arg1;
- (void)handleStringInput:(id)arg1 withFlags:(unsigned long long)arg2 withInputManagerHint:(id)arg3 executionContext:(id)arg4;
- (BOOL)handleTabWithShift:(BOOL)arg1 beforePublicKeyCommands:(BOOL)arg2;
- (BOOL)handleTabWithShift:(BOOL)arg1;
- (void)handleClearWithExecutionContext:(id)arg1;
- (void)handleClear;
- (void)handleClearWithInsertBeforeAdvance:(id)arg1;
- (BOOL)canHandleDelete;
- (void)handleDelete;
- (void)handleDeleteWithExecutionContext:(id)arg1;
- (void)handleDeleteAsRepeat:(BOOL)arg1 executionContext:(id)arg2;
- (void)setInputPoint:(struct CGPoint)arg1;
- (void)keyDeactivated;
- (void)keyActivated;
- (BOOL)shouldUsePinyinStyleRowNavigation;
- (BOOL)supportsNumberKeySelection;
- (BOOL)suppliesCompletions;
- (BOOL)usesAutocorrectionLists;
- (BOOL)accessibilityUsesExtendedKeyboardPredictionsEnabled;
- (void)setUsesCandidateSelection:(BOOL)arg1;
- (BOOL)usesCandidateSelection;
- (void)updateShowCandidateBar;
- (void)setShouldSkipCandidateSelection:(BOOL)arg1 userInitiated:(BOOL)arg2;
@property(nonatomic) BOOL shouldSkipCandidateSelection;
- (void)forceShiftUpdateIfKeyboardStateChanged;
- (void)forceShiftUpdate;
- (void)clearShiftState;
- (BOOL)isCapsLockSwitchEnabled;
- (BOOL)isCapsLockASCIIToggle;
- (BOOL)shiftLockedEnabled;
- (BOOL)isShiftLocked;
- (BOOL)isAutoShifted;
- (BOOL)isShifted;
- (void)setShiftLockedForced:(BOOL)arg1;
- (void)setShiftLocked:(BOOL)arg1;
- (void)setShiftNeedsUpdate;
- (void)setShiftPreventAutoshift:(BOOL)arg1;
- (void)setShift:(BOOL)arg1 autoshift:(BOOL)arg2;
- (void)setShift:(BOOL)arg1;
- (void)toggleShift;
- (void)setShiftOffIfNeeded;
- (BOOL)isSelectionAtSentenceAutoshiftBoundary;
- (void)updateStylingTraitsIfNeeded;
- (void)updateShiftState;
- (void)notifyShiftState;
- (void)updateInputManagerAutocapitalizationType;
- (void)recomputeActiveInputModesWithExtensions:(BOOL)arg1;
- (id)desirableInputModesWithExtensions:(BOOL)arg1;
- (BOOL)shouldSwitchInputMode:(id)arg1;
- (BOOL)shouldUseCarPlayModes;
- (void)releaseInputManagerIfInactive;
- (void)releaseInputManager;
- (void)setInputManagerFromCurrentInputMode;
@property(readonly, nonatomic) TIKeyboardInputManagerStub *inputManager;
- (void)removeAllDynamicDictionaries;
- (void)adjustPhraseBoundaryInForwardDirection:(BOOL)arg1 granularity:(int)arg2 executionContext:(id)arg3;
- (void)performHitTestForTouchEvent:(id)arg1 executionContextPassingNSNumber:(id)arg2;
- (void)skipHitTestForTouchEvent:(id)arg1 delayed:(BOOL)arg2;
- (void)skipHitTestForTouchEvent:(id)arg1;
- (void)generateReplacementsForString:(id)arg1 candidatesHandler:(CDUnknownBlockType)arg2 executionContext:(id)arg3;
- (void)handleAcceptedCandidate:(id)arg1 executionContext:(id)arg2;
- (void)inputManagerDidGenerateAutocorrections:(id)arg1 executionContext:(id)arg2;
- (void)generateAutocorrectionsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)generateAutocorrectionWithExecutionContext:(id)arg1;
- (void)inputManagerDidGenerateCandidatesForRequest:(id)arg1 resultSet:(id)arg2;
- (BOOL)shouldPrioritizeTextSuggestionsOverCandidateResultSet:(id)arg1;
- (void)cancelCandidateRequests;
- (void)generateCandidatesAsynchronouslyWithRange:(struct _NSRange)arg1 selectedCandidate:(id)arg2;
- (void)generateCandidatesAsynchronously;
- (void)performKeyboardOutput:(id)arg1;
- (void)performKeyboardOutputInfo:(id)arg1;
- (BOOL)dontPushOneTimeCode;
- (void)replaceAllTextInResponder:(id)arg1 withText:(id)arg2;
- (void)updateKeyboardOutput:(id)arg1 withInputForSmartPunctuation:(id)arg2 keyboardConfiguration:(id)arg3;
- (void)handleKeyboardInput:(id)arg1 executionContext:(id)arg2;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
- (void)syncKeyboardToConfiguration:(id)arg1;
- (void)syncInputManagerToKeyboardStateWithExecutionContext:(id)arg1;
- (void)syncInputManagerToKeyboardState;
@property(readonly, nonatomic) UIKeyboardTaskQueue *taskQueue;
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;
- (void)selectionDidChange:(id)arg1;
- (void)completeUpdateForChangedSelection:(BOOL)arg1;
- (BOOL)shouldGenerateCandidatesAfterSelectionChange;
- (void)updateForChangedSelectionWithExecutionContext:(id)arg1;
- (void)updateForChangedSelection;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (void)selectionWillChange:(id)arg1;
- (void)prepareForSelectionChange;
- (void)syncDocumentStateToInputDelegateWithExecutionContext:(id)arg1;
- (void)syncDocumentStateToInputDelegate;
- (BOOL)cursorIsAtEndOfMarkedText;
- (id)inputStringFromPhraseBoundary;
- (id)searchStringForMarkedText;
- (id)markedTextOverlay;
- (id)inputForMarkedText;
- (id)attributedMarkedText;
- (id)markedText;
- (BOOL)hasEditableMarkedText;
- (BOOL)hasMarkedText;
- (void)unmarkText:(id)arg1;
- (void)unmarkText;
- (void)clearInputForMarkedText;
- (void)_setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4 compareAttributes:(BOOL)arg5;
- (void)setAttributedMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4;
- (struct CGSize)stretchFactor;
- (int)_clipCornersOfView:(id)arg1;
- (void)_didChangeKeyplaneWithContext:(id)arg1;
- (void)didMoveToSuperview;
- (void)willMoveToWindow:(id)arg1;
- (void)_updateExternalDeviceInputSettingForWindow:(id)arg1;
- (BOOL)transitionInProgress;
- (void)setTwoFingerTapTimestamp:(double)arg1;
- (BOOL)shouldAllowSelectionGestures:(BOOL)arg1 atPoint:(struct CGPoint)arg2 toBegin:(BOOL)arg3;
@property(readonly, nonatomic) double timestampOfLastTouchesEnded;
- (void)updateLayout;
- (void)finishLayoutChangeWithArguments:(id)arg1;
@property(readonly, nonatomic) BOOL shouldShowCandidateBar;
- (BOOL)shouldShowCandidateBarIfReceivedCandidatesInCurrentInputMode:(BOOL)arg1 ignoreHidePredictionTrait:(BOOL)arg2;
- (BOOL)currentKeyboardTraitsAllowCandidateBarWhileIgnoringHidePredictionTrait:(BOOL)arg1;
- (struct CGRect)subtractKeyboardFrameFromRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)geometryChangeDone:(BOOL)arg1;
- (void)prepareForGeometryChange;
- (void)releaseSuppressUpdateCandidateView;
- (void)updateLayoutIfNeeded;
- (BOOL)handleKeyCommand:(id)arg1 repeatOkay:(char *)arg2 beforePublicKeyCommands:(BOOL)arg3;
- (BOOL)handleKeyCommand:(id)arg1 repeatOkay:(char *)arg2;
- (BOOL)shouldAllowRepeatEvent:(id)arg1;
- (void)handleObserverCallback;
- (void)updateObserverState;
- (void)setChangeNotificationDisabled:(BOOL)arg1;
- (BOOL)changeNotificationDisabled;
- (void)setChanged;
- (void)textFrameChanged:(id)arg1;
- (void)callChanged;
- (void)callChangedSelection;
- (BOOL)callShouldDeleteWithWordCountForRapidDelete:(int)arg1 characterCountForRapidDelete:(int)arg2;
- (BOOL)shouldRapidDeleteWithDelegate;
- (BOOL)shouldRapidDelete;
- (BOOL)usesAutoDeleteWord;
- (BOOL)insertTextIfShould:(id)arg1;
- (BOOL)callShouldReplaceExtendedRange:(long long)arg1 withText:(id)arg2 includeMarkedText:(BOOL)arg3;
- (BOOL)callShouldInsertText:(id)arg1 onDelegate:(id)arg2;
- (BOOL)callShouldInsertText:(id)arg1;
- (void)_keyboardOutputToRTISourceSession:(CDUnknownBlockType)arg1;
- (void)inputSession:(id)arg1 documentStateDidChange:(id)arg2;
- (void)inputSession:(id)arg1 documentTraitsDidChange:(id)arg2;
- (void)didClearText;
- (void)applyRemoteDocumentStateIfNecessary:(id)arg1 force:(BOOL)arg2;
- (void)applyRemoteDocumentTraitsIfNecessary:(id)arg1 force:(BOOL)arg2;
- (void)_addTextRectsForTextRange:(id)arg1;
- (void)_updateRTIStateIfNecessary;
- (void)_updateRTITraitsIfNecessary;
- (void)_updateRTIObjectsIfNecessary;
- (void)_performTextOperationActionSelector:(SEL)arg1;
- (void)_queued_performTextOperations:(id)arg1;
- (void)performTextOperations:(id)arg1;
- (void)_completePerformInputViewControllerOutput:(id)arg1 executionContext:(id)arg2;
- (void)_processInputViewControllerKeyboardOutput:(id)arg1 executionContext:(id)arg2;
- (void)_updateInputViewControllerOutput:(id)arg1 forKeyboardOutput:(id)arg2;
- (BOOL)_shouldRequestInputManagerSyncForKeyboardOutputCallbacks:(id)arg1;
- (void)handleWebViewCredentialsSaveForWebsiteURL:(id)arg1 user:(id)arg2 password:(id)arg3 passwordIsAutoGenerated:(BOOL)arg4;
- (void)setSuggestions:(id)arg1;
- (void)handlePredictionViewIfNeeded:(BOOL)arg1;
- (void)disablePredictionViewIfNeeded;
- (void)updatePredictionViewStateForCurrentPredictionPreferences;
- (void)clearDisablePredictionViewTimer;
@property(readonly, nonatomic) BOOL isAutofillPrediction;
@property(readonly, nonatomic) BOOL isDefaultPrediction;
- (void)enable;
- (id)textInputTraits;
- (void)setDefaultTextInputTraits:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)finishTextChanged;
- (void)textChanged:(id)arg1 executionContext:(id)arg2;
- (void)textChanged:(id)arg1;
- (void)layoutHasChanged;
- (void)textWillChange:(id)arg1;
- (BOOL)hasDelegate;
- (void)storeDelegateConformance;
- (BOOL)autocorrectSpellingEnabled;
- (void)setAutocorrectSpellingEnabled:(BOOL)arg1;
- (BOOL)delegateSupportsCorrectionUI;
- (BOOL)delegateIsSMSTextView;
- (void)didSetDelegate;
- (void)setDelegate:(id)arg1 force:(BOOL)arg2;
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;
- (void)updateAssistantBar;
- (id)documentIdentifierForInputDelegate:(id)arg1;
@property(readonly, nonatomic) UIResponder *delegateAsResponder;
@property(readonly, nonatomic) UIResponder<UIKeyInputPrivate> *privateKeyInputDelegate;
@property(readonly, nonatomic) UIResponder<UIWKInteractionViewProtocol> *asynchronousInputDelegate;
@property(readonly, nonatomic) UIResponder<UITextInput> *inputDelegate;
@property(readonly, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;
@property(readonly, nonatomic) id <UIKeyboardInput> legacyInputDelegate;
- (void)setTextSelectionControllerFromDelegate;
- (void)takeTextInputTraitsFromDelegate;
- (void)setCorrectionLearningAllowed:(BOOL)arg1;
- (void)finishLayoutToCurrentInterfaceOrientation;
- (void)updateLayoutToCurrentInterfaceOrientation;
- (void)prepareLayoutForInterfaceOrientation:(long long)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)updateLayoutIfNecessary;
- (void)_updateSoundPreheatingForWindow:(id)arg1;
- (void)setInputModeToNextASCIICapableInPreferredList;
- (void)finishSetInputModeToNextInPreferredListWithExecutionContext:(id)arg1 withPreviousInputMode:(id)arg2;
- (void)setInputModeToNextInPreferredListWithExecutionContext:(id)arg1;
- (void)showInternationalKeyInfoAlertIfNeededWithPreviousInputMode:(id)arg1;
- (void)showInformationalAlertIfNeededForReason:(int)arg1 withPreviousInputMode:(id)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)arg1;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(BOOL)arg1 preserveIfPossible:(BOOL)arg2;
- (void)setKeyboardInputModeFromPreferences:(id)arg1;
- (void)prepareKeyboardInputModeFromPreferences:(id)arg1;
- (void)setInputModeFromPreferences;
- (void)finishSetInputMode:(id)arg1 didChangeDirection:(BOOL)arg2;
- (void)finishSetExtensionInputMode:(id)arg1 didChangeDirection:(BOOL)arg2;
- (void)finishSetKeyboardInputMode:(id)arg1 didChangeDirection:(BOOL)arg2;
- (BOOL)inputModeHasHardwareLayout:(id)arg1;
- (void)reinitializeAfterInputModeSwitch:(BOOL)arg1;
- (void)updateForHandBiasChange;
- (void)updatePredictionView;
- (void)updateSmartPunctuationOptionsForLocaleIdentifier:(id)arg1;
- (void)cleanUpBeforeInputModeSwitch;
- (void)_setKeyboardInputMode:(id)arg1 userInitiated:(BOOL)arg2 updateIndicator:(BOOL)arg3 force:(BOOL)arg4 executionContext:(id)arg5;
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(BOOL)arg2 updateIndicator:(BOOL)arg3 executionContext:(id)arg4;
- (void)reloadCurrentInputMode;
- (void)postInputViewControllerShouldUpdateNotification:(id)arg1;
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(BOOL)arg2;
- (void)_setKeyboardInputMode:(id)arg1 userInitiated:(BOOL)arg2 force:(BOOL)arg3;
- (void)setInputMode:(id)arg1 userInitiated:(BOOL)arg2 updateIndicator:(BOOL)arg3 executionContext:(id)arg4;
- (void)setInputMode:(id)arg1 userInitiated:(BOOL)arg2;
- (void)setInputMode:(id)arg1;
- (BOOL)shiftLockPreference;
- (void)setHardwareKeyboardsSeenPreference:(id)arg1;
- (id)hardwareKeyboardsSeenPreference;
- (void)setShouldUpdateCacheOnInputModesChange:(BOOL)arg1;
- (void)updateInputModeLastChosenPreference;
- (id)inputModeLastUsedPreference;
- (id)inputModePreference;
- (void)saveInputModesPreference:(id)arg1;
- (void)setAutomaticMinimizationEnabled:(BOOL)arg1;
- (BOOL)automaticMinimizationEnabled;
- (BOOL)keyboardsExpandedPreference;
- (id)UILanguagePreference;
- (BOOL)doubleSpacePeriodPreference;
@property(readonly, nonatomic) TISmartPunctuationController *smartPunctuationController; // @synthesize smartPunctuationController=m_smartPunctuationController;
- (BOOL)checkSpellingPreferenceForTraits;
- (BOOL)checkSpellingPreference;
- (BOOL)smartInsertDeleteIsEnabled;
- (BOOL)autocapitalizationPreference;
- (BOOL)candidateSelectionPredictionForTraits;
- (BOOL)disableInputBars;
- (BOOL)canOfferPredictionsForTraits;
- (BOOL)canShowPredictionBar;
- (BOOL)predictionPreferenceForTraits;
- (BOOL)predictionFromPreference;
- (BOOL)predictionForTraits;
- (BOOL)predictionForTraitsWithForceEnable:(BOOL)arg1;
- (BOOL)autocorrectionPreferenceForTraits;
- (BOOL)keyboardIsKeyPad;
- (BOOL)autocorrectionPreference;
- (void)cancelSplitTransition;
- (BOOL)hideAccessoryViewsDuringSplit;
- (void)setSplitProgress:(double)arg1;
- (void)setInSplitKeyboardMode:(BOOL)arg1;
@property(readonly, nonatomic) BOOL splitTransitionInProgress;
@property(readonly) unsigned long long minimumTouchesForTranslation;
@property BOOL rivenSplitLock;
- (void)refreshRivenPreferences;
- (struct CGRect)dragGestureRectInView:(id)arg1;
- (struct CGRect)frameForKeylayoutName:(id)arg1;
@property(readonly) BOOL centerFilled;
- (void)defaultsDidChange;
- (void)selectionScrolling:(id)arg1;
- (void)applicationResumedEventsOnly:(id)arg1;
- (void)applicationSuspendedEventsOnly:(id)arg1;
- (void)removeFromSuperview;
- (void)deactivateLayout;
- (void)clearLayouts;
@property(retain, nonatomic) TIKeyboardLayout *layoutForKeyHitTest;
- (BOOL)suppressOptOutASPCandidateUpdateForDelegate:(id)arg1;
- (void)trackResponderForAutofillIfNeeded:(id)arg1;
- (void)handleAutofillCredentialSaveIfNeeded:(id)arg1;
- (void)removeASPVisualEffectsIfNecessary:(id)arg1;
- (void)clearAutofillGroup;
- (BOOL)isMemberOfPossibleAutofillGroup:(id)arg1;
- (BOOL)isMemberOfAutofillGroup:(id)arg1;
- (BOOL)delegateAlreadyInAutofillGroup;
- (long long)needAutofillCandidate:(id)arg1;
- (BOOL)preferFallbackAutofillGroup;
- (void)setPendingAutofillIndex:(long long)arg1;
- (void)refreshAutofillModeIfNecessary;
- (void)generateAutofillCandidate;
- (long long)needAutofill;
- (BOOL)needOneTimeCodeAutofill;
- (BOOL)needAutofillLogin;
- (BOOL)textInputTraitsNeedAutofill;
- (BOOL)textInputTraitsNeedAutofillExcludeOneTimeCode;
- (void)refreshKeyboardState;
- (void)updateInputManagerMode;
- (BOOL)shouldSwitchFromInputManagerMode:(id)arg1 toInputMode:(id)arg2;
- (id)updateSecureCandidateRenderTraits;
- (unsigned long long)maxNumberOfProactiveCells;
- (id)layoutState;
- (void)dealloc;
- (void)detach;
- (void)keyboardDidHide:(id)arg1;
- (void)delayedInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setCapsLockIfNeeded;
- (void)setCapsLockSign;
@property(nonatomic) BOOL hardwareKeyboardIsSeen;
- (BOOL)_containsUsernamePasswordPairsInAutofillGroup:(id)arg1;
- (id)_fallbackAutofillGroup;
- (id)_autofillGroup;
- (void)_setAutofillGroup:(id)arg1;
- (void)_clearAutofillGroup;
- (long long)_needAutofillCandidate:(id)arg1;
- (void)logHandwritingData;
- (BOOL)isAutoDeleteActive;
- (void)testAutocorrectionPromptWithCorrection:(id)arg1;
- (int)textInputChangingCount;
- (BOOL)_isShowingCandidateUIWithAvailableCandidates;
- (void)updateFromTextInputTraits;
- (BOOL)hasAutoRepeat;
- (void)_setShiftLockedEnabled:(BOOL)arg1;
- (void)_setInputManager:(id)arg1;
- (void)createTypoTrackerReport;
- (void)composeTypologyRadar;
- (double)lastTouchDownTimestamp;
- (BOOL)_activeCandidateViewNeedsBackdrop;
- (void)lookUpResponderChainForCustomInputView;
- (void)moveCursorRightShifted:(BOOL)arg1;
- (void)moveCursorLeftShifted:(BOOL)arg1;
- (BOOL)isShiftKeyBeingHeld;
- (void)endAllowingRemoteTextInput:(id)arg1;
- (void)beginAllowingRemoteTextInput:(id)arg1;
- (void)_createRTIClientIfNecessary;
- (void)_updateRTIAllowedAndNotify:(BOOL)arg1 withReason:(id)arg2;
- (BOOL)isRTIClient;
- (void)_showAutofillExtras;
- (BOOL)shouldLoadAutofillSignUpInputViewController;
- (id)_passwordRules;
- (id)_remoteAssociatedDomains;
- (id)_remoteUnlocalizedAppName;
- (id)_remoteLocalizedAppName;
- (id)_remoteAppId;
- (id)_autofillContext;
- (id)internationalKeyDisplayStringOnEmojiKeyboard;
- (BOOL)globeKeyDisplaysAsEmojiKey;
- (void)acceptAutocorrectionAndEndComposition;
- (double)biasedKeyboardWidthRatio;
- (long long)currentHandBias;
- (BOOL)allowsReachableKeyboard;
- (id)_layout;
- (BOOL)isUsingDictationLayout;
- (void)setTextInputChangesIgnored:(BOOL)arg1;
- (void)finishSplitTransitionWithProgress:(double)arg1;
- (void)setSplit:(BOOL)arg1 animated:(BOOL)arg2;
- (id)textInteractionAssistant;
@property(readonly, nonatomic) UITextSelectionView *selectionView;
- (void)setInitialDirection;
- (BOOL)_shouldMinimizeForHardwareKeyboard;
- (void)updateKeyboardConfigurations;
- (void)clearLanguageIndicator;
- (BOOL)keyboardDrawsOpaque;
- (void)clearExcessKeyboardMemory;
- (void)_tagTouchForTypingMenu:(unsigned int)arg1;
- (void)_requestInputManagerSync;
- (void)_performInputViewControllerOutput:(id)arg1;
- (id)implProxy;
- (BOOL)_needsCandidates;
- (void)_setNeedsCandidates:(BOOL)arg1;
- (long long)_positionInCandidateList:(id)arg1;
- (BOOL)_hasCandidates;
- (id)_getAutocorrection;
- (void)_setAutocorrects:(BOOL)arg1;
- (id)_getLocalizedInputMode;
- (id)_getCurrentKeyboardName;
- (id)_getCurrentKeyplaneName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

