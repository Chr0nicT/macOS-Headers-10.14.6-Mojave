//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <UIKitCore/UIGestureRecognizerDelegatePrivate-Protocol.h>

@class NSString, NSTimer, UIHoverGestureRecognizer, UIView, _UIScrollerImp;
@protocol _UIScrollerImpPairDelegate;

__attribute__((visibility("hidden")))
@interface _UIScrollerImpPair : NSObject <UIGestureRecognizerDelegatePrivate>
{
    NSTimer *_overlayScrollerHideTimer;
    struct {
        unsigned int wantsToFlashOverlayScrollers:1;
        unsigned int windowIsVisible:1;
        unsigned int inScrollGesture:1;
        unsigned int scrollerKnobStyle:2;
        unsigned int scrollerFlashPending:1;
        unsigned int overlayScrollerStateLocked:1;
        unsigned int inVertScroller:1;
        unsigned int inHorzScroller:1;
        unsigned int areScrollersCatchable:1;
        unsigned int shouldFadeCaughtScroller:1;
    } _impPairFlags;
    UIHoverGestureRecognizer *_contentViewHoverGestureRecognizer;
    UIView *_scrollView;
    id <_UIScrollerImpPairDelegate> _delegate;
    _UIScrollerImp *_verticalScrollerImp;
    _UIScrollerImp *_horizontalScrollerImp;
    long long _scrollerStyle;
}

+ (long long)scrollerLayoutDirection;
+ (void)setSuppressScrollerFlash:(BOOL)arg1 forDecendantsOfView:(id)arg2;
+ (void)_scrollerStyleRecommendationChanged:(id)arg1;
+ (void)_updateAllScrollerImpPairsForNewRecommendedScrollerStyle:(long long)arg1;
+ (void)_observeRecommendedScrollerStyle;
@property(nonatomic) long long scrollerStyle; // @synthesize scrollerStyle=_scrollerStyle;
@property(retain, nonatomic) _UIScrollerImp *horizontalScrollerImp; // @synthesize horizontalScrollerImp=_horizontalScrollerImp;
@property(retain, nonatomic) _UIScrollerImp *verticalScrollerImp; // @synthesize verticalScrollerImp=_verticalScrollerImp;
@property(nonatomic) __weak id <_UIScrollerImpPairDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak UIView *scrollView; // @synthesize scrollView=_scrollView;
- (void).cxx_destruct;
- (BOOL)_gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;
- (BOOL)_gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)_hoverGestureRecognizerChanged:(id)arg1;
- (id)hoverGestureRecognizer;
- (void)_addRemoveTrackingAreasAsNeeded;
@property(readonly, nonatomic) BOOL inScrollGesture;
- (void)cancelScrollGesture;
- (void)endScrollGesture;
- (void)_endScrollGestureWithCancel:(BOOL)arg1;
- (void)beginScrollGesture;
- (void)endTrackingInScrollerImp:(id)arg1;
- (void)beginTrackingInScrollerImp:(id)arg1;
- (void)endLiveResize;
- (void)contentAreaDidResize;
- (void)startLiveResize;
- (void)mouseExitedContentArea;
- (void)mouseMovedInContentArea;
- (void)mouseEnteredContentArea;
- (void)windowOrderedIn;
- (void)windowOrderedOut;
- (void)movedToNewWindow;
- (void)removedFromSuperview;
- (void)contentAreaDidHide;
- (void)contentAreaScrolledInDirection:(struct CGPoint)arg1;
- (void)contentAreaScrolled;
- (BOOL)overlayScrollerStateIsLocked;
- (void)unlockOverlayScrollerState;
- (void)lockOverlayScrollerState:(long long)arg1;
- (void)hideOverlayScrollers;
- (void)flashScrollers;
- (void)_updateOverlayScrollersStateWithReason:(id)arg1 forceAtLeastKnobsVisible:(BOOL)arg2;
- (void)_updateOverlayScrollersStateWithReason:(id)arg1 forcingVisibilityForHorizontalKnob:(long long)arg2 verticalKnob:(long long)arg3;
- (void)_rescheduleOverlayScrollerHideTimerWithDelay:(double)arg1;
- (void)_cancelOverlayScrollerHideTimer;
- (void)_overlayScrollerHideTimerFired:(id)arg1;
- (void)_beginHideOverlayScrollers;
@property(readonly, nonatomic) BOOL overlayScrollersShown;
- (void)_setOverlayScrollerState:(long long)arg1 forScrollerImp:(id)arg2 forceImmediately:(BOOL)arg3;
@property(nonatomic) long long scrollerKnobStyle;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

