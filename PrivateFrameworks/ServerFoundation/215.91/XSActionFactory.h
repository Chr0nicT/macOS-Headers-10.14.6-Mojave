//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface XSActionFactory : NSObject
{
}

+ (id)actionToEnableVPNServiceWithSession:(id)arg1;
+ (id)actionToConfigureVPNAccessToNetworkService:(id)arg1 sharedSecret:(id)arg2 clientAddressRange:(struct _NSRange)arg3 session:(id)arg4;
+ (id)actionToEnableWebServiceWithSession:(id)arg1;
+ (id)actionToGetLanguagesWithSession:(id)arg1;
+ (id)actionToSetKeyboard:(id)arg1 localeIdentifier:(id)arg2 session:(id)arg3;
+ (id)actionToGetKeyboardsWithSession:(id)arg1;
+ (id)actionToEnableSMBFileServiceWithSession:(id)arg1;
+ (id)actionToCreateSharePoint:(id)arg1 session:(id)arg2;
+ (id)actionToEnableDefaultServiceSACLsWithSession:(id)arg1;
+ (id)actionToRunChangeipWithPreviousIPAddress:(id)arg1 currentIPAddress:(id)arg2 previousHostName:(id)arg3 currentHostName:(id)arg4 session:(id)arg5;
+ (id)actionToSetNetworkServices:(id)arg1 session:(id)arg2;
+ (id)actionToSetNetworkService:(id)arg1 session:(id)arg2;
+ (id)actionToGetNetworkServicesWithSession:(id)arg1;
+ (id)actionToGetInternetGatewayDeviceWithSession:(id)arg1;
+ (id)actionToConnectToWiFiNetwork:(id)arg1 usingInterface:(id)arg2 password:(id)arg3 session:(id)arg4;
+ (id)actionToGetAvailableWiFiNetworksWithSession:(id)arg1;
+ (id)actionToEnableNATServiceWithSession:(id)arg1;
+ (id)actionToConfigureNATOnNetworkInterfaceNamed:(id)arg1 session:(id)arg2;
+ (id)actionToSetMailDomainName:(id)arg1 session:(id)arg2;
+ (id)actionToGetMXRecordsForHostName:(id)arg1 session:(id)arg2;
+ (id)actionToEnableMailServiceWithSession:(id)arg1;
+ (id)actionToValidateLicense:(id)arg1 session:(id)arg2;
+ (id)actionToSetLicense:(id)arg1 session:(id)arg2;
+ (id)actionToEnableJabberServiceWithSession:(id)arg1;
+ (id)actionToMarkRolesAsConfigured:(id)arg1 session:(id)arg2;
+ (id)actionToMarkServicesAsConfigured:(id)arg1 session:(id)arg2;
+ (id)actionToInvalidateInfoCacheWithSession:(id)arg1;
+ (id)actionToResolveHostName:(id)arg1 session:(id)arg2;
+ (id)actionToSetHostName:(id)arg1 computerName:(id)arg2 bonjourName:(id)arg3 session:(id)arg4;
+ (id)actionToGetHostNamesForIPAddress:(id)arg1 session:(id)arg2;
+ (id)actionToGetHostNamesWithSession:(id)arg1;
+ (id)actionToConfigureGatewayWithPrivateNetworkService:(id)arg1 publicNetworkService:(id)arg2 session:(id)arg3;
+ (id)actionToCreateFolderAtPath:(id)arg1 session:(id)arg2;
+ (id)actionToGetIconsForPaths:(id)arg1 ofSize:(struct CGSize)arg2 session:(id)arg3;
+ (id)actionToGetVolumesWithSession:(id)arg1;
+ (id)actionToSetEventMonitorConfig:(id)arg1 withSession:(id)arg2;
+ (id)actionToGetEventMonitorConfigWithSession:(id)arg1;
+ (id)actionToConfigureMinimalDNSWithHostName:(id)arg1 networkServices:(id)arg2 forwarders:(id)arg3 adminEmail:(id)arg4 airPortPassword:(id)arg5 session:(id)arg6;
+ (BOOL)shouldProceedPastDNSReadSettingsAction:(id)arg1 inQueue:(id)arg2;
+ (id)actionToConfigureMinimalDNSWithHostName:(id)arg1 networkService:(id)arg2 forwarders:(id)arg3 adminEmail:(id)arg4 airPortPassword:(id)arg5 session:(id)arg6;
+ (id)actionToUpgradeDNSWithSession:(id)arg1;
+ (id)actionToEnableDNSServiceWithSession:(id)arg1;
+ (id)actionToValidateCredentialsForODServer:(id)arg1 userName:(id)arg2 password:(id)arg3 session:(id)arg4;
+ (id)actionToValidateCredentialsForADServer:(id)arg1 userName:(id)arg2 password:(id)arg3 clientID:(id)arg4 session:(id)arg5;
+ (id)actionToGetInfoForDirectoryServer:(id)arg1 session:(id)arg2;
+ (id)actionToGetAvailableDirectoryServersWithSession:(id)arg1;
+ (id)actionToDecommissionDirectoryServerReplicaWithRootPassword:(id)arg1 dirAdminShortName:(id)arg2 dirAdminPassword:(id)arg3 makeStandalone:(BOOL)arg4 session:(id)arg5;
+ (id)actionToConfigureAsConnectedDirectoryServerWithSession:(id)arg1;
+ (id)actionToConfigureAsStandaloneDirectoryServerWithSession:(id)arg1;
+ (id)actionToPromoteReplicaToMasterDirectoryServerWithDirAdminShortName:(id)arg1 dirAdminPassword:(id)arg2 certArchivePath:(id)arg3 certArchivePass:(id)arg4 session:(id)arg5;
+ (id)actionToConfigureAsReplicaOfDirectoryServer:(id)arg1 rootPassword:(id)arg2 dirAdminShortName:(id)arg3 dirAdminPassword:(id)arg4 session:(id)arg5;
+ (id)actionToConfigureAsReplicaOfDirectoryServer:(id)arg1 rootPassword:(id)arg2 dirAdminShortName:(id)arg3 dirAdminPassword:(id)arg4 certAdminEmail:(id)arg5 session:(id)arg6;
+ (id)actionToCreateLDAPMasterWithHostName:(id)arg1 adminPassword:(id)arg2 session:(id)arg3;
+ (id)actionToCreateLDAPMasterWithDirAdminFullName:(id)arg1 dirAdminShortName:(id)arg2 dirAdminPassword:(id)arg3 dirAdminUID:(long long)arg4 kerberosRealm:(id)arg5 searchBase:(id)arg6 session:(id)arg7;
+ (id)actionToCreateLDAPMasterWithDirAdminFullName:(id)arg1 dirAdminShortName:(id)arg2 dirAdminPassword:(id)arg3 dirAdminUID:(long long)arg4 kerberosRealm:(id)arg5 searchBase:(id)arg6 certAuthName:(id)arg7 certOrgName:(id)arg8 certAdminEmail:(id)arg9 session:(id)arg10;
+ (id)actionToBindToADServer:(id)arg1 userName:(id)arg2 password:(id)arg3 clientComputerID:(id)arg4 session:(id)arg5;
+ (id)actionToAddODServer:(id)arg1 userName:(id)arg2 password:(id)arg3 clientComputerID:(id)arg4 addCertificates:(BOOL)arg5 session:(id)arg6;
+ (id)actionToAddODServer:(id)arg1 userName:(id)arg2 password:(id)arg3 clientComputerID:(id)arg4 session:(id)arg5;
+ (id)actionToEnableDHCPServiceWithSession:(id)arg1;
+ (id)actionToAddDHCPGroupNamed:(id)arg1 fromAddress:(id)arg2 toAddress:(id)arg3 subnetMask:(id)arg4 networkInterfaceName:(id)arg5 dnsServers:(id)arg6 dhcpRouter:(id)arg7 session:(id)arg8;
+ (id)actionToAddDHCPGroupForNetworkInterface:(id)arg1 clientAddressRange:(struct _NSRange)arg2 session:(id)arg3;
+ (id)actionToSetNTPServer:(id)arg1 session:(id)arg2;
+ (id)actionToSetTimeZone:(id)arg1 cityRecordID:(id)arg2 session:(id)arg3;
+ (id)actionToEnableCalendarServiceWithSession:(id)arg1;
+ (id)actionToGetBonjourInstanceNamesForServiceType:(id)arg1 session:(id)arg2;
+ (id)actionToSetDHCPDistributedDNSServers:(id)arg1 airPortAdminPassword:(id)arg2 session:(id)arg3;
+ (id)actionToReserveIPAddressWithAirPortAdminPassword:(id)arg1 session:(id)arg2;
+ (id)actionToReserveIPAddress:(id)arg1 andSetDNSServers:(id)arg2 session:(id)arg3;
+ (id)openAirPortTransactionAndPerformAdminAction:(id)arg1 session:(id)arg2;
+ (id)actionToEnableAirPortManagementWithPassword:(id)arg1 session:(id)arg2;
+ (id)actionToEnableAFPFileServiceWithSession:(id)arg1;
+ (id)actionToEnableAddressBookServiceWithSession:(id)arg1;
+ (id)actionToSetSSHState:(BOOL)arg1 session:(id)arg2;
+ (id)actionToSetRemoteManagementState:(BOOL)arg1 session:(id)arg2;
+ (id)actionToSetScreenSharingState:(BOOL)arg1 session:(id)arg2;
+ (id)actionToSetConfiguration:(id)arg1 forService:(id)arg2 adminPluginName:(id)arg3 session:(id)arg4;
+ (id)actionToGetSettingsForService:(id)arg1 adminPluginName:(id)arg2 session:(id)arg3;
+ (id)actionToRestartRunningService:(id)arg1 adminPluginName:(id)arg2 session:(id)arg3;
+ (id)actionToRestartService:(id)arg1 adminPluginName:(id)arg2 session:(id)arg3;
+ (id)actionToDisableService:(id)arg1 adminPluginName:(id)arg2 session:(id)arg3;
+ (id)actionToEnableService:(id)arg1 adminPluginName:(id)arg2 session:(id)arg3;
+ (id)actionToGetStateOfServiceWithAdminPluginName:(id)arg1 session:(id)arg2;

@end

