//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <PodcastProducerKit/PCPSourceRecorder.h>

#import <PodcastProducerKit/NSCoding-Protocol.h>

@class NSDate, NSNumber, NSString, NSURL, QTCaptureMovieFileOutput, QTCaptureSession, QTCompressionOptions;

@interface PCPLocalVideoRecorder : PCPSourceRecorder <NSCoding>
{
    QTCaptureSession *_captureSession;
    QTCompressionOptions *_audioCompressionOptions;
    QTCompressionOptions *_videoCompressionOptions;
    NSURL *_outputFileURL;
    NSDate *_recordingStartDate;
    NSDate *_recordingStopDate;
    NSString *_submissionUUID;
    QTCaptureMovieFileOutput *_movieFileOutput;
    BOOL _deleteMovieFileWhenItFinishesRecording;
    BOOL _isSubmitted;
    NSNumber *_hostTimeToStart;
    NSNumber *_hostTimeToPause;
    NSNumber *_hostTimeToResume;
}

+ (id)recorderWithCaptureSession:(id)arg1;
@property(retain) NSNumber *hostTimeToResume; // @synthesize hostTimeToResume=_hostTimeToResume;
@property(retain) NSNumber *hostTimeToPause; // @synthesize hostTimeToPause=_hostTimeToPause;
@property(retain) NSNumber *hostTimeToStart; // @synthesize hostTimeToStart=_hostTimeToStart;
@property BOOL isSubmitted; // @synthesize isSubmitted=_isSubmitted;
@property(retain) NSString *submissionUUID; // @synthesize submissionUUID=_submissionUUID;
@property(retain) QTCaptureMovieFileOutput *movieFileOutput; // @synthesize movieFileOutput=_movieFileOutput;
@property(retain) NSDate *recordingStopDate; // @synthesize recordingStopDate=_recordingStopDate;
@property(retain) NSDate *recordingStartDate; // @synthesize recordingStartDate=_recordingStartDate;
@property(retain) NSURL *outputFileURL; // @synthesize outputFileURL=_outputFileURL;
@property(retain) QTCompressionOptions *videoCompressionOptions; // @synthesize videoCompressionOptions=_videoCompressionOptions;
@property(retain) QTCompressionOptions *audioCompressionOptions; // @synthesize audioCompressionOptions=_audioCompressionOptions;
@property(retain) QTCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
- (void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 forConnections:(id)arg3 dueToError:(id)arg4;
- (void)captureOutput:(id)arg1 willFinishRecordingToOutputFileAtURL:(id)arg2 forConnections:(id)arg3 dueToError:(id)arg4;
- (void)captureOutput:(id)arg1 didResumeRecordingToOutputFileAtURL:(id)arg2 forConnections:(id)arg3;
- (void)captureOutput:(id)arg1 didPauseRecordingToOutputFileAtURL:(id)arg2 forConnections:(id)arg3;
- (void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 forConnections:(id)arg3;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(id)arg2 fromConnection:(id)arg3;
- (void)cancel;
- (void)stop;
- (void)resume;
- (void)pause;
- (void)startWithDelay:(double)arg1;
- (void)bootstrap;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCaptureSession:(id)arg1;
- (void)commonInit;

@end

