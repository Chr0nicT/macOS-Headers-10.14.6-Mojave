//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <ACDEClient/ACFRunLoopScheduling-Protocol.h>

@class ACFHTTPMethod, ACFHTTPMethodInvocationInternal, NSString, NSURL;
@protocol ACFHTTPMethodInvocationDelegate;

__attribute__((visibility("hidden")))
@interface ACFHTTPMethodInvocation : NSObject <ACFRunLoopScheduling>
{
    ACFHTTPMethod *_method;
    NSURL *_url;
    double _timeout;
    id _delegate;
    id _internal;
    BOOL _isWaitingForResponse;
}

+ (id)invocationWithMethod:(id)arg1 url:(id)arg2 timeout:(double)arg3 delegate:(id)arg4 invokeImmediately:(BOOL)arg5;
+ (id)invocation;
+ (id)invokeHTTPMethodSynchronously:(id)arg1 withURL:(id)arg2 timeout:(double)arg3 result:(id *)arg4;
@property(readonly, retain) ACFHTTPMethodInvocationInternal *internal; // @synthesize internal=_internal;
@property id <ACFHTTPMethodInvocationDelegate> delegate; // @synthesize delegate=_delegate;
@property BOOL isWaitingForResponse; // @synthesize isWaitingForResponse=_isWaitingForResponse;
@property(readonly) double timeout; // @synthesize timeout=_timeout;
@property(readonly, retain) NSURL *url; // @synthesize url=_url;
@property(readonly, retain) ACFHTTPMethod *method; // @synthesize method=_method;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)cancel;
- (void)invoke;
- (id)initWithMethod:(id)arg1 url:(id)arg2 timeout:(double)arg3 delegate:(id)arg4 invokeImmediately:(BOOL)arg5;
- (id)init;
- (void)dealloc;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

