//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class CoreWiFiChannel, CoreWiFiWakeOnWireless, NSData, NSMutableArray, NSString;

@interface CoreWiFiInterface : NSObject
{
    NSData *ifMAC;
    NSString *ifName;
    NSString *ifRole;
    NSString *ifParent;
    unsigned long long numSpatialStreams;
    BOOL supports80211a;
    BOOL supports80211ac;
    BOOL supports80211b;
    BOOL supports80211g;
    BOOL supports80211n;
    BOOL supportsWEP;
    BOOL supportsTKIP;
    BOOL supportsAES;
    BOOL supportsAESCCM;
    BOOL supportsCKIP;
    BOOL supportsIBSS;
    BOOL supportsPowerManagement;
    BOOL supportsAccessPoint;
    BOOL supportsTxPowerManagement;
    BOOL supportsShortSlotTime;
    BOOL supportsShortPreamble;
    BOOL supportsMonitorMode;
    BOOL supportsTKIPMIC;
    BOOL supportsWPA1;
    BOOL supportsWPA2;
    BOOL supportsWPA;
    BOOL supportsFrameBursting;
    BOOL supportsWME;
    BOOL supportsShortGI40MHz;
    BOOL supportsShortGI20MHz;
    BOOL supportsWakeOnWireless;
    BOOL supportsTSN;
    BOOL supportsMultiSSIDScan;
    BOOL supportsBluetoothCoexistence;
    BOOL supportsActionFrames;
    BOOL supportsAppleP2P;
    BOOL supportsOpportunisticRoam;
    BOOL supportsAqm;
    BOOL supportsRxPolling;
    BOOL supportsDualBand;
    BOOL supportsApMode;
    BOOL supportsEnhancedBgScan;
    BOOL supportsAwdl;
    BOOL supportsFtVe;
    BOOL supportsOffloadScanning;
    BOOL supportsOffloadBeaconProcessing;
    BOOL supportsOffloadChannelSwitch;
    BOOL supportsOffloadKeepaliveL2;
    BOOL supportsOffloadRsn;
    BOOL supportsOffloadGtk;
    BOOL supportsOffloadArpNdp;
    BOOL supportsOffloadTcpChecksum;
    BOOL supportsPerChainAck;
    BOOL supportsShortGI80MHz;
    BOOL supportsShortGI160MHz;
    NSMutableArray *spatialStreams;
    NSMutableArray *availableChannels;
    CoreWiFiWakeOnWireless *wow;
    NSData *currentBSSID;
    NSData *currentCountryCode;
    CoreWiFiChannel *currentChannel;
    NSData *currentSSID;
    long long currentSupportedPhyModes;
    long long currentActivePhyMode;
    long long unitOfRssi;
    long long aggregateControlRssi;
    long long aggregateExtensionRssi;
    long long unitOfNoise;
    long long aggregateControlNoise;
    long long aggregateExtensionNoise;
}

+ (id)queryPhysicalInterfaceList:(id *)arg1;
+ (id)queryList:(id *)arg1;
+ (id)interfaceWithName:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) long long aggregateExtensionNoise; // @synthesize aggregateExtensionNoise;
@property(readonly, nonatomic) long long aggregateControlNoise; // @synthesize aggregateControlNoise;
@property(readonly, nonatomic) long long unitOfNoise; // @synthesize unitOfNoise;
@property(readonly, nonatomic) long long aggregateExtensionRssi; // @synthesize aggregateExtensionRssi;
@property(readonly, nonatomic) long long aggregateControlRssi; // @synthesize aggregateControlRssi;
@property(readonly, nonatomic) long long unitOfRssi; // @synthesize unitOfRssi;
@property(readonly, nonatomic) long long currentActivePhyMode; // @synthesize currentActivePhyMode;
@property(readonly, nonatomic) long long currentSupportedPhyModes; // @synthesize currentSupportedPhyModes;
@property(readonly, retain, nonatomic) NSData *currentSSID; // @synthesize currentSSID;
@property(readonly, retain, nonatomic) CoreWiFiChannel *currentChannel; // @synthesize currentChannel;
@property(readonly, retain, nonatomic) NSData *currentCountryCode; // @synthesize currentCountryCode;
@property(readonly, retain, nonatomic) NSData *currentBSSID; // @synthesize currentBSSID;
@property(readonly, retain, nonatomic) CoreWiFiWakeOnWireless *wow; // @synthesize wow;
@property(readonly, retain, nonatomic) NSMutableArray *spatialStreams; // @synthesize spatialStreams;
@property(readonly, retain, nonatomic) NSMutableArray *availableChannels; // @synthesize availableChannels;
@property(readonly, nonatomic) BOOL supportsShortGI160MHz; // @synthesize supportsShortGI160MHz;
@property(readonly, nonatomic) BOOL supportsShortGI80MHz; // @synthesize supportsShortGI80MHz;
@property(readonly, nonatomic) BOOL supportsPerChainAck; // @synthesize supportsPerChainAck;
@property(readonly, nonatomic) BOOL supportsOffloadTcpChecksum; // @synthesize supportsOffloadTcpChecksum;
@property(readonly, nonatomic) BOOL supportsOffloadArpNdp; // @synthesize supportsOffloadArpNdp;
@property(readonly, nonatomic) BOOL supportsOffloadGtk; // @synthesize supportsOffloadGtk;
@property(readonly, nonatomic) BOOL supportsOffloadRsn; // @synthesize supportsOffloadRsn;
@property(readonly, nonatomic) BOOL supportsOffloadKeepaliveL2; // @synthesize supportsOffloadKeepaliveL2;
@property(readonly, nonatomic) BOOL supportsOffloadChannelSwitch; // @synthesize supportsOffloadChannelSwitch;
@property(readonly, nonatomic) BOOL supportsOffloadBeaconProcessing; // @synthesize supportsOffloadBeaconProcessing;
@property(readonly, nonatomic) BOOL supportsOffloadScanning; // @synthesize supportsOffloadScanning;
@property(readonly, nonatomic) BOOL supportsFtVe; // @synthesize supportsFtVe;
@property(readonly, nonatomic) BOOL supportsAwdl; // @synthesize supportsAwdl;
@property(readonly, nonatomic) BOOL supportsEnhancedBgScan; // @synthesize supportsEnhancedBgScan;
@property(readonly, nonatomic) BOOL supportsApMode; // @synthesize supportsApMode;
@property(readonly, nonatomic) BOOL supportsDualBand; // @synthesize supportsDualBand;
@property(readonly, nonatomic) BOOL supportsRxPolling; // @synthesize supportsRxPolling;
@property(readonly, nonatomic) BOOL supportsAqm; // @synthesize supportsAqm;
@property(readonly, nonatomic) BOOL supportsOpportunisticRoam; // @synthesize supportsOpportunisticRoam;
@property(readonly, nonatomic) BOOL supportsAppleP2P; // @synthesize supportsAppleP2P;
@property(readonly, nonatomic) BOOL supportsActionFrames; // @synthesize supportsActionFrames;
@property(readonly, nonatomic) BOOL supportsBluetoothCoexistence; // @synthesize supportsBluetoothCoexistence;
@property(readonly, nonatomic) BOOL supportsMultiSSIDScan; // @synthesize supportsMultiSSIDScan;
@property(readonly, nonatomic) BOOL supportsTSN; // @synthesize supportsTSN;
@property(readonly, nonatomic) BOOL supportsWakeOnWireless; // @synthesize supportsWakeOnWireless;
@property(readonly, nonatomic) BOOL supportsShortGI20MHz; // @synthesize supportsShortGI20MHz;
@property(readonly, nonatomic) BOOL supportsShortGI40MHz; // @synthesize supportsShortGI40MHz;
@property(readonly, nonatomic) BOOL supportsWME; // @synthesize supportsWME;
@property(readonly, nonatomic) BOOL supportsFrameBursting; // @synthesize supportsFrameBursting;
@property(readonly, nonatomic) BOOL supportsWPA; // @synthesize supportsWPA;
@property(readonly, nonatomic) BOOL supportsWPA2; // @synthesize supportsWPA2;
@property(readonly, nonatomic) BOOL supportsWPA1; // @synthesize supportsWPA1;
@property(readonly, nonatomic) BOOL supportsTKIPMIC; // @synthesize supportsTKIPMIC;
@property(readonly, nonatomic) BOOL supportsMonitorMode; // @synthesize supportsMonitorMode;
@property(readonly, nonatomic) BOOL supportsShortPreamble; // @synthesize supportsShortPreamble;
@property(readonly, nonatomic) BOOL supportsShortSlotTime; // @synthesize supportsShortSlotTime;
@property(readonly, nonatomic) BOOL supportsTxPowerManagement; // @synthesize supportsTxPowerManagement;
@property(readonly, nonatomic) BOOL supportsAccessPoint; // @synthesize supportsAccessPoint;
@property(readonly, nonatomic) BOOL supportsPowerManagement; // @synthesize supportsPowerManagement;
@property(readonly, nonatomic) BOOL supportsIBSS; // @synthesize supportsIBSS;
@property(readonly, nonatomic) BOOL supportsCKIP; // @synthesize supportsCKIP;
@property(readonly, nonatomic) BOOL supportsAESCCM; // @synthesize supportsAESCCM;
@property(readonly, nonatomic) BOOL supportsAES; // @synthesize supportsAES;
@property(readonly, nonatomic) BOOL supportsTKIP; // @synthesize supportsTKIP;
@property(readonly, nonatomic) BOOL supportsWEP; // @synthesize supportsWEP;
@property(readonly, nonatomic) BOOL supports80211n; // @synthesize supports80211n;
@property(readonly, nonatomic) BOOL supports80211g; // @synthesize supports80211g;
@property(readonly, nonatomic) BOOL supports80211b; // @synthesize supports80211b;
@property(readonly, nonatomic) BOOL supports80211ac; // @synthesize supports80211ac;
@property(readonly, nonatomic) BOOL supports80211a; // @synthesize supports80211a;
@property(readonly, nonatomic) unsigned long long numSpatialStreams; // @synthesize numSpatialStreams;
@property(readonly, retain, nonatomic) NSString *ifParent; // @synthesize ifParent;
@property(readonly, retain, nonatomic) NSString *ifRole; // @synthesize ifRole;
@property(readonly, retain, nonatomic) NSString *ifName; // @synthesize ifName;
@property(readonly, retain, nonatomic) NSData *ifMAC; // @synthesize ifMAC;
@property(readonly) BOOL isVirtual; // @dynamic isVirtual;
@property(readonly) BOOL isPhysical; // @dynamic isPhysical;
- (id)skeleton;
- (id)debugDescription;
- (id)description;
- (void)dealloc;
- (id)initWithSkeleton:(id)arg1;
- (id)initWithMAC:(id)arg1 withBSDName:(id)arg2;
- (id)queryVirtualInterfaceList:(id *)arg1;
- (BOOL)deleteVirtualInterface:(id *)arg1;
- (id)createInterfaceWDS:(id)arg1 error:(id *)arg2;
- (id)createInterfaceP2pGO:(id *)arg1;
- (id)createInterfaceP2pDevice:(id *)arg1;
- (id)createInterfaceP2pClient:(id *)arg1;
- (id)createInterfaceAP:(id)arg1 error:(id *)arg2;
- (id)queryChannelList:(id *)arg1;
- (id)queryInformationElementList:(id *)arg1;
- (BOOL)removeInformationElement:(id)arg1 error:(id *)arg2;
- (BOOL)addInformationElement:(id)arg1 error:(id *)arg2;
- (BOOL)changeInterfaceRole:(id)arg1 error:(id *)arg2;
- (BOOL)disableInterface:(id *)arg1;
- (BOOL)enableInterface:(id *)arg1;
- (BOOL)setPMK:(id)arg1 forBSSID:(id)arg2 error:(id *)arg3;
- (BOOL)setPMK:(id)arg1 error:(id *)arg2;
- (BOOL)setWEPKey:(id)arg1 keyIndex:(unsigned long long)arg2 isTX:(id)arg3 isRX:(id)arg4 isUnicast:(id)arg5 isMulticast:(id)arg6 error:(id *)arg7;
- (BOOL)leaveBSS:(id *)arg1;
- (BOOL)joinBSS:(id)arg1 passphrase:(id)arg2 bssid:(id)arg3 error:(id *)arg4;
- (BOOL)joinBSS:(id)arg1 error:(id *)arg2;
- (id)queryClientList:(id *)arg1;
- (BOOL)bssStop:(id *)arg1;
- (BOOL)bssStart:(id *)arg1;

@end

