//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <AVConference/VCVideoCapture.h>

#import <AVConference/VideoCaptureProtocol-Protocol.h>

@class NSObject;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

__attribute__((visibility("hidden")))
@interface TundraVideoCapture : VCVideoCapture <VideoCaptureProtocol>
{
    struct OpaqueCMIOGraph *_graph;
    struct {
        struct __sFILE *stuff;
        CDUnknownFunctionPointerType requestRenderCallback;
        void *requestRenderCallbackRefcon;
        struct opaqueCMFormatDescription *formatDesc;
        void *func_arg;
        CDUnknownFunctionPointerType func_video;
        void *clockOrTimebase;
        struct OpaqueCMIOGraph *theGraph;
    } _videoStore;
    unsigned int _selectedCameraID;
    struct OpaqueCMClock *_clockForDevice;
    BOOL _quit;
    BOOL _frameAvailable;
    BOOL _capturing;
    BOOL _previewing;
    struct OpaqueFigThread *_tidFrame;
    int _lastRequestedWidth;
    int _lastRequestedHeight;
    int _lastRequestedFrameRate;
    int _conferenceFrameRate;
    int _sensorFrameRate;
    int _frameCounterForDrop;
    int _frameCounterForRate;
    double _referenceTimestamp;
    double _lastPreviewFrameTime;
    double _lastCaptureFrameTime;
    NSObject<OS_dispatch_queue> *_captureSessionQueue;
    struct _opaque_pthread_mutex_t _xLiveSource;
    struct opaqueCMBufferQueue *_previewQueue;
    struct opaqueCMBufferQueue *_captureQueue;
    int _previewFrameCount;
    int _captureFrameCount;
    NSObject<OS_dispatch_semaphore> *_frameAvailableSemaphore;
    struct __CVPixelBufferPool *_captureBufferPool;
    struct OpaqueVTPixelTransferSession *_captureTransferSession;
}

- (int)frameBecameAvailableCount:(int *)arg1 figBufferQueueEmptyCount:(int *)arg2 figBufferQueueErrorCount:(int *)arg3;
- (BOOL)cameraSupportsFormatWidth:(int)arg1 height:(int)arg2;
- (BOOL)isFrontCamera;
- (int)setFrameRate:(int)arg1;
- (BOOL)cameraSupportsFastFormatSwitching;
- (id)getCameraUID;
- (int)setCameraWithUID:(id)arg1;
- (int)getPreviewFrameCount:(int *)arg1 captureFrameCount:(int *)arg2 reset:(BOOL)arg3;
- (BOOL)isPreviewRunning;
- (int)copyColorInfo:(const struct __CFDictionary **)arg1;
- (int)setWidth:(int)arg1 height:(int)arg2 frameRate:(int)arg3;
- (int)getCamera:(unsigned int *)arg1;
- (int)setCamera:(unsigned int)arg1;
- (int)setUpDVCamera;
- (int)stop:(BOOL)arg1;
- (int)_startCaptureWithWidth:(int)arg1 height:(int)arg2 frameRate:(int)arg3;
- (int)startCaptureWithWidth:(int)arg1 height:(int)arg2 frameRate:(int)arg3;
- (int)_startPreview;
- (int)startPreview;
- (int)processFrame:(int)arg1 discard:(int)arg2;
- (void)resizeCameraBufferToCaptureSize:(struct __CVBuffer **)arg1;
- (void)frameProc;
- (void)videoDataBecameReady:(struct opaqueCMSampleBuffer *)arg1;
- (void)updateSensorFramerate;
- (void)dealloc;
- (id)initWithCaptureServer:(id)arg1 width:(int)arg2 height:(int)arg3 frameRate:(int)arg4 cameraUID:(id)arg5 error:(int *)arg6;

@end

