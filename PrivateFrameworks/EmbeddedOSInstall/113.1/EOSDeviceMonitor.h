//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  9 2015 22:53:21).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2014 by Steve Nygard.
//

#import <objc/NSObject.h>

@class EOSDevice, NSArray, NSError, NSThread;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface EOSDeviceMonitor : NSObject
{
    BOOL _invalidated;
    unsigned int _locationID;
    long long _validDeviceModes;
    NSArray *_validDeviceTypes;
    double _connectionTimeout;
    double _disconnectionTimeout;
    NSObject<OS_dispatch_semaphore> *_deviceConnected;
    NSObject<OS_dispatch_semaphore> *_deviceDisconnected;
    NSObject<OS_dispatch_semaphore> *_stopDeviceNotificationsThread;
    NSThread *_deviceNotificationsThread;
    struct USBMuxListener *_muxListener;
    NSObject<OS_dispatch_queue> *_deviceQueue;
    NSObject<OS_dispatch_queue> *_eosNotificationsQueue;
    EOSDevice *_device;
    NSError *_error;
}

@property BOOL invalidated; // @synthesize invalidated=_invalidated;
@property(retain) NSError *error; // @synthesize error=_error;
@property(retain) EOSDevice *device; // @synthesize device=_device;
@property(retain) NSObject<OS_dispatch_queue> *eosNotificationsQueue; // @synthesize eosNotificationsQueue=_eosNotificationsQueue;
@property(retain) NSObject<OS_dispatch_queue> *deviceQueue; // @synthesize deviceQueue=_deviceQueue;
@property struct USBMuxListener *muxListener; // @synthesize muxListener=_muxListener;
@property(retain) NSThread *deviceNotificationsThread; // @synthesize deviceNotificationsThread=_deviceNotificationsThread;
@property(retain) NSObject<OS_dispatch_semaphore> *stopDeviceNotificationsThread; // @synthesize stopDeviceNotificationsThread=_stopDeviceNotificationsThread;
@property(retain) NSObject<OS_dispatch_semaphore> *deviceDisconnected; // @synthesize deviceDisconnected=_deviceDisconnected;
@property(retain) NSObject<OS_dispatch_semaphore> *deviceConnected; // @synthesize deviceConnected=_deviceConnected;
@property double disconnectionTimeout; // @synthesize disconnectionTimeout=_disconnectionTimeout;
@property double connectionTimeout; // @synthesize connectionTimeout=_connectionTimeout;
@property unsigned int locationID; // @synthesize locationID=_locationID;
@property(retain) NSArray *validDeviceTypes; // @synthesize validDeviceTypes=_validDeviceTypes;
@property long long validDeviceModes; // @synthesize validDeviceModes=_validDeviceModes;
- (void).cxx_destruct;
- (void)_deviceDidChange:(void *)arg1 mode:(long long)arg2 connected:(BOOL)arg3;
- (void)_stopDeviceNotificationsThread;
- (void)_startListeningToDeviceNotifications;
- (void)_startDeviceNotificationsThread;
- (void)invalidate;
- (BOOL)waitForDeviceDisconnectionWithError:(id *)arg1;
- (id)waitForDeviceConnectionWithError:(id *)arg1;
- (id)init;

@end

